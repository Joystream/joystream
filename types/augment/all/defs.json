{
    "MemoText": "Text",
    "Credential": "u64",
    "CredentialSet": "Vec<Credential>",
    "BlockAndTime": {
        "block": "u32",
        "time": "u64"
    },
    "ThreadId": "u64",
    "PostId": "u64",
    "InputValidationLengthConstraint": {
        "min": "u16",
        "max_min_diff": "u16"
    },
    "WorkingGroup": {
        "_enum": [
            "Storage"
        ]
    },
    "SlashingTerms": {
        "_enum": {
            "Unslashable": "Null",
            "Slashable": "SlashableTerms"
        }
    },
    "SlashableTerms": {
        "max_count": "u16",
        "max_percent_pts_per_time": "u16"
    },
    "EntryMethod": {
        "_enum": {
            "Paid": "u64",
            "Screening": "AccountId",
            "Genesis": "Null"
        }
    },
    "MemberId": "u64",
    "PaidTermId": "u64",
    "SubscriptionId": "u64",
    "Membership": {
        "handle": "Text",
        "avatar_uri": "Text",
        "about": "Text",
        "registered_at_block": "u32",
        "registered_at_time": "u64",
        "entry": "EntryMethod",
        "suspended": "bool",
        "subscription": "Option<SubscriptionId>",
        "root_account": "GenericAccountId",
        "controller_account": "GenericAccountId"
    },
    "PaidMembershipTerms": {
        "fee": "u128",
        "text": "Text"
    },
    "ActorId": "u64",
    "ElectionStage": {
        "_enum": {
            "Announcing": "u32",
            "Voting": "u32",
            "Revealing": "u32"
        }
    },
    "ElectionStake": {
        "new": "u128",
        "transferred": "u128"
    },
    "SealedVote": {
        "voter": "GenericAccountId",
        "commitment": "[u8;32]",
        "stake": "ElectionStake",
        "vote": "Option<GenericAccountId>"
    },
    "TransferableStake": {
        "seat": "u128",
        "backing": "u128"
    },
    "ElectionParameters": {
        "announcing_period": "u32",
        "voting_period": "u32",
        "revealing_period": "u32",
        "council_size": "u32",
        "candidacy_limit": "u32",
        "new_term_duration": "u32",
        "min_council_stake": "u128",
        "min_voting_stake": "u128"
    },
    "Seat": {
        "member": "GenericAccountId",
        "stake": "u128",
        "backers": "Backers"
    },
    "Seats": "Vec<Seat>",
    "Backer": {
        "member": "GenericAccountId",
        "stake": "u128"
    },
    "Backers": "Vec<Backer>",
    "RoleParameters": {
        "min_stake": "u128",
        "min_actors": "u32",
        "max_actors": "u32",
        "reward": "u128",
        "reward_period": "u32",
        "bonding_period": "u32",
        "unbonding_period": "u32",
        "min_service_period": "u32",
        "startup_grace_period": "u32",
        "entry_request_fee": "u128"
    },
    "PostTextChange": {
        "expired_at": "BlockAndTime",
        "text": "Text"
    },
    "ModerationAction": {
        "moderated_at": "BlockAndTime",
        "moderator_id": "GenericAccountId",
        "rationale": "Text"
    },
    "ChildPositionInParentCategory": {
        "parent_id": "CategoryId",
        "child_nr_in_parent_category": "u32"
    },
    "CategoryId": "u64",
    "Category": {
        "id": "CategoryId",
        "title": "Text",
        "description": "Text",
        "created_at": "BlockAndTime",
        "deleted": "bool",
        "archived": "bool",
        "num_direct_subcategories": "u32",
        "num_direct_unmoderated_threads": "u32",
        "num_direct_moderated_threads": "u32",
        "position_in_parent_category": "Option<ChildPositionInParentCategory>",
        "moderator_id": "GenericAccountId"
    },
    "Thread": {
        "id": "ThreadId",
        "title": "Text",
        "category_id": "CategoryId",
        "nr_in_category": "u32",
        "moderation": "Option<ModerationAction>",
        "num_unmoderated_posts": "u32",
        "num_moderated_posts": "u32",
        "created_at": "BlockAndTime",
        "author_id": "GenericAccountId"
    },
    "Post": {
        "id": "PostId",
        "thread_id": "ThreadId",
        "nr_in_thread": "u32",
        "current_text": "Text",
        "moderation": "Option<ModerationAction>",
        "text_change_history": "Vec<PostTextChange>",
        "created_at": "BlockAndTime",
        "author_id": "GenericAccountId"
    },
    "ReplyId": "u64",
    "Reply": {
        "owner": "GenericAccountId",
        "thread_id": "ThreadId",
        "text": "Text",
        "moderation": "Option<ModerationAction>"
    },
    "StakeId": "u64",
    "Stake": {
        "created": "u32",
        "staking_status": "StakingStatus"
    },
    "StakingStatus": {
        "_enum": {
            "NotStaked": "Null",
            "Staked": "Staked"
        }
    },
    "Staked": {
        "staked_amount": "u128",
        "staked_status": "StakedStatus",
        "next_slash_id": "u64",
        "ongoing_slashes": "BTreeMap<u64,Slash>"
    },
    "StakedStatus": {
        "_enum": {
            "Normal": "Null",
            "Unstaking": "Unstaking"
        }
    },
    "Unstaking": {
        "started_at_block": "u32",
        "is_active": "bool",
        "blocks_remaining_in_active_period_for_unstaking": "u32"
    },
    "Slash": {
        "started_at_block": "u32",
        "is_active": "bool",
        "blocks_remaining_in_active_period_for_slashing": "u32",
        "slash_amount": "u128"
    },
    "MintId": "u64",
    "Mint": {
        "capacity": "u128",
        "next_adjustment": "Option<NextAdjustment>",
        "created_at": "u32",
        "total_minted": "u128"
    },
    "MintBalanceOf": "Balance",
    "BalanceOfMint": "Balance",
    "NextAdjustment": {
        "adjustment": "AdjustOnInterval",
        "at_block": "u32"
    },
    "AdjustOnInterval": {
        "block_interval": "u32",
        "adjustment_type": "AdjustCapacityBy"
    },
    "AdjustCapacityBy": {
        "_enum": {
            "Setting": "u128",
            "Adding": "u128",
            "Reducing": "u128"
        }
    },
    "RecipientId": "u64",
    "RewardRelationshipId": "u64",
    "Recipient": {
        "total_reward_received": "u128",
        "total_reward_missed": "u128"
    },
    "RewardRelationship": {
        "recipient": "u64",
        "mint_id": "u64",
        "account": "GenericAccountId",
        "amount_per_payout": "u128",
        "next_payment_at_block": "Option<u32>",
        "payout_interval": "Option<u32>",
        "total_reward_received": "u128",
        "total_reward_missed": "u128"
    },
    "ApplicationId": "u64",
    "OpeningId": "u64",
    "Application": {
        "opening_id": "u64",
        "application_index_in_opening": "u32",
        "add_to_opening_in_block": "u32",
        "active_role_staking_id": "Option<u64>",
        "active_application_staking_id": "Option<u64>",
        "stage": "ApplicationStage",
        "human_readable_text": "Text"
    },
    "ApplicationStage": {
        "_enum": {
            "Active": "Null",
            "Unstaking": "UnstakingApplicationStage",
            "Inactive": "InactiveApplicationStage"
        }
    },
    "ActivateOpeningAt": {
        "_enum": {
            "CurrentBlock": "Null",
            "ExactBlock": "u32"
        }
    },
    "ApplicationRationingPolicy": {
        "max_active_applicants": "u32"
    },
    "OpeningStage": {
        "_enum": {
            "WaitingToBegin": "WaitingToBeingOpeningStageVariant",
            "Active": "ActiveOpeningStageVariant"
        }
    },
    "StakingPolicy": {
        "amount": "u128",
        "amount_mode": "StakingAmountLimitMode",
        "crowded_out_unstaking_period_length": "Option<u32>",
        "review_period_expired_unstaking_period_length": "Option<u32>"
    },
    "Opening": {
        "created": "u32",
        "stage": "OpeningStage",
        "max_review_period_length": "u32",
        "application_rationing_policy": "Option<ApplicationRationingPolicy>",
        "application_staking_policy": "Option<StakingPolicy>",
        "role_staking_policy": "Option<StakingPolicy>",
        "human_readable_text": "Text"
    },
    "WaitingToBeingOpeningStageVariant": {
        "begins_at_block": "u32"
    },
    "ActiveOpeningStageVariant": {
        "stage": "ActiveOpeningStage",
        "applications_added": "Vec<HiringApplicationId>",
        "active_application_count": "u32",
        "unstaking_application_count": "u32",
        "deactivated_application_count": "u32"
    },
    "ActiveOpeningStage": {
        "_enum": {
            "AcceptingApplications": "AcceptingApplications",
            "ReviewPeriod": "ReviewPeriod",
            "Deactivated": "Deactivated"
        }
    },
    "AcceptingApplications": {
        "started_accepting_applicants_at_block": "u32"
    },
    "ReviewPeriod": {
        "started_accepting_applicants_at_block": "u32",
        "started_review_period_at_block": "u32"
    },
    "Deactivated": {
        "cause": "OpeningDeactivationCause",
        "deactivated_at_block": "u32",
        "started_accepting_applicants_at_block": "u32",
        "started_review_period_at_block": "Option<u32>"
    },
    "OpeningDeactivationCause": {
        "_enum": [
            "CancelledBeforeActivation",
            "CancelledAcceptingApplications",
            "CancelledInReviewPeriod",
            "ReviewPeriodExpired",
            "Filled"
        ]
    },
    "InactiveApplicationStage": {
        "deactivation_initiated": "u32",
        "deactivated": "u32",
        "cause": "ApplicationDeactivationCause"
    },
    "UnstakingApplicationStage": {
        "deactivation_initiated": "u32",
        "cause": "ApplicationDeactivationCause"
    },
    "ApplicationDeactivationCause": {
        "_enum": [
            "External",
            "Hired",
            "NotHired",
            "CrowdedOut",
            "OpeningCancelled",
            "ReviewPeriodExpired",
            "OpeningFilled"
        ]
    },
    "StakingAmountLimitMode": {
        "_enum": [
            "AtLeast",
            "Exact"
        ]
    },
    "ClassId": "u64",
    "EntityId": "u64",
    "Class": {
        "id": "ClassId",
        "properties": "Vec<Property>",
        "schemas": "Vec<ClassSchema>",
        "name": "Text",
        "description": "Text"
    },
    "Entity": {
        "id": "EntityId",
        "class_id": "ClassId",
        "in_class_schema_indexes": "Vec<u16>"
    },
    "ClassSchema": {
        "properties": "Vec<u16>"
    },
    "Property": {
        "prop_type": "PropertyType",
        "required": "bool",
        "name": "Text",
        "description": "Text"
    },
    "PropertyType": {
        "_enum": {
            "None": "Null",
            "Bool": "Null",
            "Uint16": "Null",
            "Uint32": "Null",
            "Uint64": "Null",
            "Int16": "Null",
            "Int32": "Null",
            "Int64": "Null",
            "Text": "u16",
            "Internal": "u64",
            "BoolVec": "u16",
            "Uint16Vec": "u16",
            "Uint32Vec": "u16",
            "Uint64Vec": "u16",
            "Int16Vec": "u16",
            "Int32Vec": "u16",
            "Int64Vec": "u16",
            "TextVec": "(u16,u16)",
            "InternalVec": "(u16,ClassId)"
        }
    },
    "PropertyValue": {
        "_enum": {
            "None": "Null",
            "Bool": "bool",
            "Uint16": "u16",
            "Uint32": "u32",
            "Uint64": "u64",
            "Int16": "i16",
            "Int32": "i32",
            "Int64": "i64",
            "Text": "Text",
            "Internal": "u64",
            "BoolVec": "Vec<bool>",
            "Uint16Vec": "Vec<u16>",
            "Uint32Vec": "Vec<u32>",
            "Uint64Vec": "Vec<u64>",
            "Int16Vec": "Vec<i16>",
            "Int32Vec": "Vec<i32>",
            "Int64Vec": "Vec<i64>",
            "TextVec": "Vec<Text>",
            "InternalVec": "Vec<EntityId>"
        }
    },
    "ClassPropertyValue": {
        "in_class_index": "u16",
        "value": "PropertyValue"
    },
    "EntityPermissions": {
        "update": "CredentialSet",
        "maintainer_has_all_permissions": "bool"
    },
    "ReferenceConstraint": {
        "_enum": {
            "NoReferencingAllowed": "Null",
            "NoConstraint": "Null",
            "Restricted": "Vec<PropertyOfClass>"
        }
    },
    "ClassPermissionsType": {
        "entity_permissions": "EntityPermissions",
        "entities_can_be_created": "bool",
        "add_schemas": "CredentialSet",
        "create_entities": "CredentialSet",
        "reference_constraint": "ReferenceConstraint",
        "admins": "CredentialSet",
        "last_permissions_update": "u32"
    },
    "Operation": {
        "with_credential": "Option<Credential>",
        "as_entity_maintainer": "bool",
        "operation_type": "OperationType"
    },
    "OperationType": {
        "_enum": {
            "CreateEntity": "CreateEntity",
            "UpdatePropertyValues": "UpdatePropertyValues",
            "AddSchemaSupportToEntity": "AddSchemaSupportToEntity"
        }
    },
    "CreateEntity": {
        "class_id": "ClassId"
    },
    "UpdatePropertyValues": {
        "entity_id": "ParametrizedEntity",
        "parametrized_property_values": "Vec<ParametrizedClassPropertyValue>"
    },
    "AddSchemaSupportToEntity": {
        "entity_id": "ParametrizedEntity",
        "schema_id": "u16",
        "parametrized_property_values": "Vec<ParametrizedClassPropertyValue>"
    },
    "ParametrizedEntity": {
        "_enum": {
            "InternalEntityJustAdded": "u32",
            "ExistingEntity": "u64"
        }
    },
    "ParametrizedClassPropertyValue": {
        "in_class_index": "u16",
        "value": "ParametrizedPropertyValue"
    },
    "ParametrizedPropertyValue": {
        "_enum": {
            "PropertyValue": "PropertyValue",
            "InternalEntityJustAdded": "u32",
            "InternalEntityVec": "Vec<ParametrizedEntity>"
        }
    },
    "PropertyOfClass": {
        "class_id": "ClassId",
        "property_index": "u16"
    },
    "ChannelId": "u64",
    "CuratorId": "u64",
    "CuratorOpeningId": "u64",
    "CuratorApplicationId": "u64",
    "LeadId": "u64",
    "PrincipalId": "u64",
    "OptionalText": "Option<Text>",
    "Channel": {
        "verified": "bool",
        "handle": "Text",
        "title": "OptionalText",
        "description": "OptionalText",
        "avatar": "OptionalText",
        "banner": "OptionalText",
        "content": "ChannelContentType",
        "owner": "MemberId",
        "role_account": "GenericAccountId",
        "publication_status": "ChannelPublicationStatus",
        "curation_status": "ChannelCurationStatus",
        "created": "u32",
        "principal_id": "PrincipalId"
    },
    "ChannelContentType": {
        "_enum": [
            "Video",
            "Music",
            "Ebook"
        ]
    },
    "ChannelCurationStatus": {
        "_enum": [
            "Normal",
            "Censored"
        ]
    },
    "ChannelPublicationStatus": {
        "_enum": [
            "Public",
            "Unlisted"
        ]
    },
    "CurationActor": {
        "_enum": {
            "Lead": "Null",
            "Curator": "CuratorId"
        }
    },
    "Curator": {
        "role_account": "GenericAccountId",
        "reward_relationship": "Option<u64>",
        "role_stake_profile": "Option<CuratorRoleStakeProfile>",
        "stage": "CuratorRoleStage",
        "induction": "CuratorInduction",
        "principal_id": "PrincipalId"
    },
    "CuratorApplication": {
        "role_account": "GenericAccountId",
        "curator_opening_id": "CuratorOpeningId",
        "member_id": "MemberId",
        "application_id": "HiringApplicationId"
    },
    "CuratorOpening": {
        "opening_id": "u64",
        "curator_applications": "Vec<CuratorApplicationId>",
        "policy_commitment": "OpeningPolicyCommitment"
    },
    "Lead": {
        "member_id": "MemberId",
        "role_account": "GenericAccountId",
        "reward_relationship": "Option<u64>",
        "inducted": "u32",
        "stage": "LeadRoleState"
    },
    "OpeningPolicyCommitment": {
        "application_rationing_policy": "Option<ApplicationRationingPolicy>",
        "max_review_period_length": "u32",
        "application_staking_policy": "Option<StakingPolicy>",
        "role_staking_policy": "Option<StakingPolicy>",
        "role_slashing_terms": "SlashingTerms",
        "fill_opening_successful_applicant_application_stake_unstaking_period": "Option<u32>",
        "fill_opening_failed_applicant_application_stake_unstaking_period": "Option<u32>",
        "fill_opening_failed_applicant_role_stake_unstaking_period": "Option<u32>",
        "terminate_curator_application_stake_unstaking_period": "Option<u32>",
        "terminate_curator_role_stake_unstaking_period": "Option<u32>",
        "exit_curator_role_application_stake_unstaking_period": "Option<u32>",
        "exit_curator_role_stake_unstaking_period": "Option<u32>"
    },
    "Principal": {
        "_enum": {
            "Lead": "Null",
            "Curator": "CuratorId",
            "ChannelOwner": "ChannelId"
        }
    },
    "WorkingGroupUnstaker": {
        "_enum": {
            "Lead": "LeadId",
            "Curator": "CuratorId"
        }
    },
    "CuratorApplicationIdToCuratorIdMap": "BTreeMap<HiringApplicationId,CuratorId>",
    "CuratorApplicationIdSet": "Vec<CuratorApplicationId>",
    "CuratorRoleStakeProfile": {
        "stake_id": "u64",
        "termination_unstaking_period": "Option<u32>",
        "exit_unstaking_period": "Option<u32>"
    },
    "CuratorRoleStage": {
        "_enum": {
            "Active": "Null",
            "Unstaking": "CuratorExitSummary",
            "Exited": "CuratorExitSummary"
        }
    },
    "CuratorExitSummary": {
        "origin": "CuratorExitInitiationOrigin",
        "initiated_at_block_number": "u32",
        "rationale_text": "Text"
    },
    "CuratorExitInitiationOrigin": {
        "_enum": [
            "Lead",
            "Curator"
        ]
    },
    "LeadRoleState": {
        "_enum": {
            "Active": "Null",
            "Exited": "ExitedLeadRole"
        }
    },
    "ExitedLeadRole": {
        "initiated_at_block_number": "u32"
    },
    "CuratorInduction": {
        "lead": "LeadId",
        "curator_application_id": "CuratorApplicationId",
        "at_block": "u32"
    },
    "RationaleText": "Bytes",
    "ApplicationOf": {
        "role_account_id": "GenericAccountId",
        "opening_id": "u64",
        "member_id": "MemberId",
        "application_id": "HiringApplicationId"
    },
    "ApplicationIdSet": "BTreeSet<HiringApplicationId>",
    "ApplicationIdToWorkerIdMap": "BTreeMap<HiringApplicationId,WorkerId>",
    "WorkerId": "u64",
    "WorkerOf": {
        "member_id": "MemberId",
        "role_account_id": "GenericAccountId",
        "reward_relationship": "Option<u64>",
        "role_stake_profile": "Option<RoleStakeProfile>"
    },
    "OpeningOf": {
        "hiring_opening_id": "u64",
        "applications": "Vec<HiringApplicationId>",
        "policy_commitment": "WorkingGroupOpeningPolicyCommitment",
        "opening_type": "OpeningType"
    },
    "StorageProviderId": "u64",
    "OpeningType": {
        "_enum": {
            "Leader": "Null",
            "Worker": "Null"
        }
    },
    "HiringApplicationId": "u64",
    "RewardPolicy": {
        "amount_per_payout": "u128",
        "next_payment_at_block": "u32",
        "payout_interval": "Option<u32>"
    },
    "WorkingGroupOpeningPolicyCommitment": {
        "application_rationing_policy": "Option<ApplicationRationingPolicy>",
        "max_review_period_length": "u32",
        "application_staking_policy": "Option<StakingPolicy>",
        "role_staking_policy": "Option<StakingPolicy>",
        "role_slashing_terms": "SlashingTerms",
        "fill_opening_successful_applicant_application_stake_unstaking_period": "Option<u32>",
        "fill_opening_failed_applicant_application_stake_unstaking_period": "Option<u32>",
        "fill_opening_failed_applicant_role_stake_unstaking_period": "Option<u32>",
        "terminate_application_stake_unstaking_period": "Option<u32>",
        "terminate_role_stake_unstaking_period": "Option<u32>",
        "exit_role_application_stake_unstaking_period": "Option<u32>",
        "exit_role_stake_unstaking_period": "Option<u32>"
    },
    "RoleStakeProfile": {
        "stake_id": "u64",
        "termination_unstaking_period": "Option<u32>",
        "exit_unstaking_period": "Option<u32>"
    },
    "Url": "Text",
    "IPNSIdentity": "Text",
    "ServiceProviderRecord": {
        "identity": "IPNSIdentity",
        "expires_at": "u32"
    },
    "ContentId": "[u8;32]",
    "LiaisonJudgement": {
        "_enum": [
            "Pending",
            "Accepted",
            "Rejected"
        ]
    },
    "DataObject": {
        "owner": "MemberId",
        "added_at": "BlockAndTime",
        "type_id": "DataObjectTypeId",
        "liaison": "StorageProviderId",
        "liaison_judgement": "LiaisonJudgement",
        "ipfs_content_id": "Text"
    },
    "DataObjectStorageRelationshipId": "u64",
    "DataObjectStorageRelationship": {
        "content_id": "ContentId",
        "storage_provider": "StorageProviderId",
        "ready": "bool"
    },
    "DataObjectTypeId": "u64",
    "DataObjectType": {
        "description": "Text",
        "active": "bool"
    },
    "DataObjectsMap": "BTreeMap<ContentId,DataObject>",
    "ProposalId": "u32",
    "ProposalStatus": {
        "_enum": {
            "Active": "Option<ActiveStake>",
            "Finalized": "Finalized"
        }
    },
    "ProposalOf": {
        "parameters": "ProposalParameters",
        "proposerId": "MemberId",
        "title": "Text",
        "description": "Text",
        "createdAt": "u32",
        "status": "ProposalStatus",
        "votingResults": "VotingResults"
    },
    "ProposalDetails": {
        "_enum": {
            "Text": "Text",
            "RuntimeUpgrade": "Bytes",
            "SetElectionParameters": "ElectionParameters",
            "Spending": "(Balance,AccountId)",
            "SetLead": "Option<SetLeadParams>",
            "SetContentWorkingGroupMintCapacity": "u128",
            "EvictStorageProvider": "GenericAccountId",
            "SetValidatorCount": "u32",
            "SetStorageRoleParameters": "RoleParameters",
            "AddWorkingGroupLeaderOpening": "AddOpeningParameters",
            "BeginReviewWorkingGroupLeaderApplication": "(u64,WorkingGroup)",
            "FillWorkingGroupLeaderOpening": "FillOpeningParameters",
            "SetWorkingGroupMintCapacity": "(Balance,WorkingGroup)",
            "DecreaseWorkingGroupLeaderStake": "(WorkerId,Balance,WorkingGroup)",
            "SlashWorkingGroupLeaderStake": "(WorkerId,Balance,WorkingGroup)",
            "SetWorkingGroupLeaderReward": "(WorkerId,Balance,WorkingGroup)",
            "TerminateWorkingGroupLeaderRole": "TerminateRoleParameters"
        }
    },
    "ProposalDetailsOf": {
        "_enum": {
            "Text": "Text",
            "RuntimeUpgrade": "Bytes",
            "SetElectionParameters": "ElectionParameters",
            "Spending": "(Balance,AccountId)",
            "SetLead": "Option<SetLeadParams>",
            "SetContentWorkingGroupMintCapacity": "u128",
            "EvictStorageProvider": "GenericAccountId",
            "SetValidatorCount": "u32",
            "SetStorageRoleParameters": "RoleParameters",
            "AddWorkingGroupLeaderOpening": "AddOpeningParameters",
            "BeginReviewWorkingGroupLeaderApplication": "(u64,WorkingGroup)",
            "FillWorkingGroupLeaderOpening": "FillOpeningParameters",
            "SetWorkingGroupMintCapacity": "(Balance,WorkingGroup)",
            "DecreaseWorkingGroupLeaderStake": "(WorkerId,Balance,WorkingGroup)",
            "SlashWorkingGroupLeaderStake": "(WorkerId,Balance,WorkingGroup)",
            "SetWorkingGroupLeaderReward": "(WorkerId,Balance,WorkingGroup)",
            "TerminateWorkingGroupLeaderRole": "TerminateRoleParameters"
        }
    },
    "VotingResults": {
        "abstensions": "u32",
        "approvals": "u32",
        "rejections": "u32",
        "slashes": "u32"
    },
    "ProposalParameters": {
        "votingPeriod": "u32",
        "gracePeriod": "u32",
        "approvalQuorumPercentage": "u32",
        "approvalThresholdPercentage": "u32",
        "slashingQuorumPercentage": "u32",
        "slashingThresholdPercentage": "u32",
        "requiredStake": "Option<u128>"
    },
    "VoteKind": {
        "_enum": [
            "Approve",
            "Reject",
            "Slash",
            "Abstain"
        ]
    },
    "ThreadCounter": {
        "author_id": "MemberId",
        "counter": "u32"
    },
    "DiscussionThread": {
        "title": "Bytes",
        "created_at": "u32",
        "author_id": "MemberId"
    },
    "DiscussionPost": {
        "text": "Bytes",
        "created_at": "u32",
        "updated_at": "u32",
        "author_id": "MemberId",
        "thread_id": "ThreadId",
        "edition_number": "u32"
    },
    "AddOpeningParameters": {
        "activate_at": "ActivateOpeningAt",
        "commitment": "WorkingGroupOpeningPolicyCommitment",
        "human_readable_text": "Bytes",
        "working_group": "WorkingGroup"
    },
    "FillOpeningParameters": {
        "opening_id": "u64",
        "successful_application_id": "HiringApplicationId",
        "reward_policy": "Option<RewardPolicy>",
        "working_group": "WorkingGroup"
    },
    "TerminateRoleParameters": {
        "worker_id": "WorkerId",
        "rationale": "Bytes",
        "slash": "bool",
        "working_group": "WorkingGroup"
    },
    "ActiveStake": {
        "stake_id": "u64",
        "source_account_id": "GenericAccountId"
    },
    "Finalized": {
        "proposalStatus": "ProposalDecisionStatus",
        "finalizedAt": "u32",
        "encodedUnstakingErrorDueToBrokenRuntime": "Option<Vec<u8>>",
        "stakeDataAfterUnstakingError": "Option<ActiveStake>"
    },
    "ProposalDecisionStatus": {
        "_enum": {
            "Canceled": "Null",
            "Vetoed": "Null",
            "Rejected": "Null",
            "Slashed": "Null",
            "Expired": "Null",
            "Approved": "Approved"
        }
    },
    "ExecutionFailed": {
        "error": "Text"
    },
    "Approved": {
        "_enum": {
            "PendingExecution": "Null",
            "Executed": "Null",
            "ExecutionFailed": "ExecutionFailed"
        }
    },
    "SetLeadParams": "(MemberId,GenericAccountId)",
    "Address": "AccountId",
    "LookupSource": "AccountId"
}