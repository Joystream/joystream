name: Build code and create AMI

on:
  push:
    branches:
      - test_branch

jobs:
  build:
    name: Build the code and run setup
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # - name: Deploy to AWS CloudFormation
    #   uses: aws-actions/aws-cloudformation-github-deploy@v1
    #   id: deploy-stack
    #   with:
    #     name: joystream-single-instance-${{ github.run_number }}
    #     template: devops/infrastructure/single-instance.yml
    #     no-fail-on-empty-changeset: "1"
    #     parameter-overrides: "KeyName=anuj-key"

    # - name: Get output from CloudFormation stack
    #   run: |
    #     echo "Public IP is ${{ steps.deploy-stack.outputs.PublicIp }}"
    #     echo "Repo is $GITHUB_SERVER_URL/$GITHUB_REPOSITORY"
    #     echo "Branch is $GITHUB_REF"
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Get env
      run: |
        echo "Env is ${{ toJSON(env) }}"

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install boto3

    - name: Which Python
      run: |
        which python
        pip freeze
        python --version

    - name: Install Ansible dependencies
      run: pipx inject ansible-base boto3 botocore

    - name: Run playbook
      uses: dawidd6/action-ansible-playbook@v2
      with:
        playbook: github-action-ansible.yml
        directory: devops/infrastructure
        requirements: requirements.yml
        key: ${{Â secrets.SSH_PRIVATE_KEY }}
        inventory: |
          [all]
          3.93.62.190
          [all:vars]
          ansible_python_interpreter=/usr/bin/python3
        options: |
          --extra-vars "git_repo=https://github.com/${{ github.repository }} branch_name=${{ steps.extract_branch.outputs.branch }} instance_id=i-0e145c6b0165844c7"
          --verbose
