/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/files/{id}': {
    /** Returns a media file. */
    'get': operations['filesApi.getFile']
    /** Returns a media file headers. */
    'head': operations['filesApi.getFileHeaders']
  }
  '/files': {
    /** Upload data */
    'post': operations['filesApi.uploadFile']
  }
  '/state/data-objects': {
    /** Returns all local data objects. */
    'get': operations['stateApi.getAllLocalDataObjects']
  }
  '/state/bags/{bagId}/data-objects': {
    /** Returns local data objects for the bag. */
    'get': operations['stateApi.getLocalDataObjectsByBagId']
  }
  '/version': {
    /** Returns server version. */
    'get': operations['stateApi.getVersion']
  }
  '/state/data': {
    /** Returns local uploading directory stats. */
    'get': operations['stateApi.getLocalDataStats']
  }
}

export interface components {
  schemas: {
    'TokenRequest': {
      'data': {
        /** Format: int64 */
        'memberId': number
        'accountId': string
        /** Format: int64 */
        'dataObjectId': number
        /** Format: int64 */
        'storageBucketId': number
        'bagId': string
      }
      'signature': string
    }
    'ErrorResponse': {
      'type'?: string
      'message': string
    }
    'DataStatsResponse': {
      /** Format: int64 */
      'totalSize': number
      /** Format: int64 */
      'objectNumber': number
      /** Format: int64 */
      'tempDirSize'?: number
      /** Format: int64 */
      'tempDownloads'?: number
    }
    'VersionResponse': {
      'version': string
      'userAgent'?: string
    }
    'DataObjectResponse': string[]
  }
}

export interface operations {
  /** Returns a media file. */
  'filesApi.getFile': {
    parameters: {
      path: {
        /** Data object ID */
        'id': string
      }
    }
    responses: {
      /** Ok */
      200: {
        content: {
          'video/*': string
          'audio/*': string
          'image/*': string
          'application/octet-stream': string
        }
      }
      /** Bad request */
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Unauthorized */
      401: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** File not found */
      404: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** Unknown server error */
      500: unknown
    }
  }
  /** Returns a media file headers. */
  'filesApi.getFileHeaders': {
    parameters: {
      path: {
        /** Data object ID */
        'id': string
      }
    }
    responses: {
      /** Ok */
      200: unknown
      /** Bad request */
      400: unknown
      /** File not found */
      404: unknown
      /** Unknown server error */
      500: unknown
    }
  }
  /** Upload data */
  'filesApi.uploadFile': {
    parameters: {
      query: {
        /** Data object runtime ID */
        'dataObjectId': string
        /** Storage bucket ID */
        'storageBucketId': string
        /** Bag ID */
        'bagId': string
      }
    }
    responses: {
      /** Created */
      201: {
        content: {
          'application/json': {
            'id'?: string
          }
        }
      }
      /** Bad request */
      400: {
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'multipart/form-data': {
          /**
           * Format: binary
           * @description Data file
           */
          'file'?: string
        }
      }
    }
  }
  /** Returns all local data objects. */
  'stateApi.getAllLocalDataObjects': {
    responses: {
      /** Ok */
      200: {
        content: {
          'application/json': components['schemas']['DataObjectResponse']
        }
      }
    }
  }
  /** Returns local data objects for the bag. */
  'stateApi.getLocalDataObjectsByBagId': {
    parameters: {
      path: {
        /** Bag ID */
        'bagId': string
      }
    }
    responses: {
      /** Ok */
      200: {
        content: {
          'application/json': components['schemas']['DataObjectResponse']
        }
      }
    }
  }
  /** Returns server version. */
  'stateApi.getVersion': {
    responses: {
      /** Ok */
      200: {
        content: {
          'application/json': components['schemas']['VersionResponse']
        }
      }
    }
  }
  /** Returns local uploading directory stats. */
  'stateApi.getLocalDataStats': {
    responses: {
      /** Ok */
      200: {
        content: {
          'application/json': components['schemas']['DataStatsResponse']
        }
      }
    }
  }
}

export interface external {}
