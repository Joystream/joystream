// schema are generated by Typescript JSON schema generator VSCode extension

export const BountyInputSchema = {
  '$schema': 'http://json-schema.org/draft-07/schema#',
  '$ref': '#/definitions/BountyInputParameters',
  'definitions': {
    'BountyInputParameters': {
      'type': 'object',
      'additionalProperties': false,
      'properties': {
        'oracle': {
          'type': 'number',
        },
        'contractTypeInput': {
          'type': 'array',
          'items': {
            'type': 'string',
          },
        },
        'cherry': {
          'type': 'number',
        },
        'entrantStake': {
          'type': 'number',
        },
        'fundingType': {
          'anyOf': [
            {
              '$ref': '#/definitions/FundingTypeLimited',
            },
            {
              '$ref': '#/definitions/FundingTypePrepetual',
            },
          ],
        },
        'workPeriod': {
          'type': 'number',
        },
        'judgementPeriod': {
          'type': 'number',
        },
        'title': {
          'type': ['string', 'null'],
        },
        'description': {
          'type': ['string', 'null'],
        },
        'discussionThread': {
          'anyOf': [
            {
              '$ref': '#/definitions/Long.Long',
            },
            {
              'type': 'null',
            },
          ],
        },
        'bannerImageUri': {
          'type': ['string', 'null'],
        },
      },
      'required': ['cherry', 'contractTypeInput', 'entrantStake', 'fundingType', 'judgementPeriod', 'workPeriod'],
    },
    'FundingTypeLimited': {
      'type': 'object',
      'properties': {
        'minFundingAmount': {
          'type': 'number',
        },
        'maxFundingAmount': {
          'type': 'number',
        },
        'fundingPeriod': {
          'type': 'number',
        },
      },
      'required': ['minFundingAmount', 'maxFundingAmount', 'fundingPeriod'],
      'additionalProperties': false,
    },
    'FundingTypePrepetual': {
      'type': 'object',
      'properties': {
        'target': {
          'type': 'number',
        },
      },
      'required': ['target'],
      'additionalProperties': false,
    },
    'Long.Long': {
      'type': 'object',
      'properties': {
        'high': {
          'type': 'number',
        },
        'low': {
          'type': 'number',
        },
        'unsigned': {
          'type': 'boolean',
        },
      },
      'required': ['high', 'low', 'unsigned'],
      'additionalProperties': false,
    },
  },
}

export const BountyWorkDataInputSchema = {
  '$schema': 'http://json-schema.org/draft-07/schema#',
  '$ref': '#/definitions/BountyWorkDataInputParameters',
  'definitions': {
    'BountyWorkDataInputParameters': {
      '$ref': '#/definitions/IBountyWorkData',
    },
    'IBountyWorkData': {
      'type': 'object',
      'properties': {
        'title': {
          'type': ['string', 'null'],
        },
        'description': {
          'type': ['string', 'null'],
        },
      },
      'additionalProperties': false,
    },
  },
}

export const OracleJudgmentInputSchema = {
  '$schema': 'http://json-schema.org/draft-07/schema#',
  '$ref': '#/definitions/OracleJudgmentInputParameters',
  'definitions': {
    'OracleJudgmentInputParameters': {
      'type': 'array',
      'items': {
        'type': 'object',
        'properties': {
          'entryId': {
            'type': 'number',
          },
          'judgment': {
            'anyOf': [
              {
                '$ref': '#/definitions/Winner',
              },
              {
                '$ref': '#/definitions/Rejected',
              },
            ],
          },
        },
        'required': ['entryId', 'judgment'],
        'additionalProperties': false,
      },
    },
    'Winner': {
      'type': 'object',
      'properties': {
        'reward': {
          'type': 'number',
        },
      },
      'required': ['reward'],
      'additionalProperties': false,
    },
    'Rejected': {
      'type': [],
      'enum': [],
    },
  },
}
