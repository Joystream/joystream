// This file is part of Substrate.

// Copyright (C) 2022 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for bounty
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-11-07, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("prod-test"), DB CACHE: 1024

// Executed Command:
// ./scripts/../target/release/joystream-node
// benchmark
// pallet
// --pallet=bounty
// --extrinsic=*
// --chain=prod-test
// --steps=50
// --repeat=20
// --execution=wasm
// --template=./scripts/../devops/joystream-pallet-weight-template.hbs
// --output=./scripts/../runtime-modules/bounty/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(unused_variables)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions needed for bounty.
pub trait WeightInfo {
	fn create_bounty_by_council(_i: u32, _j: u32, ) -> Weight;
	fn create_bounty_by_member(_i: u32, _j: u32, ) -> Weight;
	fn terminate_bounty_w_oracle_reward_funding_expired() -> Weight;
	fn terminate_bounty_wo_oracle_reward_funding_expired() -> Weight;
	fn terminate_bounty_w_oracle_reward_wo_funds_funding() -> Weight;
	fn terminate_bounty_wo_oracle_reward_wo_funds_funding() -> Weight;
	fn terminate_bounty_w_oracle_reward_w_funds_funding() -> Weight;
	fn terminate_bounty_wo_oracle_reward_w_funds_funding() -> Weight;
	fn terminate_bounty_work_or_judging_period() -> Weight;
	fn fund_bounty_by_member() -> Weight;
	fn fund_bounty_by_council() -> Weight;
	fn withdraw_funding_by_member() -> Weight;
	fn withdraw_funding_by_council() -> Weight;
	fn announce_work_entry(_i: u32, _j: u32, ) -> Weight;
	fn submit_work(_i: u32, ) -> Weight;
	fn submit_oracle_judgment_by_council(_j: u32, _k: u32, _w: u32, _r: u32, ) -> Weight;
	fn submit_oracle_judgment_by_member(_j: u32, _k: u32, _w: u32, _r: u32, ) -> Weight;
	fn switch_oracle_to_council_by_council_successful() -> Weight;
	fn switch_oracle_to_member_by_oracle_council() -> Weight;
	fn switch_oracle_to_member_by_council() -> Weight;
	fn switch_oracle_to_member_by_oracle_member() -> Weight;
	fn switch_oracle_to_council_by_oracle_member() -> Weight;
	fn end_working_period() -> Weight;
	fn withdraw_entrant_stake() -> Weight;
	fn withdraw_funding_state_bloat_bond_by_council() -> Weight;
	fn withdraw_funding_state_bloat_bond_by_member() -> Weight;
	fn withdraw_oracle_reward_by_oracle_council() -> Weight;
	fn withdraw_oracle_reward_by_oracle_member() -> Weight;
	fn entrant_remark(_i: u32, ) -> Weight;
	fn contributor_remark(_i: u32, ) -> Weight;
	fn oracle_remark(_i: u32, ) -> Weight;
	fn creator_remark(_i: u32, ) -> Weight;
}

/// Weights for bounty using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: Membership MembershipById (r:50 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: Bounty BountyCount (r:1 w:1)
	// Proof: Bounty BountyCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Bounty Bounties (r:0 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `j` is `[1, 50]`.
	fn create_bounty_by_council(i: u32, j: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `463 + j * (134 ±0)`
		//  Estimated: `7573 + j * (2600 ±0)`
		// Minimum execution time: 138_654 nanoseconds.
		Weight::from_parts(51_643_462, 0u64)
			.saturating_add(Weight::from_parts(0, 7573))
			// Standard Error: 5_598
			.saturating_add(Weight::from_parts(874_845, 0u64).saturating_mul(i.into()))
			// Standard Error: 11_335
			.saturating_add(Weight::from_parts(4_144_602, 0u64).saturating_mul(j.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(j.into())))
			.saturating_add(T::DbWeight::get().writes(4_u64))
			.saturating_add(Weight::from_parts(0, 2600).saturating_mul(j.into()))
	}
	// Storage: Membership MembershipById (r:51 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Bounty BountyCount (r:1 w:1)
	// Proof: Bounty BountyCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Bounty Bounties (r:0 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `j` is `[1, 50]`.
	fn create_bounty_by_member(i: u32, j: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `437 + j * (136 ±0)`
		//  Estimated: `11275 + j * (2600 ±0)`
		// Minimum execution time: 144_759 nanoseconds.
		Weight::from_parts(64_907_990, 0u64)
			.saturating_add(Weight::from_parts(0, 11275))
			// Standard Error: 5_174
			.saturating_add(Weight::from_parts(816_534, 0u64).saturating_mul(i.into()))
			// Standard Error: 10_476
			.saturating_add(Weight::from_parts(4_016_529, 0u64).saturating_mul(j.into()))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(j.into())))
			.saturating_add(T::DbWeight::get().writes(4_u64))
			.saturating_add(Weight::from_parts(0, 2600).saturating_mul(j.into()))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	fn terminate_bounty_w_oracle_reward_funding_expired() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `556`
		//  Estimated: `12645`
		// Minimum execution time: 53_725 nanoseconds.
		Weight::from_parts(54_982_000, 0u64)
			.saturating_add(Weight::from_parts(0, 12645))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	fn terminate_bounty_wo_oracle_reward_funding_expired() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `556`
		//  Estimated: `12645`
		// Minimum execution time: 79_024 nanoseconds.
		Weight::from_parts(80_811_000, 0u64)
			.saturating_add(Weight::from_parts(0, 12645))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	fn terminate_bounty_w_oracle_reward_wo_funds_funding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `556`
		//  Estimated: `12645`
		// Minimum execution time: 52_424 nanoseconds.
		Weight::from_parts(54_699_000, 0u64)
			.saturating_add(Weight::from_parts(0, 12645))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	fn terminate_bounty_wo_oracle_reward_wo_funds_funding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `556`
		//  Estimated: `12645`
		// Minimum execution time: 77_880 nanoseconds.
		Weight::from_parts(79_960_000, 0u64)
			.saturating_add(Weight::from_parts(0, 12645))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:2 w:0)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	fn terminate_bounty_w_oracle_reward_w_funds_funding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `283`
		//  Estimated: `10107`
		// Minimum execution time: 30_301 nanoseconds.
		Weight::from_parts(31_510_000, 0u64)
			.saturating_add(Weight::from_parts(0, 10107))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:2 w:0)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	fn terminate_bounty_wo_oracle_reward_w_funds_funding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `283`
		//  Estimated: `10107`
		// Minimum execution time: 36_277 nanoseconds.
		Weight::from_parts(37_335_000, 0u64)
			.saturating_add(Weight::from_parts(0, 10107))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:2 w:0)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	fn terminate_bounty_work_or_judging_period() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `274`
		//  Estimated: `10107`
		// Minimum execution time: 30_836 nanoseconds.
		Weight::from_parts(31_856_000, 0u64)
			.saturating_add(Weight::from_parts(0, 10107))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn fund_bounty_by_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `672`
		//  Estimated: `17337`
		// Minimum execution time: 64_504 nanoseconds.
		Weight::from_parts(66_865_000, 0u64)
			.saturating_add(Weight::from_parts(0, 17337))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn fund_bounty_by_council() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `552`
		//  Estimated: `12645`
		// Minimum execution time: 54_523 nanoseconds.
		Weight::from_parts(56_836_000, 0u64)
			.saturating_add(Weight::from_parts(0, 12645))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: Bounty Bounties (r:1 w:0)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn withdraw_funding_by_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `779`
		//  Estimated: `17337`
		// Minimum execution time: 61_590 nanoseconds.
		Weight::from_parts(62_901_000, 0u64)
			.saturating_add(Weight::from_parts(0, 17337))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:0)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	fn withdraw_funding_by_council() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `12645`
		// Minimum execution time: 53_361 nanoseconds.
		Weight::from_parts(54_542_000, 0u64)
			.saturating_add(Weight::from_parts(0, 12645))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Bounty EntryCount (r:1 w:1)
	// Proof: Bounty EntryCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Bounty Entries (r:0 w:1)
	// Proof: Bounty Entries (max_values: None, max_size: Some(93), added: 2568, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `j` is `[1, 50]`.
	fn announce_work_entry(i: u32, j: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `971 + j * (36 ±0)`
		//  Estimated: `20963`
		// Minimum execution time: 89_964 nanoseconds.
		Weight::from_parts(64_402_725, 0u64)
			.saturating_add(Weight::from_parts(0, 20963))
			// Standard Error: 4_005
			.saturating_add(Weight::from_parts(1_118_500, 0u64).saturating_mul(i.into()))
			// Standard Error: 8_110
			.saturating_add(Weight::from_parts(493_718, 0u64).saturating_mul(j.into()))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: Bounty Bounties (r:1 w:0)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty Entries (r:1 w:1)
	// Proof: Bounty Entries (max_values: None, max_size: Some(93), added: 2568, mode: MaxEncodedLen)
	/// The range of component `i` is `[0, 100]`.
	fn submit_work(i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `601`
		//  Estimated: `11153`
		// Minimum execution time: 31_355 nanoseconds.
		Weight::from_parts(33_495_985, 0u64)
			.saturating_add(Weight::from_parts(0, 11153))
			// Standard Error: 1_008
			.saturating_add(Weight::from_parts(1_029_281, 0u64).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty Entries (r:40 w:40)
	// Proof: Bounty Entries (max_values: None, max_size: Some(93), added: 2568, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:40 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: System Account (r:41 w:41)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:40 w:40)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	/// The range of component `j` is `[0, 100]`.
	/// The range of component `k` is `[0, 100]`.
	/// The range of component `w` is `[1, 20]`.
	/// The range of component `r` is `[1, 20]`.
	fn submit_oracle_judgment_by_council(_j: u32, _k: u32, w: u32, r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `925 + w * (448 ±0) + r * (448 ±0)`
		//  Estimated: `12069 + w * (11545 ±0) + r * (11545 ±0)`
		// Minimum execution time: 1_316_105 nanoseconds.
		Weight::from_parts(1_332_780_000, 0u64)
			.saturating_add(Weight::from_parts(0, 12069))
			// Standard Error: 383_858
			.saturating_add(Weight::from_parts(32_338_905, 0u64).saturating_mul(w.into()))
			// Standard Error: 383_858
			.saturating_add(Weight::from_parts(46_161_433, 0u64).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().reads((4_u64).saturating_mul(w.into())))
			.saturating_add(T::DbWeight::get().reads((4_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(w.into())))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 11545).saturating_mul(w.into()))
			.saturating_add(Weight::from_parts(0, 11545).saturating_mul(r.into()))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:40 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: Bounty Entries (r:39 w:39)
	// Proof: Bounty Entries (max_values: None, max_size: Some(93), added: 2568, mode: MaxEncodedLen)
	// Storage: System Account (r:40 w:40)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:39 w:39)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	/// The range of component `j` is `[0, 100]`.
	/// The range of component `k` is `[0, 100]`.
	/// The range of component `w` is `[1, 20]`.
	/// The range of component `r` is `[1, 19]`.
	fn submit_oracle_judgment_by_member(_j: u32, _k: u32, w: u32, r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1021 + w * (451 ±0) + r * (451 ±0)`
		//  Estimated: `14669 + w * (11545 ±0) + r * (11545 ±0)`
		// Minimum execution time: 1_314_309 nanoseconds.
		Weight::from_parts(1_323_110_000, 0u64)
			.saturating_add(Weight::from_parts(0, 14669))
			// Standard Error: 377_565
			.saturating_add(Weight::from_parts(32_533_236, 0u64).saturating_mul(w.into()))
			// Standard Error: 397_751
			.saturating_add(Weight::from_parts(45_506_372, 0u64).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().reads((4_u64).saturating_mul(w.into())))
			.saturating_add(T::DbWeight::get().reads((4_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(w.into())))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 11545).saturating_mul(w.into()))
			.saturating_add(Weight::from_parts(0, 11545).saturating_mul(r.into()))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	fn switch_oracle_to_council_by_council_successful() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `184`
		//  Estimated: `4005`
		// Minimum execution time: 23_303 nanoseconds.
		Weight::from_parts(23_995_000, 0u64)
			.saturating_add(Weight::from_parts(0, 4005))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	fn switch_oracle_to_member_by_oracle_council() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `429`
		//  Estimated: `7595`
		// Minimum execution time: 27_947 nanoseconds.
		Weight::from_parts(29_431_000, 0u64)
			.saturating_add(Weight::from_parts(0, 7595))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	fn switch_oracle_to_member_by_council() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `474`
		//  Estimated: `7595`
		// Minimum execution time: 29_965 nanoseconds.
		Weight::from_parts(31_340_000, 0u64)
			.saturating_add(Weight::from_parts(0, 7595))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:2 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	fn switch_oracle_to_member_by_oracle_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `573`
		//  Estimated: `10195`
		// Minimum execution time: 32_491 nanoseconds.
		Weight::from_parts(34_407_000, 0u64)
			.saturating_add(Weight::from_parts(0, 10195))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	fn switch_oracle_to_council_by_oracle_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `437`
		//  Estimated: `7595`
		// Minimum execution time: 28_201 nanoseconds.
		Weight::from_parts(29_106_000, 0u64)
			.saturating_add(Weight::from_parts(0, 7595))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	fn end_working_period() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `558`
		//  Estimated: `7595`
		// Minimum execution time: 30_820 nanoseconds.
		Weight::from_parts(31_591_000, 0u64)
			.saturating_add(Weight::from_parts(0, 7595))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty Entries (r:1 w:1)
	// Proof: Bounty Entries (max_values: None, max_size: Some(93), added: 2568, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn withdraw_entrant_stake() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `863`
		//  Estimated: `19510`
		// Minimum execution time: 51_729 nanoseconds.
		Weight::from_parts(53_741_000, 0u64)
			.saturating_add(Weight::from_parts(0, 19510))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	// Storage: Bounty Bounties (r:1 w:0)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	fn withdraw_funding_state_bloat_bond_by_council() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `674`
		//  Estimated: `12645`
		// Minimum execution time: 53_978 nanoseconds.
		Weight::from_parts(55_805_000, 0u64)
			.saturating_add(Weight::from_parts(0, 12645))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: Bounty Bounties (r:1 w:0)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn withdraw_funding_state_bloat_bond_by_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `907`
		//  Estimated: `17337`
		// Minimum execution time: 63_546 nanoseconds.
		Weight::from_parts(65_000_000, 0u64)
			.saturating_add(Weight::from_parts(0, 17337))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	fn withdraw_oracle_reward_by_oracle_council() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `547`
		//  Estimated: `12645`
		// Minimum execution time: 79_578 nanoseconds.
		Weight::from_parts(81_114_000, 0u64)
			.saturating_add(Weight::from_parts(0, 12645))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	// Storage: Council Budget (r:1 w:1)
	// Proof: Council Budget (max_values: Some(1), max_size: Some(16), added: 511, mode: MaxEncodedLen)
	fn withdraw_oracle_reward_by_oracle_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `948`
		//  Estimated: `18838`
		// Minimum execution time: 92_605 nanoseconds.
		Weight::from_parts(96_708_000, 0u64)
			.saturating_add(Weight::from_parts(0, 18838))
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: Bounty Entries (r:1 w:0)
	// Proof: Bounty Entries (max_values: None, max_size: Some(93), added: 2568, mode: MaxEncodedLen)
	/// The range of component `i` is `[0, 100]`.
	fn entrant_remark(i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `492`
		//  Estimated: `7148`
		// Minimum execution time: 24_701 nanoseconds.
		Weight::from_parts(25_962_303, 0u64)
			.saturating_add(Weight::from_parts(0, 7148))
			// Standard Error: 1_391
			.saturating_add(Weight::from_parts(1_041_490, 0u64).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Proof: Bounty BountyContributions (max_values: None, max_size: Some(81), added: 2556, mode: MaxEncodedLen)
	/// The range of component `i` is `[0, 100]`.
	fn contributor_remark(i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `422`
		//  Estimated: `7136`
		// Minimum execution time: 23_161 nanoseconds.
		Weight::from_parts(24_937_057, 0u64)
			.saturating_add(Weight::from_parts(0, 7136))
			// Standard Error: 1_388
			.saturating_add(Weight::from_parts(759_737, 0u64).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
	}
	// Storage: Bounty Bounties (r:1 w:0)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	/// The range of component `i` is `[0, 100]`.
	fn oracle_remark(i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `204`
		//  Estimated: `4005`
		// Minimum execution time: 17_701 nanoseconds.
		Weight::from_parts(18_490_515, 0u64)
			.saturating_add(Weight::from_parts(0, 4005))
			// Standard Error: 1_979
			.saturating_add(Weight::from_parts(775_222, 0u64).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	// Storage: Bounty Bounties (r:1 w:0)
	// Proof: Bounty Bounties (max_values: None, max_size: Some(540), added: 3015, mode: MaxEncodedLen)
	/// The range of component `i` is `[0, 100]`.
	fn creator_remark(i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `204`
		//  Estimated: `4005`
		// Minimum execution time: 17_857 nanoseconds.
		Weight::from_parts(18_872_211, 0u64)
			.saturating_add(Weight::from_parts(0, 4005))
			// Standard Error: 1_591
			.saturating_add(Weight::from_parts(763_705, 0u64).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
}

// Default implementation for tests
impl WeightInfo for () {
	fn create_bounty_by_council(i: u32, j: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_bounty_by_member(i: u32, j: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn terminate_bounty_w_oracle_reward_funding_expired() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn terminate_bounty_wo_oracle_reward_funding_expired() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn terminate_bounty_w_oracle_reward_wo_funds_funding() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn terminate_bounty_wo_oracle_reward_wo_funds_funding() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn terminate_bounty_w_oracle_reward_w_funds_funding() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn terminate_bounty_wo_oracle_reward_w_funds_funding() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn terminate_bounty_work_or_judging_period() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn fund_bounty_by_member() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn fund_bounty_by_council() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn withdraw_funding_by_member() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn withdraw_funding_by_council() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn announce_work_entry(i: u32, j: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn submit_work(i: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn submit_oracle_judgment_by_council(_j: u32, _k: u32, w: u32, r: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn submit_oracle_judgment_by_member(_j: u32, _k: u32, w: u32, r: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn switch_oracle_to_council_by_council_successful() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn switch_oracle_to_member_by_oracle_council() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn switch_oracle_to_member_by_council() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn switch_oracle_to_member_by_oracle_member() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn switch_oracle_to_council_by_oracle_member() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn end_working_period() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn withdraw_entrant_stake() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn withdraw_funding_state_bloat_bond_by_council() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn withdraw_funding_state_bloat_bond_by_member() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn withdraw_oracle_reward_by_oracle_council() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn withdraw_oracle_reward_by_oracle_member() -> Weight {
		Weight::from_parts(0, 0)
	}
	fn entrant_remark(i: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn contributor_remark(i: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn oracle_remark(i: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn creator_remark(i: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
}
