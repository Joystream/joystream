// This file is part of Substrate.

// Copyright (C) 2022 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for referendum
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-06-27, STEPS: `1`, REPEAT: 1, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./scripts/../target/release/joystream-node
// benchmark
// pallet
// --pallet=referendum
// --extrinsic=*
// --chain=dev
// --steps=1
// --repeat=1
// --execution=wasm
// --no-verify
// --template=./scripts/../devops/joystream-pallet-weight-template.hbs
// --output=.

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for referendum.
pub trait WeightInfo {
	fn on_initialize_revealing(i: u32, ) -> Weight;
	fn on_initialize_voting() -> Weight;
	fn vote() -> Weight;
	fn reveal_vote_space_for_new_winner(i: u32, ) -> Weight;
	fn reveal_vote_space_not_in_winners(i: u32, ) -> Weight;
	fn reveal_vote_space_replace_last_winner(i: u32, ) -> Weight;
	fn reveal_vote_already_existing(i: u32, ) -> Weight;
	fn release_vote_stake() -> Weight;
}

/// Weights for referendum using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: unknown [0x7c7ee947105fdd14e3fa8953bc2a2f825c84d490439bb889d4d6ffec931483ee] (r:1 w:1)
	// Storage: unknown [0xaebd463ed9925c488c112434d61debc0d5266cafd38af6684c76bb87c647c4be] (r:1 w:1)
	// Storage: unknown [0xaebd463ed9925c488c112434d61debc05c84d490439bb889d4d6ffec931483ee] (r:0 w:1)
	fn on_initialize_revealing(_i: u32, ) -> Weight {
		(27_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: unknown [0x7c7ee947105fdd14e3fa8953bc2a2f825c84d490439bb889d4d6ffec931483ee] (r:1 w:1)
	fn on_initialize_voting() -> Weight {
		(18_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: unknown [0x7c7ee947105fdd14e3fa8953bc2a2f825c84d490439bb889d4d6ffec931483ee] (r:1 w:0)
	// Storage: unknown [0x7c7ee947105fdd14e3fa8953bc2a2f82b4adc6a1ce4f7cc2e696ed0fd06bd01c] (r:1 w:1)
	// Storage: unknown [0xc2261276cc9d1f8598ea4b6a74b15c2f218f26c73add634897550b4003b26bc6] (r:1 w:1)
	// Storage: unknown [0x26aa394eea5630e07c48ae0c9558cef7b99d880ec681799c0cf30e8886371da9] (r:1 w:1)
	fn vote() -> Weight {
		(30_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: unknown [0x7c7ee947105fdd14e3fa8953bc2a2f825c84d490439bb889d4d6ffec931483ee] (r:1 w:1)
	// Storage: unknown [0x7c7ee947105fdd14e3fa8953bc2a2f82b4adc6a1ce4f7cc2e696ed0fd06bd01c] (r:1 w:1)
	// Storage: unknown [0xaebd463ed9925c488c112434d61debc0948ece45793d7f15c9c0b9574ddbc665] (r:1 w:1)
	// Storage: unknown [0xaebd463ed9925c488c112434d61debc0d5266cafd38af6684c76bb87c647c4be] (r:1 w:0)
	fn reveal_vote_space_for_new_winner(_i: u32, ) -> Weight {
		(52_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: unknown [0x7c7ee947105fdd14e3fa8953bc2a2f825c84d490439bb889d4d6ffec931483ee] (r:1 w:1)
	// Storage: unknown [0x7c7ee947105fdd14e3fa8953bc2a2f82b4adc6a1ce4f7cc2e696ed0fd06bd01c] (r:1 w:1)
	// Storage: unknown [0xaebd463ed9925c488c112434d61debc0948ece45793d7f15c9c0b9574ddbc665] (r:1 w:1)
	// Storage: unknown [0xaebd463ed9925c488c112434d61debc0d5266cafd38af6684c76bb87c647c4be] (r:1 w:0)
	fn reveal_vote_space_not_in_winners(_i: u32, ) -> Weight {
		(35_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: unknown [0x7c7ee947105fdd14e3fa8953bc2a2f825c84d490439bb889d4d6ffec931483ee] (r:1 w:1)
	// Storage: unknown [0x7c7ee947105fdd14e3fa8953bc2a2f82b4adc6a1ce4f7cc2e696ed0fd06bd01c] (r:1 w:1)
	// Storage: unknown [0xaebd463ed9925c488c112434d61debc0948ece45793d7f15c9c0b9574ddbc665] (r:1 w:1)
	// Storage: unknown [0xaebd463ed9925c488c112434d61debc0d5266cafd38af6684c76bb87c647c4be] (r:1 w:0)
	fn reveal_vote_space_replace_last_winner(_i: u32, ) -> Weight {
		(35_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: unknown [0x7c7ee947105fdd14e3fa8953bc2a2f825c84d490439bb889d4d6ffec931483ee] (r:1 w:1)
	// Storage: unknown [0x7c7ee947105fdd14e3fa8953bc2a2f82b4adc6a1ce4f7cc2e696ed0fd06bd01c] (r:1 w:1)
	// Storage: unknown [0xaebd463ed9925c488c112434d61debc0948ece45793d7f15c9c0b9574ddbc665] (r:1 w:1)
	// Storage: unknown [0xaebd463ed9925c488c112434d61debc0d5266cafd38af6684c76bb87c647c4be] (r:1 w:0)
	fn reveal_vote_already_existing(_i: u32, ) -> Weight {
		(36_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: unknown [0x7c7ee947105fdd14e3fa8953bc2a2f82b4adc6a1ce4f7cc2e696ed0fd06bd01c] (r:1 w:1)
	// Storage: unknown [0xaebd463ed9925c488c112434d61debc0d5266cafd38af6684c76bb87c647c4be] (r:1 w:0)
	// Storage: unknown [0xc2261276cc9d1f8598ea4b6a74b15c2f218f26c73add634897550b4003b26bc6] (r:1 w:1)
	// Storage: unknown [0x26aa394eea5630e07c48ae0c9558cef7b99d880ec681799c0cf30e8886371da9] (r:1 w:1)
	fn release_vote_stake() -> Weight {
		(35_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
}

// Default implementation for tests
impl WeightInfo for () {
	fn on_initialize_revealing(_i: u32, ) -> Weight {
		0
	}
	fn on_initialize_voting() -> Weight {
		0
	}
	fn vote() -> Weight {
		0
	}
	fn reveal_vote_space_for_new_winner(_i: u32, ) -> Weight {
		0
	}
	fn reveal_vote_space_not_in_winners(_i: u32, ) -> Weight {
		0
	}
	fn reveal_vote_space_replace_last_winner(_i: u32, ) -> Weight {
		0
	}
	fn reveal_vote_already_existing(_i: u32, ) -> Weight {
		0
	}
	fn release_vote_stake() -> Weight {
		0
	}
}
