// This file is part of Substrate.

// Copyright (C) 2022 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for proposals_codex
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-04-08, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("prod-test"), DB CACHE: 1024

// Executed Command:
// ./scripts/../target/release/joystream-node
// benchmark
// pallet
// --pallet=proposals_codex
// --extrinsic=*
// --chain=prod-test
// --steps=50
// --repeat=20
// --execution=wasm
// --template=./scripts/../devops/joystream-pallet-weight-template.hbs
// --output=./scripts/../runtime-modules/proposals/codex/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(unused_variables)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions needed for proposals_codex.
pub trait WeightInfo {
	fn create_proposal_signal(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_runtime_upgrade(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_funding_request(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_max_validator_count(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_veto_proposal(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_create_working_group_lead_opening(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_fill_working_group_lead_opening(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_update_working_group_budget(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_decrease_working_group_lead_stake(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_slash_working_group_lead(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_working_group_lead_reward(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_terminate_working_group_lead(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_amend_constitution(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_cancel_working_group_lead_opening(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_membership_price(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_council_budget_increment(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_councilor_reward(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_initial_invitation_balance(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_initial_invitation_count(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_membership_lead_invitation_quota(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_referral_cut(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_update_global_nft_limit(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_update_channel_payouts(_t: u32, _d: u32, _i: u32, ) -> Weight;
	fn create_proposal_freeze_pallet(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_update_token_pallet_token_constraints(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_update_argo_bridge_constraints(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_era_payout_damping_factor(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_decrease_council_budget(_t: u32, _d: u32, ) -> Weight;
}

/// Weights for proposals_codex using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_signal(i: u32, t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 135_030 nanoseconds.
		Weight::from_parts(93_012_635, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 5_178
			.saturating_add(Weight::from_parts(1_708_994, 0u64).saturating_mul(i.into()))
			// Standard Error: 26_205
			.saturating_add(Weight::from_parts(844_152, 0u64).saturating_mul(t.into()))
			// Standard Error: 26_205
			.saturating_add(Weight::from_parts(1_114_705, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_runtime_upgrade(i: u32, t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 133_284 nanoseconds.
		Weight::from_parts(90_757_243, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 5_144
			.saturating_add(Weight::from_parts(1_692_359, 0u64).saturating_mul(i.into()))
			// Standard Error: 26_036
			.saturating_add(Weight::from_parts(981_174, 0u64).saturating_mul(t.into()))
			// Standard Error: 26_036
			.saturating_add(Weight::from_parts(1_092_411, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 20]`.
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_funding_request(i: u32, t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 107_931 nanoseconds.
		Weight::from_parts(85_095_765, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 11_482
			.saturating_add(Weight::from_parts(5_766, 0u64).saturating_mul(i.into()))
			// Standard Error: 11_482
			.saturating_add(Weight::from_parts(1_173_442, 0u64).saturating_mul(t.into()))
			// Standard Error: 11_482
			.saturating_add(Weight::from_parts(1_397_524, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Staking MinimumValidatorCount (r:1 w:0)
	// Proof: Staking MinimumValidatorCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_max_validator_count(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1167`
		//  Estimated: `21429`
		// Minimum execution time: 108_213 nanoseconds.
		Weight::from_parts(86_973_315, 0u64)
			.saturating_add(Weight::from_parts(0, 21429))
			// Standard Error: 10_840
			.saturating_add(Weight::from_parts(1_102_916, 0u64).saturating_mul(t.into()))
			// Standard Error: 10_840
			.saturating_add(Weight::from_parts(1_277_151, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: ProposalEngine Proposals (r:1 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_veto_proposal(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1013`
		//  Estimated: `23545`
		// Minimum execution time: 116_013 nanoseconds.
		Weight::from_parts(95_866_676, 0u64)
			.saturating_add(Weight::from_parts(0, 23545))
			// Standard Error: 10_189
			.saturating_add(Weight::from_parts(1_060_385, 0u64).saturating_mul(t.into()))
			// Standard Error: 10_189
			.saturating_add(Weight::from_parts(1_283_512, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_create_working_group_lead_opening(i: u32, t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 132_549 nanoseconds.
		Weight::from_parts(92_814_676, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 5_344
			.saturating_add(Weight::from_parts(1_842_188, 0u64).saturating_mul(i.into()))
			// Standard Error: 27_046
			.saturating_add(Weight::from_parts(856_996, 0u64).saturating_mul(t.into()))
			// Standard Error: 27_046
			.saturating_add(Weight::from_parts(1_013_383, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup OpeningById (r:1 w:0)
	// Proof: Instance1WorkingGroup OpeningById (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
	// Storage: Instance1WorkingGroup ApplicationById (r:1 w:0)
	// Proof: Instance1WorkingGroup ApplicationById (max_values: None, max_size: Some(168), added: 2643, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_fill_working_group_lead_opening(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1038`
		//  Estimated: `27152`
		// Minimum execution time: 119_331 nanoseconds.
		Weight::from_parts(99_740_761, 0u64)
			.saturating_add(Weight::from_parts(0, 27152))
			// Standard Error: 13_314
			.saturating_add(Weight::from_parts(1_101_079, 0u64).saturating_mul(t.into()))
			// Standard Error: 13_314
			.saturating_add(Weight::from_parts(1_227_413, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_update_working_group_budget(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 103_045 nanoseconds.
		Weight::from_parts(81_928_374, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 10_758
			.saturating_add(Weight::from_parts(1_133_638, 0u64).saturating_mul(t.into()))
			// Standard Error: 10_758
			.saturating_add(Weight::from_parts(1_242_118, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup CurrentLead (r:1 w:0)
	// Proof: Instance1WorkingGroup CurrentLead (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_decrease_working_group_lead_stake(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `786`
		//  Estimated: `21433`
		// Minimum execution time: 108_714 nanoseconds.
		Weight::from_parts(87_484_089, 0u64)
			.saturating_add(Weight::from_parts(0, 21433))
			// Standard Error: 12_291
			.saturating_add(Weight::from_parts(1_130_598, 0u64).saturating_mul(t.into()))
			// Standard Error: 12_291
			.saturating_add(Weight::from_parts(1_296_286, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup CurrentLead (r:1 w:0)
	// Proof: Instance1WorkingGroup CurrentLead (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_slash_working_group_lead(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `786`
		//  Estimated: `21433`
		// Minimum execution time: 109_520 nanoseconds.
		Weight::from_parts(93_805_883, 0u64)
			.saturating_add(Weight::from_parts(0, 21433))
			// Standard Error: 36_397
			.saturating_add(Weight::from_parts(1_018_077, 0u64).saturating_mul(t.into()))
			// Standard Error: 36_397
			.saturating_add(Weight::from_parts(992_837, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup CurrentLead (r:1 w:0)
	// Proof: Instance1WorkingGroup CurrentLead (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_working_group_lead_reward(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `786`
		//  Estimated: `21433`
		// Minimum execution time: 109_323 nanoseconds.
		Weight::from_parts(86_730_171, 0u64)
			.saturating_add(Weight::from_parts(0, 21433))
			// Standard Error: 11_365
			.saturating_add(Weight::from_parts(1_161_005, 0u64).saturating_mul(t.into()))
			// Standard Error: 11_365
			.saturating_add(Weight::from_parts(1_296_443, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup CurrentLead (r:1 w:0)
	// Proof: Instance1WorkingGroup CurrentLead (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_terminate_working_group_lead(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `786`
		//  Estimated: `21433`
		// Minimum execution time: 108_639 nanoseconds.
		Weight::from_parts(88_849_604, 0u64)
			.saturating_add(Weight::from_parts(0, 21433))
			// Standard Error: 10_634
			.saturating_add(Weight::from_parts(1_049_530, 0u64).saturating_mul(t.into()))
			// Standard Error: 10_634
			.saturating_add(Weight::from_parts(1_304_377, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_amend_constitution(i: u32, t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 132_810 nanoseconds.
		Weight::from_parts(91_708_174, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 4_969
			.saturating_add(Weight::from_parts(1_695_324, 0u64).saturating_mul(i.into()))
			// Standard Error: 25_151
			.saturating_add(Weight::from_parts(870_193, 0u64).saturating_mul(t.into()))
			// Standard Error: 25_151
			.saturating_add(Weight::from_parts(1_073_828, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup OpeningById (r:1 w:0)
	// Proof: Instance1WorkingGroup OpeningById (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_cancel_working_group_lead_opening(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `803`
		//  Estimated: `23519`
		// Minimum execution time: 109_016 nanoseconds.
		Weight::from_parts(89_105_958, 0u64)
			.saturating_add(Weight::from_parts(0, 23519))
			// Standard Error: 12_622
			.saturating_add(Weight::from_parts(1_111_436, 0u64).saturating_mul(t.into()))
			// Standard Error: 12_622
			.saturating_add(Weight::from_parts(1_246_300, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_membership_price(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 102_024 nanoseconds.
		Weight::from_parts(80_080_123, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 11_512
			.saturating_add(Weight::from_parts(1_172_250, 0u64).saturating_mul(t.into()))
			// Standard Error: 11_512
			.saturating_add(Weight::from_parts(1_307_229, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_council_budget_increment(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 102_310 nanoseconds.
		Weight::from_parts(80_360_003, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 10_651
			.saturating_add(Weight::from_parts(1_145_175, 0u64).saturating_mul(t.into()))
			// Standard Error: 10_651
			.saturating_add(Weight::from_parts(1_311_721, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_councilor_reward(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 102_394 nanoseconds.
		Weight::from_parts(80_700_199, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 11_526
			.saturating_add(Weight::from_parts(1_140_085, 0u64).saturating_mul(t.into()))
			// Standard Error: 11_526
			.saturating_add(Weight::from_parts(1_315_572, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_initial_invitation_balance(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 103_230 nanoseconds.
		Weight::from_parts(80_659_930, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 11_501
			.saturating_add(Weight::from_parts(1_146_317, 0u64).saturating_mul(t.into()))
			// Standard Error: 11_501
			.saturating_add(Weight::from_parts(1_304_543, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_initial_invitation_count(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 102_492 nanoseconds.
		Weight::from_parts(81_168_686, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 12_060
			.saturating_add(Weight::from_parts(1_127_481, 0u64).saturating_mul(t.into()))
			// Standard Error: 12_060
			.saturating_add(Weight::from_parts(1_261_474, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_membership_lead_invitation_quota(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 102_570 nanoseconds.
		Weight::from_parts(81_489_060, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 12_991
			.saturating_add(Weight::from_parts(1_100_298, 0u64).saturating_mul(t.into()))
			// Standard Error: 12_991
			.saturating_add(Weight::from_parts(1_269_263, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_referral_cut(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 101_531 nanoseconds.
		Weight::from_parts(81_009_148, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 11_971
			.saturating_add(Weight::from_parts(1_096_276, 0u64).saturating_mul(t.into()))
			// Standard Error: 11_971
			.saturating_add(Weight::from_parts(1_305_829, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_update_global_nft_limit(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 103_221 nanoseconds.
		Weight::from_parts(82_589_734, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 13_872
			.saturating_add(Weight::from_parts(1_044_530, 0u64).saturating_mul(t.into()))
			// Standard Error: 13_872
			.saturating_add(Weight::from_parts(1_295_861, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	/// The range of component `i` is `[0, 100]`.
	fn create_proposal_update_channel_payouts(t: u32, d: u32, i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 130_620 nanoseconds.
		Weight::from_parts(95_187_960, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 22_544
			.saturating_add(Weight::from_parts(835_697, 0u64).saturating_mul(t.into()))
			// Standard Error: 22_544
			.saturating_add(Weight::from_parts(1_088_029, 0u64).saturating_mul(d.into()))
			// Standard Error: 4_402
			.saturating_add(Weight::from_parts(1_582_011, 0u64).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_freeze_pallet(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 102_123 nanoseconds.
		Weight::from_parts(80_476_305, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 11_102
			.saturating_add(Weight::from_parts(1_110_327, 0u64).saturating_mul(t.into()))
			// Standard Error: 11_102
			.saturating_add(Weight::from_parts(1_311_569, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_update_token_pallet_token_constraints(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 103_350 nanoseconds.
		Weight::from_parts(82_522_075, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 12_486
			.saturating_add(Weight::from_parts(1_112_896, 0u64).saturating_mul(t.into()))
			// Standard Error: 12_486
			.saturating_add(Weight::from_parts(1_256_380, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}

	fn create_proposal_update_argo_bridge_constraints(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 103_350 nanoseconds.
		Weight::from_parts(82_522_075, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 12_486
			.saturating_add(Weight::from_parts(1_112_896, 0u64).saturating_mul(t.into()))
			// Standard Error: 12_486
			.saturating_add(Weight::from_parts(1_256_380, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}

	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_era_payout_damping_factor(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 103_318 nanoseconds.
		Weight::from_parts(80_183_578, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 11_335
			.saturating_add(Weight::from_parts(1_140_225, 0u64).saturating_mul(t.into()))
			// Standard Error: 11_335
			.saturating_add(Weight::from_parts(1_298_399, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_decrease_council_budget(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 102_634 nanoseconds.
		Weight::from_parts(81_104_306, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 10_729
			.saturating_add(Weight::from_parts(1_094_861, 0u64).saturating_mul(t.into()))
			// Standard Error: 10_729
			.saturating_add(Weight::from_parts(1_304_078, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
}

// Default implementation for tests
impl WeightInfo for () {
	fn create_proposal_signal(i: u32, t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_runtime_upgrade(i: u32, t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_funding_request(i: u32, t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_max_validator_count(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_veto_proposal(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_create_working_group_lead_opening(i: u32, t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_fill_working_group_lead_opening(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_update_working_group_budget(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_decrease_working_group_lead_stake(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_slash_working_group_lead(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_working_group_lead_reward(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_terminate_working_group_lead(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_amend_constitution(i: u32, t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_cancel_working_group_lead_opening(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_membership_price(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_council_budget_increment(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_councilor_reward(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_initial_invitation_balance(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_initial_invitation_count(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_membership_lead_invitation_quota(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_referral_cut(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_update_global_nft_limit(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_update_channel_payouts(t: u32, d: u32, i: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_freeze_pallet(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_update_token_pallet_token_constraints(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_update_argo_bridge_constraints(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_era_payout_damping_factor(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_decrease_council_budget(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
}
