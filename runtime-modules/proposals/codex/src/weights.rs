// This file is part of Substrate.

// Copyright (C) 2022 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for proposals_codex
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-11-06, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("prod-test"), DB CACHE: 1024

// Executed Command:
// ./scripts/../target/release/joystream-node
// benchmark
// pallet
// --pallet=proposals_codex
// --extrinsic=*
// --chain=prod-test
// --steps=50
// --repeat=20
// --execution=wasm
// --template=./scripts/../devops/joystream-pallet-weight-template.hbs
// --output=./scripts/../runtime-modules/proposals/codex/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(unused_variables)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions needed for proposals_codex.
pub trait WeightInfo {
	fn create_proposal_signal(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_runtime_upgrade(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_funding_request(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_max_validator_count(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_veto_proposal(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_create_working_group_lead_opening(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_fill_working_group_lead_opening(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_update_working_group_budget(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_decrease_working_group_lead_stake(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_slash_working_group_lead(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_working_group_lead_reward(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_terminate_working_group_lead(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_amend_constitution(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_cancel_working_group_lead_opening(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_membership_price(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_council_budget_increment(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_councilor_reward(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_initial_invitation_balance(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_initial_invitation_count(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_membership_lead_invitation_quota(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_referral_cut(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_update_global_nft_limit(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_update_channel_payouts(_t: u32, _d: u32, _i: u32, ) -> Weight;
	fn create_proposal_freeze_pallet(_t: u32, _d: u32, ) -> Weight;
}

/// Weights for proposals_codex using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_signal(i: u32, t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 128_720 nanoseconds.
		Weight::from_parts(83_827_560, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 3_947
			.saturating_add(Weight::from_parts(1_573_727, 0u64).saturating_mul(i.into()))
			// Standard Error: 19_975
			.saturating_add(Weight::from_parts(1_046_846, 0u64).saturating_mul(t.into()))
			// Standard Error: 19_975
			.saturating_add(Weight::from_parts(1_233_685, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_runtime_upgrade(i: u32, t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 128_742 nanoseconds.
		Weight::from_parts(84_197_811, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 4_106
			.saturating_add(Weight::from_parts(1_588_007, 0u64).saturating_mul(i.into()))
			// Standard Error: 20_781
			.saturating_add(Weight::from_parts(1_017_581, 0u64).saturating_mul(t.into()))
			// Standard Error: 20_781
			.saturating_add(Weight::from_parts(1_176_400, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 20]`.
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_funding_request(i: u32, t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 107_465 nanoseconds.
		Weight::from_parts(82_717_106, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 9_200
			.saturating_add(Weight::from_parts(118_652, 0u64).saturating_mul(i.into()))
			// Standard Error: 9_200
			.saturating_add(Weight::from_parts(1_175_929, 0u64).saturating_mul(t.into()))
			// Standard Error: 9_200
			.saturating_add(Weight::from_parts(1_292_042, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Staking MinimumValidatorCount (r:1 w:0)
	// Proof: Staking MinimumValidatorCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_max_validator_count(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1167`
		//  Estimated: `21429`
		// Minimum execution time: 107_221 nanoseconds.
		Weight::from_parts(85_957_936, 0u64)
			.saturating_add(Weight::from_parts(0, 21429))
			// Standard Error: 9_817
			.saturating_add(Weight::from_parts(1_097_400, 0u64).saturating_mul(t.into()))
			// Standard Error: 9_817
			.saturating_add(Weight::from_parts(1_221_509, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: ProposalEngine Proposals (r:1 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_veto_proposal(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1013`
		//  Estimated: `23545`
		// Minimum execution time: 115_187 nanoseconds.
		Weight::from_parts(96_345_793, 0u64)
			.saturating_add(Weight::from_parts(0, 23545))
			// Standard Error: 8_475
			.saturating_add(Weight::from_parts(1_035_378, 0u64).saturating_mul(t.into()))
			// Standard Error: 8_475
			.saturating_add(Weight::from_parts(1_169_635, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_create_working_group_lead_opening(i: u32, t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 129_157 nanoseconds.
		Weight::from_parts(83_269_035, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 4_829
			.saturating_add(Weight::from_parts(1_726_438, 0u64).saturating_mul(i.into()))
			// Standard Error: 24_438
			.saturating_add(Weight::from_parts(1_035_415, 0u64).saturating_mul(t.into()))
			// Standard Error: 24_438
			.saturating_add(Weight::from_parts(1_197_968, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup OpeningById (r:1 w:0)
	// Proof: Instance1WorkingGroup OpeningById (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
	// Storage: Instance1WorkingGroup ApplicationById (r:1 w:0)
	// Proof: Instance1WorkingGroup ApplicationById (max_values: None, max_size: Some(168), added: 2643, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_fill_working_group_lead_opening(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1038`
		//  Estimated: `27152`
		// Minimum execution time: 118_546 nanoseconds.
		Weight::from_parts(97_164_500, 0u64)
			.saturating_add(Weight::from_parts(0, 27152))
			// Standard Error: 8_990
			.saturating_add(Weight::from_parts(1_119_467, 0u64).saturating_mul(t.into()))
			// Standard Error: 8_990
			.saturating_add(Weight::from_parts(1_252_677, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_update_working_group_budget(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 102_387 nanoseconds.
		Weight::from_parts(80_920_828, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 9_114
			.saturating_add(Weight::from_parts(1_083_779, 0u64).saturating_mul(t.into()))
			// Standard Error: 9_114
			.saturating_add(Weight::from_parts(1_215_223, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup CurrentLead (r:1 w:0)
	// Proof: Instance1WorkingGroup CurrentLead (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_decrease_working_group_lead_stake(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `786`
		//  Estimated: `21433`
		// Minimum execution time: 108_019 nanoseconds.
		Weight::from_parts(87_587_475, 0u64)
			.saturating_add(Weight::from_parts(0, 21433))
			// Standard Error: 8_786
			.saturating_add(Weight::from_parts(1_068_424, 0u64).saturating_mul(t.into()))
			// Standard Error: 8_786
			.saturating_add(Weight::from_parts(1_201_093, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup CurrentLead (r:1 w:0)
	// Proof: Instance1WorkingGroup CurrentLead (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_slash_working_group_lead(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `786`
		//  Estimated: `21433`
		// Minimum execution time: 108_268 nanoseconds.
		Weight::from_parts(88_427_109, 0u64)
			.saturating_add(Weight::from_parts(0, 21433))
			// Standard Error: 9_596
			.saturating_add(Weight::from_parts(1_058_663, 0u64).saturating_mul(t.into()))
			// Standard Error: 9_596
			.saturating_add(Weight::from_parts(1_167_638, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup CurrentLead (r:1 w:0)
	// Proof: Instance1WorkingGroup CurrentLead (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_working_group_lead_reward(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `786`
		//  Estimated: `21433`
		// Minimum execution time: 107_145 nanoseconds.
		Weight::from_parts(86_500_304, 0u64)
			.saturating_add(Weight::from_parts(0, 21433))
			// Standard Error: 9_510
			.saturating_add(Weight::from_parts(1_122_859, 0u64).saturating_mul(t.into()))
			// Standard Error: 9_510
			.saturating_add(Weight::from_parts(1_228_148, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup CurrentLead (r:1 w:0)
	// Proof: Instance1WorkingGroup CurrentLead (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_terminate_working_group_lead(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `786`
		//  Estimated: `21433`
		// Minimum execution time: 106_905 nanoseconds.
		Weight::from_parts(86_871_011, 0u64)
			.saturating_add(Weight::from_parts(0, 21433))
			// Standard Error: 8_723
			.saturating_add(Weight::from_parts(1_082_282, 0u64).saturating_mul(t.into()))
			// Standard Error: 8_723
			.saturating_add(Weight::from_parts(1_220_616, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `i` is `[1, 100]`.
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_amend_constitution(i: u32, t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 128_180 nanoseconds.
		Weight::from_parts(84_661_519, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 4_382
			.saturating_add(Weight::from_parts(1_583_896, 0u64).saturating_mul(i.into()))
			// Standard Error: 22_178
			.saturating_add(Weight::from_parts(1_016_422, 0u64).saturating_mul(t.into()))
			// Standard Error: 22_178
			.saturating_add(Weight::from_parts(1_192_695, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Instance1WorkingGroup OpeningById (r:1 w:0)
	// Proof: Instance1WorkingGroup OpeningById (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_cancel_working_group_lead_opening(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `803`
		//  Estimated: `23519`
		// Minimum execution time: 107_687 nanoseconds.
		Weight::from_parts(87_496_406, 0u64)
			.saturating_add(Weight::from_parts(0, 23519))
			// Standard Error: 9_167
			.saturating_add(Weight::from_parts(1_079_386, 0u64).saturating_mul(t.into()))
			// Standard Error: 9_167
			.saturating_add(Weight::from_parts(1_212_126, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_membership_price(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 102_055 nanoseconds.
		Weight::from_parts(81_142_005, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 9_542
			.saturating_add(Weight::from_parts(1_070_902, 0u64).saturating_mul(t.into()))
			// Standard Error: 9_542
			.saturating_add(Weight::from_parts(1_205_684, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_council_budget_increment(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 101_346 nanoseconds.
		Weight::from_parts(81_079_661, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 9_482
			.saturating_add(Weight::from_parts(1_099_004, 0u64).saturating_mul(t.into()))
			// Standard Error: 9_482
			.saturating_add(Weight::from_parts(1_193_430, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_councilor_reward(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 100_215 nanoseconds.
		Weight::from_parts(80_635_764, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 9_243
			.saturating_add(Weight::from_parts(1_085_381, 0u64).saturating_mul(t.into()))
			// Standard Error: 9_243
			.saturating_add(Weight::from_parts(1_216_720, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_initial_invitation_balance(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 101_916 nanoseconds.
		Weight::from_parts(79_755_589, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 9_964
			.saturating_add(Weight::from_parts(1_110_915, 0u64).saturating_mul(t.into()))
			// Standard Error: 9_964
			.saturating_add(Weight::from_parts(1_256_642, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_initial_invitation_count(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 100_899 nanoseconds.
		Weight::from_parts(79_881_148, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 9_587
			.saturating_add(Weight::from_parts(1_100_528, 0u64).saturating_mul(t.into()))
			// Standard Error: 9_587
			.saturating_add(Weight::from_parts(1_232_652, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_membership_lead_invitation_quota(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 101_016 nanoseconds.
		Weight::from_parts(79_577_404, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 8_899
			.saturating_add(Weight::from_parts(1_093_744, 0u64).saturating_mul(t.into()))
			// Standard Error: 8_899
			.saturating_add(Weight::from_parts(1_265_943, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_set_referral_cut(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 100_679 nanoseconds.
		Weight::from_parts(79_809_940, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 10_090
			.saturating_add(Weight::from_parts(1_127_359, 0u64).saturating_mul(t.into()))
			// Standard Error: 10_090
			.saturating_add(Weight::from_parts(1_236_232, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_update_global_nft_limit(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 101_617 nanoseconds.
		Weight::from_parts(81_088_778, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 9_600
			.saturating_add(Weight::from_parts(1_069_076, 0u64).saturating_mul(t.into()))
			// Standard Error: 9_600
			.saturating_add(Weight::from_parts(1_215_626, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	/// The range of component `i` is `[0, 100]`.
	fn create_proposal_update_channel_payouts(t: u32, d: u32, i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 127_649 nanoseconds.
		Weight::from_parts(99_177_550, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 28_932
			.saturating_add(Weight::from_parts(725_243, 0u64).saturating_mul(t.into()))
			// Standard Error: 28_932
			.saturating_add(Weight::from_parts(863_110, 0u64).saturating_mul(d.into()))
			// Standard Error: 5_649
			.saturating_add(Weight::from_parts(1_456_361, 0u64).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Proof: Membership MembershipById (max_values: None, max_size: Some(125), added: 2600, mode: MaxEncodedLen)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Proof: ProposalEngine ActiveProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Proof: Membership StakingAccountIdMemberStatus (max_values: None, max_size: Some(57), added: 2532, mode: MaxEncodedLen)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Proof: ProposalDiscussion ThreadCount (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Proof: ProposalEngine ProposalCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Proof: ProposalsCodex ThreadIdByProposalId (max_values: None, max_size: Some(28), added: 2503, mode: MaxEncodedLen)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Proof: ProposalDiscussion ThreadById (max_values: None, max_size: Some(198), added: 2673, mode: MaxEncodedLen)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Proof: ProposalEngine Proposals (max_values: None, max_size: Some(140), added: 2615, mode: MaxEncodedLen)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	// Proof: ProposalEngine DispatchableCallCode (max_values: None, max_size: Some(3145752), added: 3148227, mode: MaxEncodedLen)
	/// The range of component `t` is `[1, 20]`.
	/// The range of component `d` is `[1, 20]`.
	fn create_proposal_freeze_pallet(t: u32, d: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `651`
		//  Estimated: `19940`
		// Minimum execution time: 101_295 nanoseconds.
		Weight::from_parts(80_174_773, 0u64)
			.saturating_add(Weight::from_parts(0, 19940))
			// Standard Error: 9_470
			.saturating_add(Weight::from_parts(1_084_474, 0u64).saturating_mul(t.into()))
			// Standard Error: 9_470
			.saturating_add(Weight::from_parts(1_235_382, 0u64).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
}

// Default implementation for tests
impl WeightInfo for () {
	fn create_proposal_signal(i: u32, t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_runtime_upgrade(i: u32, t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_funding_request(i: u32, t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_max_validator_count(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_veto_proposal(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_create_working_group_lead_opening(i: u32, t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_fill_working_group_lead_opening(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_update_working_group_budget(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_decrease_working_group_lead_stake(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_slash_working_group_lead(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_working_group_lead_reward(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_terminate_working_group_lead(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_amend_constitution(i: u32, t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_cancel_working_group_lead_opening(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_membership_price(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_council_budget_increment(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_councilor_reward(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_initial_invitation_balance(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_initial_invitation_count(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_membership_lead_invitation_quota(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_set_referral_cut(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_update_global_nft_limit(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_update_channel_payouts(t: u32, d: u32, i: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
	fn create_proposal_freeze_pallet(t: u32, d: u32, ) -> Weight {
		Weight::from_parts(0, 0)
	}
}
