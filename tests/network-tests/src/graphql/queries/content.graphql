fragment DataObjectTypeFields on DataObjectType {
  __typename
  ... on DataObjectTypeChannelAvatar {
    channel {
      id
    }
  }
  ... on DataObjectTypeChannelCoverPhoto {
    channel {
      id
    }
  }
  ... on DataObjectTypeVideoThumbnail {
    video {
      id
    }
  }
  ... on DataObjectTypeVideoMedia {
    video {
      id
    }
  }
}

fragment StorageDataObjectFields on StorageDataObject {
  id
  ipfsHash
  isAccepted
  size
  type {
    ...DataObjectTypeFields
  }
  deletionPrize
  unsetAt
  storageBagId
}

fragment ChannelFields on Channel {
  id
  activeVideosCounter
  title
  description
  isPublic
  language {
    iso
  }
  rewardAccount
  isCensored
  ownerMember {
    id
  }
  ownerCuratorGroup {
    id
  }
  category {
    name
  }
  avatarPhoto {
    ...StorageDataObjectFields
  }
  coverPhoto {
    ...StorageDataObjectFields
  }
}

fragment ChannelCategoryFields on ChannelCategory {
  id
  activeVideosCounter
}

fragment VideoFields on Video {
  id
  commentsCount
  reactionsCount

  comments {
    id
    author {
      id
    }
    video {
      id
    }
    text
  }

  reactions {
    id
    reaction
  }
}

fragment VideoCommentFields on Comment {
  id
  author {
    id
  }

  video {
    id
  }

  text
  status

  reactions {
    id
    member {
      id
    }
  }
}

fragment CommentReactionFields on Comment {
  reactions {
    id
    member {
      id
    }
  }
  reactionsCountByReactionId {
    reactionId
    count
  }
}

fragment VideoCategoryFields on VideoCategory {
  id
  activeVideosCounter
}

fragment OwnedNftFields on OwnedNft {
  id
  video {
    id
  }
  ownerMember {
    id
  }
  metadata
  transactionalStatus {
    __typename
  }
  creatorRoyalty
}

query getChannelById($id: ID!) {
  channelByUniqueInput(where: { id: $id }) {
    ...ChannelFields
  }
}

query getChannelCategoryById($id: ID!) {
  channelCategoryByUniqueInput(where: { id: $id }) {
    ...ChannelCategoryFields
  }
}

query getVideoCategoryById($id: ID!) {
  videoCategoryByUniqueInput(where: { id: $id }) {
    ...VideoCategoryFields
  }
}

query getOwnedNftByVideoId($videoId: ID!) {
  ownedNfts(where: { video: { id_eq: $videoId } }) {
    ...OwnedNftFields
  }
}

query getRootCommentsByVideoId($videoId: ID!) {
  comments(where: { video: { id_eq: $videoId }, parentComment: null }) {
    ...VideoCommentFields
  }
}

query getRepliesByParentCommentId($commentId: ID!) {
  comments(where: { parentComment: { id_eq: $commentId } }) {
    ...VideoCommentFields
  }
}
query getCommentsByIds($ids: [ID!]) {
  comments(where: { id_in: $ids }) {
    ...VideoCommentFields
  }
}

query getCommentById($commentId: ID!) {
  commentByUniqueInput(where: { id: $commentId }) {
    ...VideoCommentFields
  }
}

# TODO: fetch member specific reactions

query getReactionsByCommentId($commentId: ID!, $memberId: ID) {
  commentByUniqueInput(where: { id: $commentId }) {
    ...CommentReactionFields
  }
}
