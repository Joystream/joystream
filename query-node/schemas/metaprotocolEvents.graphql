type MetaprotocolTransactionPending @variant {
  "Type needs to have at least one non-relation entity. This value is not used."
  dummy: Int
}

type MetaprotocolTransactionSuccessful @variant {
  "Type needs to have at least one non-relation entity. This value is not used."
  dummy: Int

  "ID of the created comment (if any)"
  commentCreated: Comment

  "ID of the edited comment (if any)"
  commentEdited: Comment

  "ID of the deleted comment (if any)"
  commentDeleted: Comment

  "ID of the moderated comment (if any)"
  commentModerated: Comment
}

type MetaprotocolTransactionErrored @variant {
  message: String!
}

union MetaprotocolTransactionStatus =
    MetaprotocolTransactionPending
  | MetaprotocolTransactionSuccessful
  | MetaprotocolTransactionErrored

type MetaprotocolTransactionStatusEvent implements Event @entity {
  ### GENERIC DATA ###

  "(network}-{blockNumber}-{indexInBlock}"
  id: ID!

  "Hash of the extrinsic which caused the event to be emitted"
  inExtrinsic: String

  "Blocknumber of the block in which the event was emitted."
  inBlock: Int!

  "Network the block was produced in"
  network: Network!

  "Index of event in block from which it was emitted."
  indexInBlock: Int!

  ### SPECIFIC DATA ###

  "The status of metaprotocol action"
  status: MetaprotocolTransactionStatus!
}
