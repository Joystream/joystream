type Query {
  announcingPeriodStartedEvents(
    offset: Int
    limit: Int = 50
    where: AnnouncingPeriodStartedEventWhereInput
    orderBy: [AnnouncingPeriodStartedEventOrderByInput!]
  ): [AnnouncingPeriodStartedEvent!]!
  announcingPeriodStartedEventByUniqueInput(
    where: AnnouncingPeriodStartedEventWhereUniqueInput!
  ): AnnouncingPeriodStartedEvent
  announcingPeriodStartedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: AnnouncingPeriodStartedEventWhereInput
    orderBy: [AnnouncingPeriodStartedEventOrderByInput!]
  ): AnnouncingPeriodStartedEventConnection!
  applicationFormQuestionAnswers(
    offset: Int
    limit: Int = 50
    where: ApplicationFormQuestionAnswerWhereInput
    orderBy: [ApplicationFormQuestionAnswerOrderByInput!]
  ): [ApplicationFormQuestionAnswer!]!
  applicationFormQuestionAnswerByUniqueInput(
    where: ApplicationFormQuestionAnswerWhereUniqueInput!
  ): ApplicationFormQuestionAnswer
  applicationFormQuestionAnswersConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ApplicationFormQuestionAnswerWhereInput
    orderBy: [ApplicationFormQuestionAnswerOrderByInput!]
  ): ApplicationFormQuestionAnswerConnection!
  applicationFormQuestions(
    offset: Int
    limit: Int = 50
    where: ApplicationFormQuestionWhereInput
    orderBy: [ApplicationFormQuestionOrderByInput!]
  ): [ApplicationFormQuestion!]!
  applicationFormQuestionByUniqueInput(
    where: ApplicationFormQuestionWhereUniqueInput!
  ): ApplicationFormQuestion
  applicationFormQuestionsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ApplicationFormQuestionWhereInput
    orderBy: [ApplicationFormQuestionOrderByInput!]
  ): ApplicationFormQuestionConnection!
  applicationWithdrawnEvents(
    offset: Int
    limit: Int = 50
    where: ApplicationWithdrawnEventWhereInput
    orderBy: [ApplicationWithdrawnEventOrderByInput!]
  ): [ApplicationWithdrawnEvent!]!
  applicationWithdrawnEventByUniqueInput(
    where: ApplicationWithdrawnEventWhereUniqueInput!
  ): ApplicationWithdrawnEvent
  applicationWithdrawnEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ApplicationWithdrawnEventWhereInput
    orderBy: [ApplicationWithdrawnEventOrderByInput!]
  ): ApplicationWithdrawnEventConnection!
  appliedOnOpeningEvents(
    offset: Int
    limit: Int = 50
    where: AppliedOnOpeningEventWhereInput
    orderBy: [AppliedOnOpeningEventOrderByInput!]
  ): [AppliedOnOpeningEvent!]!
  appliedOnOpeningEventByUniqueInput(
    where: AppliedOnOpeningEventWhereUniqueInput!
  ): AppliedOnOpeningEvent
  appliedOnOpeningEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: AppliedOnOpeningEventWhereInput
    orderBy: [AppliedOnOpeningEventOrderByInput!]
  ): AppliedOnOpeningEventConnection!
  auctionBidCanceledEvents(
    offset: Int
    limit: Int = 50
    where: AuctionBidCanceledEventWhereInput
    orderBy: [AuctionBidCanceledEventOrderByInput!]
  ): [AuctionBidCanceledEvent!]!
  auctionBidCanceledEventByUniqueInput(
    where: AuctionBidCanceledEventWhereUniqueInput!
  ): AuctionBidCanceledEvent
  auctionBidCanceledEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: AuctionBidCanceledEventWhereInput
    orderBy: [AuctionBidCanceledEventOrderByInput!]
  ): AuctionBidCanceledEventConnection!
  auctionBidMadeEvents(
    offset: Int
    limit: Int = 50
    where: AuctionBidMadeEventWhereInput
    orderBy: [AuctionBidMadeEventOrderByInput!]
  ): [AuctionBidMadeEvent!]!
  auctionBidMadeEventByUniqueInput(
    where: AuctionBidMadeEventWhereUniqueInput!
  ): AuctionBidMadeEvent
  auctionBidMadeEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: AuctionBidMadeEventWhereInput
    orderBy: [AuctionBidMadeEventOrderByInput!]
  ): AuctionBidMadeEventConnection!
  auctionCanceledEvents(
    offset: Int
    limit: Int = 50
    where: AuctionCanceledEventWhereInput
    orderBy: [AuctionCanceledEventOrderByInput!]
  ): [AuctionCanceledEvent!]!
  auctionCanceledEventByUniqueInput(
    where: AuctionCanceledEventWhereUniqueInput!
  ): AuctionCanceledEvent
  auctionCanceledEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: AuctionCanceledEventWhereInput
    orderBy: [AuctionCanceledEventOrderByInput!]
  ): AuctionCanceledEventConnection!
  auctions(
    offset: Int
    limit: Int = 50
    where: AuctionWhereInput
    orderBy: [AuctionOrderByInput!]
  ): [Auction!]!
  auctionByUniqueInput(where: AuctionWhereUniqueInput!): Auction
  auctionsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: AuctionWhereInput
    orderBy: [AuctionOrderByInput!]
  ): AuctionConnection!
  bidMadeCompletingAuctionEvents(
    offset: Int
    limit: Int = 50
    where: BidMadeCompletingAuctionEventWhereInput
    orderBy: [BidMadeCompletingAuctionEventOrderByInput!]
  ): [BidMadeCompletingAuctionEvent!]!
  bidMadeCompletingAuctionEventByUniqueInput(
    where: BidMadeCompletingAuctionEventWhereUniqueInput!
  ): BidMadeCompletingAuctionEvent
  bidMadeCompletingAuctionEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BidMadeCompletingAuctionEventWhereInput
    orderBy: [BidMadeCompletingAuctionEventOrderByInput!]
  ): BidMadeCompletingAuctionEventConnection!
  bids(
    offset: Int
    limit: Int = 50
    where: BidWhereInput
    orderBy: [BidOrderByInput!]
  ): [Bid!]!
  bidByUniqueInput(where: BidWhereUniqueInput!): Bid
  bidsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BidWhereInput
    orderBy: [BidOrderByInput!]
  ): BidConnection!
  bountyCanceledEvents(
    offset: Int
    limit: Int = 50
    where: BountyCanceledEventWhereInput
    orderBy: [BountyCanceledEventOrderByInput!]
  ): [BountyCanceledEvent!]!
  bountyCanceledEventByUniqueInput(
    where: BountyCanceledEventWhereUniqueInput!
  ): BountyCanceledEvent
  bountyCanceledEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BountyCanceledEventWhereInput
    orderBy: [BountyCanceledEventOrderByInput!]
  ): BountyCanceledEventConnection!
  bountyContributions(
    offset: Int
    limit: Int = 50
    where: BountyContributionWhereInput
    orderBy: [BountyContributionOrderByInput!]
  ): [BountyContribution!]!
  bountyContributionByUniqueInput(
    where: BountyContributionWhereUniqueInput!
  ): BountyContribution
  bountyContributionsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BountyContributionWhereInput
    orderBy: [BountyContributionOrderByInput!]
  ): BountyContributionConnection!
  bountyCreatedEvents(
    offset: Int
    limit: Int = 50
    where: BountyCreatedEventWhereInput
    orderBy: [BountyCreatedEventOrderByInput!]
  ): [BountyCreatedEvent!]!
  bountyCreatedEventByUniqueInput(
    where: BountyCreatedEventWhereUniqueInput!
  ): BountyCreatedEvent
  bountyCreatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BountyCreatedEventWhereInput
    orderBy: [BountyCreatedEventOrderByInput!]
  ): BountyCreatedEventConnection!
  bountyCreatorCherryWithdrawalEvents(
    offset: Int
    limit: Int = 50
    where: BountyCreatorCherryWithdrawalEventWhereInput
    orderBy: [BountyCreatorCherryWithdrawalEventOrderByInput!]
  ): [BountyCreatorCherryWithdrawalEvent!]!
  bountyCreatorCherryWithdrawalEventByUniqueInput(
    where: BountyCreatorCherryWithdrawalEventWhereUniqueInput!
  ): BountyCreatorCherryWithdrawalEvent
  bountyCreatorCherryWithdrawalEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BountyCreatorCherryWithdrawalEventWhereInput
    orderBy: [BountyCreatorCherryWithdrawalEventOrderByInput!]
  ): BountyCreatorCherryWithdrawalEventConnection!
  bountyEntrantWhitelists(
    offset: Int
    limit: Int = 50
    where: BountyEntrantWhitelistWhereInput
    orderBy: [BountyEntrantWhitelistOrderByInput!]
  ): [BountyEntrantWhitelist!]!
  bountyEntrantWhitelistByUniqueInput(
    where: BountyEntrantWhitelistWhereUniqueInput!
  ): BountyEntrantWhitelist
  bountyEntrantWhitelistsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BountyEntrantWhitelistWhereInput
    orderBy: [BountyEntrantWhitelistOrderByInput!]
  ): BountyEntrantWhitelistConnection!
  bountyEntries(
    offset: Int
    limit: Int = 50
    where: BountyEntryWhereInput
    orderBy: [BountyEntryOrderByInput!]
  ): [BountyEntry!]!
  bountyEntryByUniqueInput(where: BountyEntryWhereUniqueInput!): BountyEntry
  bountyEntriesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BountyEntryWhereInput
    orderBy: [BountyEntryOrderByInput!]
  ): BountyEntryConnection!
  bountyFundedEvents(
    offset: Int
    limit: Int = 50
    where: BountyFundedEventWhereInput
    orderBy: [BountyFundedEventOrderByInput!]
  ): [BountyFundedEvent!]!
  bountyFundedEventByUniqueInput(
    where: BountyFundedEventWhereUniqueInput!
  ): BountyFundedEvent
  bountyFundedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BountyFundedEventWhereInput
    orderBy: [BountyFundedEventOrderByInput!]
  ): BountyFundedEventConnection!
  bountyFundingWithdrawalEvents(
    offset: Int
    limit: Int = 50
    where: BountyFundingWithdrawalEventWhereInput
    orderBy: [BountyFundingWithdrawalEventOrderByInput!]
  ): [BountyFundingWithdrawalEvent!]!
  bountyFundingWithdrawalEventByUniqueInput(
    where: BountyFundingWithdrawalEventWhereUniqueInput!
  ): BountyFundingWithdrawalEvent
  bountyFundingWithdrawalEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BountyFundingWithdrawalEventWhereInput
    orderBy: [BountyFundingWithdrawalEventOrderByInput!]
  ): BountyFundingWithdrawalEventConnection!
  bountyMaxFundingReachedEvents(
    offset: Int
    limit: Int = 50
    where: BountyMaxFundingReachedEventWhereInput
    orderBy: [BountyMaxFundingReachedEventOrderByInput!]
  ): [BountyMaxFundingReachedEvent!]!
  bountyMaxFundingReachedEventByUniqueInput(
    where: BountyMaxFundingReachedEventWhereUniqueInput!
  ): BountyMaxFundingReachedEvent
  bountyMaxFundingReachedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BountyMaxFundingReachedEventWhereInput
    orderBy: [BountyMaxFundingReachedEventOrderByInput!]
  ): BountyMaxFundingReachedEventConnection!
  bountyRemovedEvents(
    offset: Int
    limit: Int = 50
    where: BountyRemovedEventWhereInput
    orderBy: [BountyRemovedEventOrderByInput!]
  ): [BountyRemovedEvent!]!
  bountyRemovedEventByUniqueInput(
    where: BountyRemovedEventWhereUniqueInput!
  ): BountyRemovedEvent
  bountyRemovedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BountyRemovedEventWhereInput
    orderBy: [BountyRemovedEventOrderByInput!]
  ): BountyRemovedEventConnection!
  bountyVetoedEvents(
    offset: Int
    limit: Int = 50
    where: BountyVetoedEventWhereInput
    orderBy: [BountyVetoedEventOrderByInput!]
  ): [BountyVetoedEvent!]!
  bountyVetoedEventByUniqueInput(
    where: BountyVetoedEventWhereUniqueInput!
  ): BountyVetoedEvent
  bountyVetoedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BountyVetoedEventWhereInput
    orderBy: [BountyVetoedEventOrderByInput!]
  ): BountyVetoedEventConnection!
  bounties(
    offset: Int
    limit: Int = 50
    where: BountyWhereInput
    orderBy: [BountyOrderByInput!]
  ): [Bounty!]!
  bountyByUniqueInput(where: BountyWhereUniqueInput!): Bounty
  bountiesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BountyWhereInput
    orderBy: [BountyOrderByInput!]
  ): BountyConnection!
  budgetBalanceSetEvents(
    offset: Int
    limit: Int = 50
    where: BudgetBalanceSetEventWhereInput
    orderBy: [BudgetBalanceSetEventOrderByInput!]
  ): [BudgetBalanceSetEvent!]!
  budgetBalanceSetEventByUniqueInput(
    where: BudgetBalanceSetEventWhereUniqueInput!
  ): BudgetBalanceSetEvent
  budgetBalanceSetEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BudgetBalanceSetEventWhereInput
    orderBy: [BudgetBalanceSetEventOrderByInput!]
  ): BudgetBalanceSetEventConnection!
  budgetIncrementUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: BudgetIncrementUpdatedEventWhereInput
    orderBy: [BudgetIncrementUpdatedEventOrderByInput!]
  ): [BudgetIncrementUpdatedEvent!]!
  budgetIncrementUpdatedEventByUniqueInput(
    where: BudgetIncrementUpdatedEventWhereUniqueInput!
  ): BudgetIncrementUpdatedEvent
  budgetIncrementUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BudgetIncrementUpdatedEventWhereInput
    orderBy: [BudgetIncrementUpdatedEventOrderByInput!]
  ): BudgetIncrementUpdatedEventConnection!
  budgetRefillEvents(
    offset: Int
    limit: Int = 50
    where: BudgetRefillEventWhereInput
    orderBy: [BudgetRefillEventOrderByInput!]
  ): [BudgetRefillEvent!]!
  budgetRefillEventByUniqueInput(
    where: BudgetRefillEventWhereUniqueInput!
  ): BudgetRefillEvent
  budgetRefillEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BudgetRefillEventWhereInput
    orderBy: [BudgetRefillEventOrderByInput!]
  ): BudgetRefillEventConnection!
  budgetRefillPlannedEvents(
    offset: Int
    limit: Int = 50
    where: BudgetRefillPlannedEventWhereInput
    orderBy: [BudgetRefillPlannedEventOrderByInput!]
  ): [BudgetRefillPlannedEvent!]!
  budgetRefillPlannedEventByUniqueInput(
    where: BudgetRefillPlannedEventWhereUniqueInput!
  ): BudgetRefillPlannedEvent
  budgetRefillPlannedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BudgetRefillPlannedEventWhereInput
    orderBy: [BudgetRefillPlannedEventOrderByInput!]
  ): BudgetRefillPlannedEventConnection!
  budgetSetEvents(
    offset: Int
    limit: Int = 50
    where: BudgetSetEventWhereInput
    orderBy: [BudgetSetEventOrderByInput!]
  ): [BudgetSetEvent!]!
  budgetSetEventByUniqueInput(
    where: BudgetSetEventWhereUniqueInput!
  ): BudgetSetEvent
  budgetSetEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BudgetSetEventWhereInput
    orderBy: [BudgetSetEventOrderByInput!]
  ): BudgetSetEventConnection!
  budgetSpendingEvents(
    offset: Int
    limit: Int = 50
    where: BudgetSpendingEventWhereInput
    orderBy: [BudgetSpendingEventOrderByInput!]
  ): [BudgetSpendingEvent!]!
  budgetSpendingEventByUniqueInput(
    where: BudgetSpendingEventWhereUniqueInput!
  ): BudgetSpendingEvent
  budgetSpendingEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BudgetSpendingEventWhereInput
    orderBy: [BudgetSpendingEventOrderByInput!]
  ): BudgetSpendingEventConnection!
  budgetUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: BudgetUpdatedEventWhereInput
    orderBy: [BudgetUpdatedEventOrderByInput!]
  ): [BudgetUpdatedEvent!]!
  budgetUpdatedEventByUniqueInput(
    where: BudgetUpdatedEventWhereUniqueInput!
  ): BudgetUpdatedEvent
  budgetUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BudgetUpdatedEventWhereInput
    orderBy: [BudgetUpdatedEventOrderByInput!]
  ): BudgetUpdatedEventConnection!
  buyNowCanceledEvents(
    offset: Int
    limit: Int = 50
    where: BuyNowCanceledEventWhereInput
    orderBy: [BuyNowCanceledEventOrderByInput!]
  ): [BuyNowCanceledEvent!]!
  buyNowCanceledEventByUniqueInput(
    where: BuyNowCanceledEventWhereUniqueInput!
  ): BuyNowCanceledEvent
  buyNowCanceledEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BuyNowCanceledEventWhereInput
    orderBy: [BuyNowCanceledEventOrderByInput!]
  ): BuyNowCanceledEventConnection!
  buyNowPriceUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: BuyNowPriceUpdatedEventWhereInput
    orderBy: [BuyNowPriceUpdatedEventOrderByInput!]
  ): [BuyNowPriceUpdatedEvent!]!
  buyNowPriceUpdatedEventByUniqueInput(
    where: BuyNowPriceUpdatedEventWhereUniqueInput!
  ): BuyNowPriceUpdatedEvent
  buyNowPriceUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: BuyNowPriceUpdatedEventWhereInput
    orderBy: [BuyNowPriceUpdatedEventOrderByInput!]
  ): BuyNowPriceUpdatedEventConnection!
  candidacyNoteMetadata(
    offset: Int
    limit: Int = 50
    where: CandidacyNoteMetadataWhereInput
    orderBy: [CandidacyNoteMetadataOrderByInput!]
  ): [CandidacyNoteMetadata!]!
  candidacyNoteMetadataByUniqueInput(
    where: CandidacyNoteMetadataWhereUniqueInput!
  ): CandidacyNoteMetadata
  candidacyNoteMetadataConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CandidacyNoteMetadataWhereInput
    orderBy: [CandidacyNoteMetadataOrderByInput!]
  ): CandidacyNoteMetadataConnection!
  candidacyNoteSetEvents(
    offset: Int
    limit: Int = 50
    where: CandidacyNoteSetEventWhereInput
    orderBy: [CandidacyNoteSetEventOrderByInput!]
  ): [CandidacyNoteSetEvent!]!
  candidacyNoteSetEventByUniqueInput(
    where: CandidacyNoteSetEventWhereUniqueInput!
  ): CandidacyNoteSetEvent
  candidacyNoteSetEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CandidacyNoteSetEventWhereInput
    orderBy: [CandidacyNoteSetEventOrderByInput!]
  ): CandidacyNoteSetEventConnection!
  candidacyStakeReleaseEvents(
    offset: Int
    limit: Int = 50
    where: CandidacyStakeReleaseEventWhereInput
    orderBy: [CandidacyStakeReleaseEventOrderByInput!]
  ): [CandidacyStakeReleaseEvent!]!
  candidacyStakeReleaseEventByUniqueInput(
    where: CandidacyStakeReleaseEventWhereUniqueInput!
  ): CandidacyStakeReleaseEvent
  candidacyStakeReleaseEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CandidacyStakeReleaseEventWhereInput
    orderBy: [CandidacyStakeReleaseEventOrderByInput!]
  ): CandidacyStakeReleaseEventConnection!
  candidacyWithdrawEvents(
    offset: Int
    limit: Int = 50
    where: CandidacyWithdrawEventWhereInput
    orderBy: [CandidacyWithdrawEventOrderByInput!]
  ): [CandidacyWithdrawEvent!]!
  candidacyWithdrawEventByUniqueInput(
    where: CandidacyWithdrawEventWhereUniqueInput!
  ): CandidacyWithdrawEvent
  candidacyWithdrawEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CandidacyWithdrawEventWhereInput
    orderBy: [CandidacyWithdrawEventOrderByInput!]
  ): CandidacyWithdrawEventConnection!
  candidates(
    offset: Int
    limit: Int = 50
    where: CandidateWhereInput
    orderBy: [CandidateOrderByInput!]
  ): [Candidate!]!
  candidateByUniqueInput(where: CandidateWhereUniqueInput!): Candidate
  candidatesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CandidateWhereInput
    orderBy: [CandidateOrderByInput!]
  ): CandidateConnection!
  castVotes(
    offset: Int
    limit: Int = 50
    where: CastVoteWhereInput
    orderBy: [CastVoteOrderByInput!]
  ): [CastVote!]!
  castVoteByUniqueInput(where: CastVoteWhereUniqueInput!): CastVote
  castVotesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CastVoteWhereInput
    orderBy: [CastVoteOrderByInput!]
  ): CastVoteConnection!
  categoryArchivalStatusUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: CategoryArchivalStatusUpdatedEventWhereInput
    orderBy: [CategoryArchivalStatusUpdatedEventOrderByInput!]
  ): [CategoryArchivalStatusUpdatedEvent!]!
  categoryArchivalStatusUpdatedEventByUniqueInput(
    where: CategoryArchivalStatusUpdatedEventWhereUniqueInput!
  ): CategoryArchivalStatusUpdatedEvent
  categoryArchivalStatusUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CategoryArchivalStatusUpdatedEventWhereInput
    orderBy: [CategoryArchivalStatusUpdatedEventOrderByInput!]
  ): CategoryArchivalStatusUpdatedEventConnection!
  categoryCreatedEvents(
    offset: Int
    limit: Int = 50
    where: CategoryCreatedEventWhereInput
    orderBy: [CategoryCreatedEventOrderByInput!]
  ): [CategoryCreatedEvent!]!
  categoryCreatedEventByUniqueInput(
    where: CategoryCreatedEventWhereUniqueInput!
  ): CategoryCreatedEvent
  categoryCreatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CategoryCreatedEventWhereInput
    orderBy: [CategoryCreatedEventOrderByInput!]
  ): CategoryCreatedEventConnection!
  categoryDeletedEvents(
    offset: Int
    limit: Int = 50
    where: CategoryDeletedEventWhereInput
    orderBy: [CategoryDeletedEventOrderByInput!]
  ): [CategoryDeletedEvent!]!
  categoryDeletedEventByUniqueInput(
    where: CategoryDeletedEventWhereUniqueInput!
  ): CategoryDeletedEvent
  categoryDeletedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CategoryDeletedEventWhereInput
    orderBy: [CategoryDeletedEventOrderByInput!]
  ): CategoryDeletedEventConnection!
  categoryMembershipOfModeratorUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: CategoryMembershipOfModeratorUpdatedEventWhereInput
    orderBy: [CategoryMembershipOfModeratorUpdatedEventOrderByInput!]
  ): [CategoryMembershipOfModeratorUpdatedEvent!]!
  categoryMembershipOfModeratorUpdatedEventByUniqueInput(
    where: CategoryMembershipOfModeratorUpdatedEventWhereUniqueInput!
  ): CategoryMembershipOfModeratorUpdatedEvent
  categoryMembershipOfModeratorUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CategoryMembershipOfModeratorUpdatedEventWhereInput
    orderBy: [CategoryMembershipOfModeratorUpdatedEventOrderByInput!]
  ): CategoryMembershipOfModeratorUpdatedEventConnection!
  categoryStickyThreadUpdateEvents(
    offset: Int
    limit: Int = 50
    where: CategoryStickyThreadUpdateEventWhereInput
    orderBy: [CategoryStickyThreadUpdateEventOrderByInput!]
  ): [CategoryStickyThreadUpdateEvent!]!
  categoryStickyThreadUpdateEventByUniqueInput(
    where: CategoryStickyThreadUpdateEventWhereUniqueInput!
  ): CategoryStickyThreadUpdateEvent
  categoryStickyThreadUpdateEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CategoryStickyThreadUpdateEventWhereInput
    orderBy: [CategoryStickyThreadUpdateEventOrderByInput!]
  ): CategoryStickyThreadUpdateEventConnection!
  channelCategories(
    offset: Int
    limit: Int = 50
    where: ChannelCategoryWhereInput
    orderBy: [ChannelCategoryOrderByInput!]
  ): [ChannelCategory!]!
  channelCategoryByUniqueInput(
    where: ChannelCategoryWhereUniqueInput!
  ): ChannelCategory
  channelCategoriesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ChannelCategoryWhereInput
    orderBy: [ChannelCategoryOrderByInput!]
  ): ChannelCategoryConnection!
  channelNftCollectors(
    offset: Int
    limit: Int = 50
    where: ChannelNftCollectorsWhereInput
    orderBy: [ChannelNftCollectorsOrderByInput!]
  ): [ChannelNftCollectors!]!
  channelNftCollectorsByUniqueInput(
    where: ChannelNftCollectorsWhereUniqueInput!
  ): ChannelNftCollectors
  channelNftCollectorsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ChannelNftCollectorsWhereInput
    orderBy: [ChannelNftCollectorsOrderByInput!]
  ): ChannelNftCollectorsConnection!
  channels(
    offset: Int
    limit: Int = 50
    where: ChannelWhereInput
    orderBy: [ChannelOrderByInput!]
  ): [Channel!]!
  channelByUniqueInput(where: ChannelWhereUniqueInput!): Channel
  channelsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ChannelWhereInput
    orderBy: [ChannelOrderByInput!]
  ): ChannelConnection!
  commentCreatedEvents(
    offset: Int
    limit: Int = 50
    where: CommentCreatedEventWhereInput
    orderBy: [CommentCreatedEventOrderByInput!]
  ): [CommentCreatedEvent!]!
  commentCreatedEventByUniqueInput(
    where: CommentCreatedEventWhereUniqueInput!
  ): CommentCreatedEvent
  commentCreatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CommentCreatedEventWhereInput
    orderBy: [CommentCreatedEventOrderByInput!]
  ): CommentCreatedEventConnection!
  commentDeletedEvents(
    offset: Int
    limit: Int = 50
    where: CommentDeletedEventWhereInput
    orderBy: [CommentDeletedEventOrderByInput!]
  ): [CommentDeletedEvent!]!
  commentDeletedEventByUniqueInput(
    where: CommentDeletedEventWhereUniqueInput!
  ): CommentDeletedEvent
  commentDeletedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CommentDeletedEventWhereInput
    orderBy: [CommentDeletedEventOrderByInput!]
  ): CommentDeletedEventConnection!
  commentModeratedEvents(
    offset: Int
    limit: Int = 50
    where: CommentModeratedEventWhereInput
    orderBy: [CommentModeratedEventOrderByInput!]
  ): [CommentModeratedEvent!]!
  commentModeratedEventByUniqueInput(
    where: CommentModeratedEventWhereUniqueInput!
  ): CommentModeratedEvent
  commentModeratedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CommentModeratedEventWhereInput
    orderBy: [CommentModeratedEventOrderByInput!]
  ): CommentModeratedEventConnection!
  commentPinnedEvents(
    offset: Int
    limit: Int = 50
    where: CommentPinnedEventWhereInput
    orderBy: [CommentPinnedEventOrderByInput!]
  ): [CommentPinnedEvent!]!
  commentPinnedEventByUniqueInput(
    where: CommentPinnedEventWhereUniqueInput!
  ): CommentPinnedEvent
  commentPinnedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CommentPinnedEventWhereInput
    orderBy: [CommentPinnedEventOrderByInput!]
  ): CommentPinnedEventConnection!
  commentReactedEvents(
    offset: Int
    limit: Int = 50
    where: CommentReactedEventWhereInput
    orderBy: [CommentReactedEventOrderByInput!]
  ): [CommentReactedEvent!]!
  commentReactedEventByUniqueInput(
    where: CommentReactedEventWhereUniqueInput!
  ): CommentReactedEvent
  commentReactedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CommentReactedEventWhereInput
    orderBy: [CommentReactedEventOrderByInput!]
  ): CommentReactedEventConnection!
  commentReactions(
    offset: Int
    limit: Int = 50
    where: CommentReactionWhereInput
    orderBy: [CommentReactionOrderByInput!]
  ): [CommentReaction!]!
  commentReactionByUniqueInput(
    where: CommentReactionWhereUniqueInput!
  ): CommentReaction
  commentReactionsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CommentReactionWhereInput
    orderBy: [CommentReactionOrderByInput!]
  ): CommentReactionConnection!
  commentReactionsCountByReactionIds(
    offset: Int
    limit: Int = 50
    where: CommentReactionsCountByReactionIdWhereInput
    orderBy: [CommentReactionsCountByReactionIdOrderByInput!]
  ): [CommentReactionsCountByReactionId!]!
  commentReactionsCountByReactionIdByUniqueInput(
    where: CommentReactionsCountByReactionIdWhereUniqueInput!
  ): CommentReactionsCountByReactionId
  commentReactionsCountByReactionIdsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CommentReactionsCountByReactionIdWhereInput
    orderBy: [CommentReactionsCountByReactionIdOrderByInput!]
  ): CommentReactionsCountByReactionIdConnection!
  commentTextUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: CommentTextUpdatedEventWhereInput
    orderBy: [CommentTextUpdatedEventOrderByInput!]
  ): [CommentTextUpdatedEvent!]!
  commentTextUpdatedEventByUniqueInput(
    where: CommentTextUpdatedEventWhereUniqueInput!
  ): CommentTextUpdatedEvent
  commentTextUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CommentTextUpdatedEventWhereInput
    orderBy: [CommentTextUpdatedEventOrderByInput!]
  ): CommentTextUpdatedEventConnection!
  comments(
    offset: Int
    limit: Int = 50
    where: CommentWhereInput
    orderBy: [CommentOrderByInput!]
  ): [Comment!]!
  commentByUniqueInput(where: CommentWhereUniqueInput!): Comment
  commentsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CommentWhereInput
    orderBy: [CommentOrderByInput!]
  ): CommentConnection!
  councilMembers(
    offset: Int
    limit: Int = 50
    where: CouncilMemberWhereInput
    orderBy: [CouncilMemberOrderByInput!]
  ): [CouncilMember!]!
  councilMemberByUniqueInput(
    where: CouncilMemberWhereUniqueInput!
  ): CouncilMember
  councilMembersConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CouncilMemberWhereInput
    orderBy: [CouncilMemberOrderByInput!]
  ): CouncilMemberConnection!
  councilStageUpdates(
    offset: Int
    limit: Int = 50
    where: CouncilStageUpdateWhereInput
    orderBy: [CouncilStageUpdateOrderByInput!]
  ): [CouncilStageUpdate!]!
  councilStageUpdateByUniqueInput(
    where: CouncilStageUpdateWhereUniqueInput!
  ): CouncilStageUpdate
  councilStageUpdatesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CouncilStageUpdateWhereInput
    orderBy: [CouncilStageUpdateOrderByInput!]
  ): CouncilStageUpdateConnection!
  councilorRewardUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: CouncilorRewardUpdatedEventWhereInput
    orderBy: [CouncilorRewardUpdatedEventOrderByInput!]
  ): [CouncilorRewardUpdatedEvent!]!
  councilorRewardUpdatedEventByUniqueInput(
    where: CouncilorRewardUpdatedEventWhereUniqueInput!
  ): CouncilorRewardUpdatedEvent
  councilorRewardUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CouncilorRewardUpdatedEventWhereInput
    orderBy: [CouncilorRewardUpdatedEventOrderByInput!]
  ): CouncilorRewardUpdatedEventConnection!
  curatorGroups(
    offset: Int
    limit: Int = 50
    where: CuratorGroupWhereInput
    orderBy: [CuratorGroupOrderByInput!]
  ): [CuratorGroup!]!
  curatorGroupByUniqueInput(where: CuratorGroupWhereUniqueInput!): CuratorGroup
  curatorGroupsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CuratorGroupWhereInput
    orderBy: [CuratorGroupOrderByInput!]
  ): CuratorGroupConnection!
  curators(
    offset: Int
    limit: Int = 50
    where: CuratorWhereInput
    orderBy: [CuratorOrderByInput!]
  ): [Curator!]!
  curatorByUniqueInput(where: CuratorWhereUniqueInput!): Curator
  curatorsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: CuratorWhereInput
    orderBy: [CuratorOrderByInput!]
  ): CuratorConnection!
  distributionBucketFamilyGeographicAreas(
    offset: Int
    limit: Int = 50
    where: DistributionBucketFamilyGeographicAreaWhereInput
    orderBy: [DistributionBucketFamilyGeographicAreaOrderByInput!]
  ): [DistributionBucketFamilyGeographicArea!]!
  distributionBucketFamilyGeographicAreaByUniqueInput(
    where: DistributionBucketFamilyGeographicAreaWhereUniqueInput!
  ): DistributionBucketFamilyGeographicArea
  distributionBucketFamilyGeographicAreasConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: DistributionBucketFamilyGeographicAreaWhereInput
    orderBy: [DistributionBucketFamilyGeographicAreaOrderByInput!]
  ): DistributionBucketFamilyGeographicAreaConnection!
  distributionBucketFamilyMetadata(
    offset: Int
    limit: Int = 50
    where: DistributionBucketFamilyMetadataWhereInput
    orderBy: [DistributionBucketFamilyMetadataOrderByInput!]
  ): [DistributionBucketFamilyMetadata!]!
  distributionBucketFamilyMetadataByUniqueInput(
    where: DistributionBucketFamilyMetadataWhereUniqueInput!
  ): DistributionBucketFamilyMetadata
  distributionBucketFamilyMetadataConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: DistributionBucketFamilyMetadataWhereInput
    orderBy: [DistributionBucketFamilyMetadataOrderByInput!]
  ): DistributionBucketFamilyMetadataConnection!
  distributionBucketFamilies(
    offset: Int
    limit: Int = 50
    where: DistributionBucketFamilyWhereInput
    orderBy: [DistributionBucketFamilyOrderByInput!]
  ): [DistributionBucketFamily!]!
  distributionBucketFamilyByUniqueInput(
    where: DistributionBucketFamilyWhereUniqueInput!
  ): DistributionBucketFamily
  distributionBucketFamiliesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: DistributionBucketFamilyWhereInput
    orderBy: [DistributionBucketFamilyOrderByInput!]
  ): DistributionBucketFamilyConnection!
  distributionBucketOperatorMetadata(
    offset: Int
    limit: Int = 50
    where: DistributionBucketOperatorMetadataWhereInput
    orderBy: [DistributionBucketOperatorMetadataOrderByInput!]
  ): [DistributionBucketOperatorMetadata!]!
  distributionBucketOperatorMetadataByUniqueInput(
    where: DistributionBucketOperatorMetadataWhereUniqueInput!
  ): DistributionBucketOperatorMetadata
  distributionBucketOperatorMetadataConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: DistributionBucketOperatorMetadataWhereInput
    orderBy: [DistributionBucketOperatorMetadataOrderByInput!]
  ): DistributionBucketOperatorMetadataConnection!
  distributionBucketOperators(
    offset: Int
    limit: Int = 50
    where: DistributionBucketOperatorWhereInput
    orderBy: [DistributionBucketOperatorOrderByInput!]
  ): [DistributionBucketOperator!]!
  distributionBucketOperatorByUniqueInput(
    where: DistributionBucketOperatorWhereUniqueInput!
  ): DistributionBucketOperator
  distributionBucketOperatorsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: DistributionBucketOperatorWhereInput
    orderBy: [DistributionBucketOperatorOrderByInput!]
  ): DistributionBucketOperatorConnection!
  distributionBuckets(
    offset: Int
    limit: Int = 50
    where: DistributionBucketWhereInput
    orderBy: [DistributionBucketOrderByInput!]
  ): [DistributionBucket!]!
  distributionBucketByUniqueInput(
    where: DistributionBucketWhereUniqueInput!
  ): DistributionBucket
  distributionBucketsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: DistributionBucketWhereInput
    orderBy: [DistributionBucketOrderByInput!]
  ): DistributionBucketConnection!
  electedCouncils(
    offset: Int
    limit: Int = 50
    where: ElectedCouncilWhereInput
    orderBy: [ElectedCouncilOrderByInput!]
  ): [ElectedCouncil!]!
  electedCouncilByUniqueInput(
    where: ElectedCouncilWhereUniqueInput!
  ): ElectedCouncil
  electedCouncilsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ElectedCouncilWhereInput
    orderBy: [ElectedCouncilOrderByInput!]
  ): ElectedCouncilConnection!
  electionRounds(
    offset: Int
    limit: Int = 50
    where: ElectionRoundWhereInput
    orderBy: [ElectionRoundOrderByInput!]
  ): [ElectionRound!]!
  electionRoundByUniqueInput(
    where: ElectionRoundWhereUniqueInput!
  ): ElectionRound
  electionRoundsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ElectionRoundWhereInput
    orderBy: [ElectionRoundOrderByInput!]
  ): ElectionRoundConnection!
  englishAuctionSettledEvents(
    offset: Int
    limit: Int = 50
    where: EnglishAuctionSettledEventWhereInput
    orderBy: [EnglishAuctionSettledEventOrderByInput!]
  ): [EnglishAuctionSettledEvent!]!
  englishAuctionSettledEventByUniqueInput(
    where: EnglishAuctionSettledEventWhereUniqueInput!
  ): EnglishAuctionSettledEvent
  englishAuctionSettledEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: EnglishAuctionSettledEventWhereInput
    orderBy: [EnglishAuctionSettledEventOrderByInput!]
  ): EnglishAuctionSettledEventConnection!
  englishAuctionStartedEvents(
    offset: Int
    limit: Int = 50
    where: EnglishAuctionStartedEventWhereInput
    orderBy: [EnglishAuctionStartedEventOrderByInput!]
  ): [EnglishAuctionStartedEvent!]!
  englishAuctionStartedEventByUniqueInput(
    where: EnglishAuctionStartedEventWhereUniqueInput!
  ): EnglishAuctionStartedEvent
  englishAuctionStartedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: EnglishAuctionStartedEventWhereInput
    orderBy: [EnglishAuctionStartedEventOrderByInput!]
  ): EnglishAuctionStartedEventConnection!
  events(
    offset: Int
    limit: Int = 50
    where: EventWhereInput
    orderBy: [EventOrderByInput!]
  ): [Event!]!
  forumCategories(
    offset: Int
    limit: Int = 50
    where: ForumCategoryWhereInput
    orderBy: [ForumCategoryOrderByInput!]
  ): [ForumCategory!]!
  forumCategoryByUniqueInput(
    where: ForumCategoryWhereUniqueInput!
  ): ForumCategory
  forumCategoriesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ForumCategoryWhereInput
    orderBy: [ForumCategoryOrderByInput!]
  ): ForumCategoryConnection!
  forumPollAlternatives(
    offset: Int
    limit: Int = 50
    where: ForumPollAlternativeWhereInput
    orderBy: [ForumPollAlternativeOrderByInput!]
  ): [ForumPollAlternative!]!
  forumPollAlternativeByUniqueInput(
    where: ForumPollAlternativeWhereUniqueInput!
  ): ForumPollAlternative
  forumPollAlternativesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ForumPollAlternativeWhereInput
    orderBy: [ForumPollAlternativeOrderByInput!]
  ): ForumPollAlternativeConnection!
  forumPolls(
    offset: Int
    limit: Int = 50
    where: ForumPollWhereInput
    orderBy: [ForumPollOrderByInput!]
  ): [ForumPoll!]!
  forumPollByUniqueInput(where: ForumPollWhereUniqueInput!): ForumPoll
  forumPollsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ForumPollWhereInput
    orderBy: [ForumPollOrderByInput!]
  ): ForumPollConnection!
  forumPostReactions(
    offset: Int
    limit: Int = 50
    where: ForumPostReactionWhereInput
    orderBy: [ForumPostReactionOrderByInput!]
  ): [ForumPostReaction!]!
  forumPostReactionByUniqueInput(
    where: ForumPostReactionWhereUniqueInput!
  ): ForumPostReaction
  forumPostReactionsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ForumPostReactionWhereInput
    orderBy: [ForumPostReactionOrderByInput!]
  ): ForumPostReactionConnection!
  forumPosts(
    offset: Int
    limit: Int = 50
    where: ForumPostWhereInput
    orderBy: [ForumPostOrderByInput!]
  ): [ForumPost!]!
  forumPostByUniqueInput(where: ForumPostWhereUniqueInput!): ForumPost
  forumPostsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ForumPostWhereInput
    orderBy: [ForumPostOrderByInput!]
  ): ForumPostConnection!
  forumThreadTags(
    offset: Int
    limit: Int = 50
    where: ForumThreadTagWhereInput
    orderBy: [ForumThreadTagOrderByInput!]
  ): [ForumThreadTag!]!
  forumThreadTagByUniqueInput(
    where: ForumThreadTagWhereUniqueInput!
  ): ForumThreadTag
  forumThreadTagsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ForumThreadTagWhereInput
    orderBy: [ForumThreadTagOrderByInput!]
  ): ForumThreadTagConnection!
  forumThreads(
    offset: Int
    limit: Int = 50
    where: ForumThreadWhereInput
    orderBy: [ForumThreadOrderByInput!]
  ): [ForumThread!]!
  forumThreadByUniqueInput(where: ForumThreadWhereUniqueInput!): ForumThread
  forumThreadsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ForumThreadWhereInput
    orderBy: [ForumThreadOrderByInput!]
  ): ForumThreadConnection!
  fundingRequestDestinations(
    offset: Int
    limit: Int = 50
    where: FundingRequestDestinationWhereInput
    orderBy: [FundingRequestDestinationOrderByInput!]
  ): [FundingRequestDestination!]!
  fundingRequestDestinationByUniqueInput(
    where: FundingRequestDestinationWhereUniqueInput!
  ): FundingRequestDestination
  fundingRequestDestinationsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: FundingRequestDestinationWhereInput
    orderBy: [FundingRequestDestinationOrderByInput!]
  ): FundingRequestDestinationConnection!
  fundingRequestDestinationsLists(
    offset: Int
    limit: Int = 50
    where: FundingRequestDestinationsListWhereInput
    orderBy: [FundingRequestDestinationsListOrderByInput!]
  ): [FundingRequestDestinationsList!]!
  fundingRequestDestinationsListByUniqueInput(
    where: FundingRequestDestinationsListWhereUniqueInput!
  ): FundingRequestDestinationsList
  fundingRequestDestinationsListsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: FundingRequestDestinationsListWhereInput
    orderBy: [FundingRequestDestinationsListOrderByInput!]
  ): FundingRequestDestinationsListConnection!
  geoCoordinates(
    offset: Int
    limit: Int = 50
    where: GeoCoordinatesWhereInput
    orderBy: [GeoCoordinatesOrderByInput!]
  ): [GeoCoordinates!]!
  geoCoordinatesByUniqueInput(
    where: GeoCoordinatesWhereUniqueInput!
  ): GeoCoordinates
  geoCoordinatesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: GeoCoordinatesWhereInput
    orderBy: [GeoCoordinatesOrderByInput!]
  ): GeoCoordinatesConnection!
  initialInvitationBalanceUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: InitialInvitationBalanceUpdatedEventWhereInput
    orderBy: [InitialInvitationBalanceUpdatedEventOrderByInput!]
  ): [InitialInvitationBalanceUpdatedEvent!]!
  initialInvitationBalanceUpdatedEventByUniqueInput(
    where: InitialInvitationBalanceUpdatedEventWhereUniqueInput!
  ): InitialInvitationBalanceUpdatedEvent
  initialInvitationBalanceUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: InitialInvitationBalanceUpdatedEventWhereInput
    orderBy: [InitialInvitationBalanceUpdatedEventOrderByInput!]
  ): InitialInvitationBalanceUpdatedEventConnection!
  initialInvitationCountUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: InitialInvitationCountUpdatedEventWhereInput
    orderBy: [InitialInvitationCountUpdatedEventOrderByInput!]
  ): [InitialInvitationCountUpdatedEvent!]!
  initialInvitationCountUpdatedEventByUniqueInput(
    where: InitialInvitationCountUpdatedEventWhereUniqueInput!
  ): InitialInvitationCountUpdatedEvent
  initialInvitationCountUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: InitialInvitationCountUpdatedEventWhereInput
    orderBy: [InitialInvitationCountUpdatedEventOrderByInput!]
  ): InitialInvitationCountUpdatedEventConnection!
  invitesTransferredEvents(
    offset: Int
    limit: Int = 50
    where: InvitesTransferredEventWhereInput
    orderBy: [InvitesTransferredEventOrderByInput!]
  ): [InvitesTransferredEvent!]!
  invitesTransferredEventByUniqueInput(
    where: InvitesTransferredEventWhereUniqueInput!
  ): InvitesTransferredEvent
  invitesTransferredEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: InvitesTransferredEventWhereInput
    orderBy: [InvitesTransferredEventOrderByInput!]
  ): InvitesTransferredEventConnection!
  languages(
    offset: Int
    limit: Int = 50
    where: LanguageWhereInput
    orderBy: [LanguageOrderByInput!]
  ): [Language!]!
  languageByUniqueInput(where: LanguageWhereUniqueInput!): Language
  languagesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: LanguageWhereInput
    orderBy: [LanguageOrderByInput!]
  ): LanguageConnection!
  leaderInvitationQuotaUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: LeaderInvitationQuotaUpdatedEventWhereInput
    orderBy: [LeaderInvitationQuotaUpdatedEventOrderByInput!]
  ): [LeaderInvitationQuotaUpdatedEvent!]!
  leaderInvitationQuotaUpdatedEventByUniqueInput(
    where: LeaderInvitationQuotaUpdatedEventWhereUniqueInput!
  ): LeaderInvitationQuotaUpdatedEvent
  leaderInvitationQuotaUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: LeaderInvitationQuotaUpdatedEventWhereInput
    orderBy: [LeaderInvitationQuotaUpdatedEventOrderByInput!]
  ): LeaderInvitationQuotaUpdatedEventConnection!
  leaderSetEvents(
    offset: Int
    limit: Int = 50
    where: LeaderSetEventWhereInput
    orderBy: [LeaderSetEventOrderByInput!]
  ): [LeaderSetEvent!]!
  leaderSetEventByUniqueInput(
    where: LeaderSetEventWhereUniqueInput!
  ): LeaderSetEvent
  leaderSetEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: LeaderSetEventWhereInput
    orderBy: [LeaderSetEventOrderByInput!]
  ): LeaderSetEventConnection!
  leaderUnsetEvents(
    offset: Int
    limit: Int = 50
    where: LeaderUnsetEventWhereInput
    orderBy: [LeaderUnsetEventOrderByInput!]
  ): [LeaderUnsetEvent!]!
  leaderUnsetEventByUniqueInput(
    where: LeaderUnsetEventWhereUniqueInput!
  ): LeaderUnsetEvent
  leaderUnsetEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: LeaderUnsetEventWhereInput
    orderBy: [LeaderUnsetEventOrderByInput!]
  ): LeaderUnsetEventConnection!
  licenses(
    offset: Int
    limit: Int = 50
    where: LicenseWhereInput
    orderBy: [LicenseOrderByInput!]
  ): [License!]!
  licenseByUniqueInput(where: LicenseWhereUniqueInput!): License
  licensesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: LicenseWhereInput
    orderBy: [LicenseOrderByInput!]
  ): LicenseConnection!
  memberAccountsUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: MemberAccountsUpdatedEventWhereInput
    orderBy: [MemberAccountsUpdatedEventOrderByInput!]
  ): [MemberAccountsUpdatedEvent!]!
  memberAccountsUpdatedEventByUniqueInput(
    where: MemberAccountsUpdatedEventWhereUniqueInput!
  ): MemberAccountsUpdatedEvent
  memberAccountsUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MemberAccountsUpdatedEventWhereInput
    orderBy: [MemberAccountsUpdatedEventOrderByInput!]
  ): MemberAccountsUpdatedEventConnection!
  memberBannedFromChannelEvents(
    offset: Int
    limit: Int = 50
    where: MemberBannedFromChannelEventWhereInput
    orderBy: [MemberBannedFromChannelEventOrderByInput!]
  ): [MemberBannedFromChannelEvent!]!
  memberBannedFromChannelEventByUniqueInput(
    where: MemberBannedFromChannelEventWhereUniqueInput!
  ): MemberBannedFromChannelEvent
  memberBannedFromChannelEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MemberBannedFromChannelEventWhereInput
    orderBy: [MemberBannedFromChannelEventOrderByInput!]
  ): MemberBannedFromChannelEventConnection!
  memberInvitedEvents(
    offset: Int
    limit: Int = 50
    where: MemberInvitedEventWhereInput
    orderBy: [MemberInvitedEventOrderByInput!]
  ): [MemberInvitedEvent!]!
  memberInvitedEventByUniqueInput(
    where: MemberInvitedEventWhereUniqueInput!
  ): MemberInvitedEvent
  memberInvitedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MemberInvitedEventWhereInput
    orderBy: [MemberInvitedEventOrderByInput!]
  ): MemberInvitedEventConnection!
  memberMetadata(
    offset: Int
    limit: Int = 50
    where: MemberMetadataWhereInput
    orderBy: [MemberMetadataOrderByInput!]
  ): [MemberMetadata!]!
  memberMetadataByUniqueInput(
    where: MemberMetadataWhereUniqueInput!
  ): MemberMetadata
  memberMetadataConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MemberMetadataWhereInput
    orderBy: [MemberMetadataOrderByInput!]
  ): MemberMetadataConnection!
  memberProfileUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: MemberProfileUpdatedEventWhereInput
    orderBy: [MemberProfileUpdatedEventOrderByInput!]
  ): [MemberProfileUpdatedEvent!]!
  memberProfileUpdatedEventByUniqueInput(
    where: MemberProfileUpdatedEventWhereUniqueInput!
  ): MemberProfileUpdatedEvent
  memberProfileUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MemberProfileUpdatedEventWhereInput
    orderBy: [MemberProfileUpdatedEventOrderByInput!]
  ): MemberProfileUpdatedEventConnection!
  memberVerificationStatusUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: MemberVerificationStatusUpdatedEventWhereInput
    orderBy: [MemberVerificationStatusUpdatedEventOrderByInput!]
  ): [MemberVerificationStatusUpdatedEvent!]!
  memberVerificationStatusUpdatedEventByUniqueInput(
    where: MemberVerificationStatusUpdatedEventWhereUniqueInput!
  ): MemberVerificationStatusUpdatedEvent
  memberVerificationStatusUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MemberVerificationStatusUpdatedEventWhereInput
    orderBy: [MemberVerificationStatusUpdatedEventOrderByInput!]
  ): MemberVerificationStatusUpdatedEventConnection!
  membershipBoughtEvents(
    offset: Int
    limit: Int = 50
    where: MembershipBoughtEventWhereInput
    orderBy: [MembershipBoughtEventOrderByInput!]
  ): [MembershipBoughtEvent!]!
  membershipBoughtEventByUniqueInput(
    where: MembershipBoughtEventWhereUniqueInput!
  ): MembershipBoughtEvent
  membershipBoughtEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MembershipBoughtEventWhereInput
    orderBy: [MembershipBoughtEventOrderByInput!]
  ): MembershipBoughtEventConnection!
  membershipExternalResources(
    offset: Int
    limit: Int = 50
    where: MembershipExternalResourceWhereInput
    orderBy: [MembershipExternalResourceOrderByInput!]
  ): [MembershipExternalResource!]!
  membershipExternalResourceByUniqueInput(
    where: MembershipExternalResourceWhereUniqueInput!
  ): MembershipExternalResource
  membershipExternalResourcesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MembershipExternalResourceWhereInput
    orderBy: [MembershipExternalResourceOrderByInput!]
  ): MembershipExternalResourceConnection!
  membershipPriceUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: MembershipPriceUpdatedEventWhereInput
    orderBy: [MembershipPriceUpdatedEventOrderByInput!]
  ): [MembershipPriceUpdatedEvent!]!
  membershipPriceUpdatedEventByUniqueInput(
    where: MembershipPriceUpdatedEventWhereUniqueInput!
  ): MembershipPriceUpdatedEvent
  membershipPriceUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MembershipPriceUpdatedEventWhereInput
    orderBy: [MembershipPriceUpdatedEventOrderByInput!]
  ): MembershipPriceUpdatedEventConnection!
  membershipSystemSnapshots(
    offset: Int
    limit: Int = 50
    where: MembershipSystemSnapshotWhereInput
    orderBy: [MembershipSystemSnapshotOrderByInput!]
  ): [MembershipSystemSnapshot!]!
  membershipSystemSnapshotByUniqueInput(
    where: MembershipSystemSnapshotWhereUniqueInput!
  ): MembershipSystemSnapshot
  membershipSystemSnapshotsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MembershipSystemSnapshotWhereInput
    orderBy: [MembershipSystemSnapshotOrderByInput!]
  ): MembershipSystemSnapshotConnection!
  memberships(
    offset: Int
    limit: Int = 50
    where: MembershipWhereInput
    orderBy: [MembershipOrderByInput!]
  ): [Membership!]!
  membershipByUniqueInput(where: MembershipWhereUniqueInput!): Membership
  membershipsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MembershipWhereInput
    orderBy: [MembershipOrderByInput!]
  ): MembershipConnection!
  metaprotocolTransactionStatusEvents(
    offset: Int
    limit: Int = 50
    where: MetaprotocolTransactionStatusEventWhereInput
    orderBy: [MetaprotocolTransactionStatusEventOrderByInput!]
  ): [MetaprotocolTransactionStatusEvent!]!
  metaprotocolTransactionStatusEventByUniqueInput(
    where: MetaprotocolTransactionStatusEventWhereUniqueInput!
  ): MetaprotocolTransactionStatusEvent
  metaprotocolTransactionStatusEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: MetaprotocolTransactionStatusEventWhereInput
    orderBy: [MetaprotocolTransactionStatusEventOrderByInput!]
  ): MetaprotocolTransactionStatusEventConnection!
  newCandidateEvents(
    offset: Int
    limit: Int = 50
    where: NewCandidateEventWhereInput
    orderBy: [NewCandidateEventOrderByInput!]
  ): [NewCandidateEvent!]!
  newCandidateEventByUniqueInput(
    where: NewCandidateEventWhereUniqueInput!
  ): NewCandidateEvent
  newCandidateEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: NewCandidateEventWhereInput
    orderBy: [NewCandidateEventOrderByInput!]
  ): NewCandidateEventConnection!
  newCouncilElectedEvents(
    offset: Int
    limit: Int = 50
    where: NewCouncilElectedEventWhereInput
    orderBy: [NewCouncilElectedEventOrderByInput!]
  ): [NewCouncilElectedEvent!]!
  newCouncilElectedEventByUniqueInput(
    where: NewCouncilElectedEventWhereUniqueInput!
  ): NewCouncilElectedEvent
  newCouncilElectedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: NewCouncilElectedEventWhereInput
    orderBy: [NewCouncilElectedEventOrderByInput!]
  ): NewCouncilElectedEventConnection!
  newCouncilNotElectedEvents(
    offset: Int
    limit: Int = 50
    where: NewCouncilNotElectedEventWhereInput
    orderBy: [NewCouncilNotElectedEventOrderByInput!]
  ): [NewCouncilNotElectedEvent!]!
  newCouncilNotElectedEventByUniqueInput(
    where: NewCouncilNotElectedEventWhereUniqueInput!
  ): NewCouncilNotElectedEvent
  newCouncilNotElectedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: NewCouncilNotElectedEventWhereInput
    orderBy: [NewCouncilNotElectedEventOrderByInput!]
  ): NewCouncilNotElectedEventConnection!
  newMissedRewardLevelReachedEvents(
    offset: Int
    limit: Int = 50
    where: NewMissedRewardLevelReachedEventWhereInput
    orderBy: [NewMissedRewardLevelReachedEventOrderByInput!]
  ): [NewMissedRewardLevelReachedEvent!]!
  newMissedRewardLevelReachedEventByUniqueInput(
    where: NewMissedRewardLevelReachedEventWhereUniqueInput!
  ): NewMissedRewardLevelReachedEvent
  newMissedRewardLevelReachedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: NewMissedRewardLevelReachedEventWhereInput
    orderBy: [NewMissedRewardLevelReachedEventOrderByInput!]
  ): NewMissedRewardLevelReachedEventConnection!
  nftBoughtEvents(
    offset: Int
    limit: Int = 50
    where: NftBoughtEventWhereInput
    orderBy: [NftBoughtEventOrderByInput!]
  ): [NftBoughtEvent!]!
  nftBoughtEventByUniqueInput(
    where: NftBoughtEventWhereUniqueInput!
  ): NftBoughtEvent
  nftBoughtEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: NftBoughtEventWhereInput
    orderBy: [NftBoughtEventOrderByInput!]
  ): NftBoughtEventConnection!
  nftIssuedEvents(
    offset: Int
    limit: Int = 50
    where: NftIssuedEventWhereInput
    orderBy: [NftIssuedEventOrderByInput!]
  ): [NftIssuedEvent!]!
  nftIssuedEventByUniqueInput(
    where: NftIssuedEventWhereUniqueInput!
  ): NftIssuedEvent
  nftIssuedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: NftIssuedEventWhereInput
    orderBy: [NftIssuedEventOrderByInput!]
  ): NftIssuedEventConnection!
  nftSellOrderMadeEvents(
    offset: Int
    limit: Int = 50
    where: NftSellOrderMadeEventWhereInput
    orderBy: [NftSellOrderMadeEventOrderByInput!]
  ): [NftSellOrderMadeEvent!]!
  nftSellOrderMadeEventByUniqueInput(
    where: NftSellOrderMadeEventWhereUniqueInput!
  ): NftSellOrderMadeEvent
  nftSellOrderMadeEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: NftSellOrderMadeEventWhereInput
    orderBy: [NftSellOrderMadeEventOrderByInput!]
  ): NftSellOrderMadeEventConnection!
  nftSlingedBackToTheOriginalArtistEvents(
    offset: Int
    limit: Int = 50
    where: NftSlingedBackToTheOriginalArtistEventWhereInput
    orderBy: [NftSlingedBackToTheOriginalArtistEventOrderByInput!]
  ): [NftSlingedBackToTheOriginalArtistEvent!]!
  nftSlingedBackToTheOriginalArtistEventByUniqueInput(
    where: NftSlingedBackToTheOriginalArtistEventWhereUniqueInput!
  ): NftSlingedBackToTheOriginalArtistEvent
  nftSlingedBackToTheOriginalArtistEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: NftSlingedBackToTheOriginalArtistEventWhereInput
    orderBy: [NftSlingedBackToTheOriginalArtistEventOrderByInput!]
  ): NftSlingedBackToTheOriginalArtistEventConnection!
  nodeLocationMetadata(
    offset: Int
    limit: Int = 50
    where: NodeLocationMetadataWhereInput
    orderBy: [NodeLocationMetadataOrderByInput!]
  ): [NodeLocationMetadata!]!
  nodeLocationMetadataByUniqueInput(
    where: NodeLocationMetadataWhereUniqueInput!
  ): NodeLocationMetadata
  nodeLocationMetadataConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: NodeLocationMetadataWhereInput
    orderBy: [NodeLocationMetadataOrderByInput!]
  ): NodeLocationMetadataConnection!
  notEnoughCandidatesEvents(
    offset: Int
    limit: Int = 50
    where: NotEnoughCandidatesEventWhereInput
    orderBy: [NotEnoughCandidatesEventOrderByInput!]
  ): [NotEnoughCandidatesEvent!]!
  notEnoughCandidatesEventByUniqueInput(
    where: NotEnoughCandidatesEventWhereUniqueInput!
  ): NotEnoughCandidatesEvent
  notEnoughCandidatesEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: NotEnoughCandidatesEventWhereInput
    orderBy: [NotEnoughCandidatesEventOrderByInput!]
  ): NotEnoughCandidatesEventConnection!
  offerAcceptedEvents(
    offset: Int
    limit: Int = 50
    where: OfferAcceptedEventWhereInput
    orderBy: [OfferAcceptedEventOrderByInput!]
  ): [OfferAcceptedEvent!]!
  offerAcceptedEventByUniqueInput(
    where: OfferAcceptedEventWhereUniqueInput!
  ): OfferAcceptedEvent
  offerAcceptedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: OfferAcceptedEventWhereInput
    orderBy: [OfferAcceptedEventOrderByInput!]
  ): OfferAcceptedEventConnection!
  offerCanceledEvents(
    offset: Int
    limit: Int = 50
    where: OfferCanceledEventWhereInput
    orderBy: [OfferCanceledEventOrderByInput!]
  ): [OfferCanceledEvent!]!
  offerCanceledEventByUniqueInput(
    where: OfferCanceledEventWhereUniqueInput!
  ): OfferCanceledEvent
  offerCanceledEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: OfferCanceledEventWhereInput
    orderBy: [OfferCanceledEventOrderByInput!]
  ): OfferCanceledEventConnection!
  offerStartedEvents(
    offset: Int
    limit: Int = 50
    where: OfferStartedEventWhereInput
    orderBy: [OfferStartedEventOrderByInput!]
  ): [OfferStartedEvent!]!
  offerStartedEventByUniqueInput(
    where: OfferStartedEventWhereUniqueInput!
  ): OfferStartedEvent
  offerStartedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: OfferStartedEventWhereInput
    orderBy: [OfferStartedEventOrderByInput!]
  ): OfferStartedEventConnection!
  openAuctionBidAcceptedEvents(
    offset: Int
    limit: Int = 50
    where: OpenAuctionBidAcceptedEventWhereInput
    orderBy: [OpenAuctionBidAcceptedEventOrderByInput!]
  ): [OpenAuctionBidAcceptedEvent!]!
  openAuctionBidAcceptedEventByUniqueInput(
    where: OpenAuctionBidAcceptedEventWhereUniqueInput!
  ): OpenAuctionBidAcceptedEvent
  openAuctionBidAcceptedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: OpenAuctionBidAcceptedEventWhereInput
    orderBy: [OpenAuctionBidAcceptedEventOrderByInput!]
  ): OpenAuctionBidAcceptedEventConnection!
  openAuctionStartedEvents(
    offset: Int
    limit: Int = 50
    where: OpenAuctionStartedEventWhereInput
    orderBy: [OpenAuctionStartedEventOrderByInput!]
  ): [OpenAuctionStartedEvent!]!
  openAuctionStartedEventByUniqueInput(
    where: OpenAuctionStartedEventWhereUniqueInput!
  ): OpenAuctionStartedEvent
  openAuctionStartedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: OpenAuctionStartedEventWhereInput
    orderBy: [OpenAuctionStartedEventOrderByInput!]
  ): OpenAuctionStartedEventConnection!
  openingAddedEvents(
    offset: Int
    limit: Int = 50
    where: OpeningAddedEventWhereInput
    orderBy: [OpeningAddedEventOrderByInput!]
  ): [OpeningAddedEvent!]!
  openingAddedEventByUniqueInput(
    where: OpeningAddedEventWhereUniqueInput!
  ): OpeningAddedEvent
  openingAddedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: OpeningAddedEventWhereInput
    orderBy: [OpeningAddedEventOrderByInput!]
  ): OpeningAddedEventConnection!
  openingCanceledEvents(
    offset: Int
    limit: Int = 50
    where: OpeningCanceledEventWhereInput
    orderBy: [OpeningCanceledEventOrderByInput!]
  ): [OpeningCanceledEvent!]!
  openingCanceledEventByUniqueInput(
    where: OpeningCanceledEventWhereUniqueInput!
  ): OpeningCanceledEvent
  openingCanceledEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: OpeningCanceledEventWhereInput
    orderBy: [OpeningCanceledEventOrderByInput!]
  ): OpeningCanceledEventConnection!
  openingFilledEvents(
    offset: Int
    limit: Int = 50
    where: OpeningFilledEventWhereInput
    orderBy: [OpeningFilledEventOrderByInput!]
  ): [OpeningFilledEvent!]!
  openingFilledEventByUniqueInput(
    where: OpeningFilledEventWhereUniqueInput!
  ): OpeningFilledEvent
  openingFilledEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: OpeningFilledEventWhereInput
    orderBy: [OpeningFilledEventOrderByInput!]
  ): OpeningFilledEventConnection!
  oracleJudgmentSubmittedEvents(
    offset: Int
    limit: Int = 50
    where: OracleJudgmentSubmittedEventWhereInput
    orderBy: [OracleJudgmentSubmittedEventOrderByInput!]
  ): [OracleJudgmentSubmittedEvent!]!
  oracleJudgmentSubmittedEventByUniqueInput(
    where: OracleJudgmentSubmittedEventWhereUniqueInput!
  ): OracleJudgmentSubmittedEvent
  oracleJudgmentSubmittedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: OracleJudgmentSubmittedEventWhereInput
    orderBy: [OracleJudgmentSubmittedEventOrderByInput!]
  ): OracleJudgmentSubmittedEventConnection!
  ownedNfts(
    offset: Int
    limit: Int = 50
    where: OwnedNftWhereInput
    orderBy: [OwnedNftOrderByInput!]
  ): [OwnedNft!]!
  ownedNftByUniqueInput(where: OwnedNftWhereUniqueInput!): OwnedNft
  ownedNftsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: OwnedNftWhereInput
    orderBy: [OwnedNftOrderByInput!]
  ): OwnedNftConnection!
  postAddedEvents(
    offset: Int
    limit: Int = 50
    where: PostAddedEventWhereInput
    orderBy: [PostAddedEventOrderByInput!]
  ): [PostAddedEvent!]!
  postAddedEventByUniqueInput(
    where: PostAddedEventWhereUniqueInput!
  ): PostAddedEvent
  postAddedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: PostAddedEventWhereInput
    orderBy: [PostAddedEventOrderByInput!]
  ): PostAddedEventConnection!
  postDeletedEvents(
    offset: Int
    limit: Int = 50
    where: PostDeletedEventWhereInput
    orderBy: [PostDeletedEventOrderByInput!]
  ): [PostDeletedEvent!]!
  postDeletedEventByUniqueInput(
    where: PostDeletedEventWhereUniqueInput!
  ): PostDeletedEvent
  postDeletedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: PostDeletedEventWhereInput
    orderBy: [PostDeletedEventOrderByInput!]
  ): PostDeletedEventConnection!
  postModeratedEvents(
    offset: Int
    limit: Int = 50
    where: PostModeratedEventWhereInput
    orderBy: [PostModeratedEventOrderByInput!]
  ): [PostModeratedEvent!]!
  postModeratedEventByUniqueInput(
    where: PostModeratedEventWhereUniqueInput!
  ): PostModeratedEvent
  postModeratedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: PostModeratedEventWhereInput
    orderBy: [PostModeratedEventOrderByInput!]
  ): PostModeratedEventConnection!
  postReactedEvents(
    offset: Int
    limit: Int = 50
    where: PostReactedEventWhereInput
    orderBy: [PostReactedEventOrderByInput!]
  ): [PostReactedEvent!]!
  postReactedEventByUniqueInput(
    where: PostReactedEventWhereUniqueInput!
  ): PostReactedEvent
  postReactedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: PostReactedEventWhereInput
    orderBy: [PostReactedEventOrderByInput!]
  ): PostReactedEventConnection!
  postTextUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: PostTextUpdatedEventWhereInput
    orderBy: [PostTextUpdatedEventOrderByInput!]
  ): [PostTextUpdatedEvent!]!
  postTextUpdatedEventByUniqueInput(
    where: PostTextUpdatedEventWhereUniqueInput!
  ): PostTextUpdatedEvent
  postTextUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: PostTextUpdatedEventWhereInput
    orderBy: [PostTextUpdatedEventOrderByInput!]
  ): PostTextUpdatedEventConnection!
  proposalCancelledEvents(
    offset: Int
    limit: Int = 50
    where: ProposalCancelledEventWhereInput
    orderBy: [ProposalCancelledEventOrderByInput!]
  ): [ProposalCancelledEvent!]!
  proposalCancelledEventByUniqueInput(
    where: ProposalCancelledEventWhereUniqueInput!
  ): ProposalCancelledEvent
  proposalCancelledEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalCancelledEventWhereInput
    orderBy: [ProposalCancelledEventOrderByInput!]
  ): ProposalCancelledEventConnection!
  proposalCreatedEvents(
    offset: Int
    limit: Int = 50
    where: ProposalCreatedEventWhereInput
    orderBy: [ProposalCreatedEventOrderByInput!]
  ): [ProposalCreatedEvent!]!
  proposalCreatedEventByUniqueInput(
    where: ProposalCreatedEventWhereUniqueInput!
  ): ProposalCreatedEvent
  proposalCreatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalCreatedEventWhereInput
    orderBy: [ProposalCreatedEventOrderByInput!]
  ): ProposalCreatedEventConnection!
  proposalDecisionMadeEvents(
    offset: Int
    limit: Int = 50
    where: ProposalDecisionMadeEventWhereInput
    orderBy: [ProposalDecisionMadeEventOrderByInput!]
  ): [ProposalDecisionMadeEvent!]!
  proposalDecisionMadeEventByUniqueInput(
    where: ProposalDecisionMadeEventWhereUniqueInput!
  ): ProposalDecisionMadeEvent
  proposalDecisionMadeEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalDecisionMadeEventWhereInput
    orderBy: [ProposalDecisionMadeEventOrderByInput!]
  ): ProposalDecisionMadeEventConnection!
  proposalDiscussionPostCreatedEvents(
    offset: Int
    limit: Int = 50
    where: ProposalDiscussionPostCreatedEventWhereInput
    orderBy: [ProposalDiscussionPostCreatedEventOrderByInput!]
  ): [ProposalDiscussionPostCreatedEvent!]!
  proposalDiscussionPostCreatedEventByUniqueInput(
    where: ProposalDiscussionPostCreatedEventWhereUniqueInput!
  ): ProposalDiscussionPostCreatedEvent
  proposalDiscussionPostCreatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalDiscussionPostCreatedEventWhereInput
    orderBy: [ProposalDiscussionPostCreatedEventOrderByInput!]
  ): ProposalDiscussionPostCreatedEventConnection!
  proposalDiscussionPostDeletedEvents(
    offset: Int
    limit: Int = 50
    where: ProposalDiscussionPostDeletedEventWhereInput
    orderBy: [ProposalDiscussionPostDeletedEventOrderByInput!]
  ): [ProposalDiscussionPostDeletedEvent!]!
  proposalDiscussionPostDeletedEventByUniqueInput(
    where: ProposalDiscussionPostDeletedEventWhereUniqueInput!
  ): ProposalDiscussionPostDeletedEvent
  proposalDiscussionPostDeletedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalDiscussionPostDeletedEventWhereInput
    orderBy: [ProposalDiscussionPostDeletedEventOrderByInput!]
  ): ProposalDiscussionPostDeletedEventConnection!
  proposalDiscussionPostUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: ProposalDiscussionPostUpdatedEventWhereInput
    orderBy: [ProposalDiscussionPostUpdatedEventOrderByInput!]
  ): [ProposalDiscussionPostUpdatedEvent!]!
  proposalDiscussionPostUpdatedEventByUniqueInput(
    where: ProposalDiscussionPostUpdatedEventWhereUniqueInput!
  ): ProposalDiscussionPostUpdatedEvent
  proposalDiscussionPostUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalDiscussionPostUpdatedEventWhereInput
    orderBy: [ProposalDiscussionPostUpdatedEventOrderByInput!]
  ): ProposalDiscussionPostUpdatedEventConnection!
  proposalDiscussionPosts(
    offset: Int
    limit: Int = 50
    where: ProposalDiscussionPostWhereInput
    orderBy: [ProposalDiscussionPostOrderByInput!]
  ): [ProposalDiscussionPost!]!
  proposalDiscussionPostByUniqueInput(
    where: ProposalDiscussionPostWhereUniqueInput!
  ): ProposalDiscussionPost
  proposalDiscussionPostsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalDiscussionPostWhereInput
    orderBy: [ProposalDiscussionPostOrderByInput!]
  ): ProposalDiscussionPostConnection!
  proposalDiscussionThreadModeChangedEvents(
    offset: Int
    limit: Int = 50
    where: ProposalDiscussionThreadModeChangedEventWhereInput
    orderBy: [ProposalDiscussionThreadModeChangedEventOrderByInput!]
  ): [ProposalDiscussionThreadModeChangedEvent!]!
  proposalDiscussionThreadModeChangedEventByUniqueInput(
    where: ProposalDiscussionThreadModeChangedEventWhereUniqueInput!
  ): ProposalDiscussionThreadModeChangedEvent
  proposalDiscussionThreadModeChangedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalDiscussionThreadModeChangedEventWhereInput
    orderBy: [ProposalDiscussionThreadModeChangedEventOrderByInput!]
  ): ProposalDiscussionThreadModeChangedEventConnection!
  proposalDiscussionThreads(
    offset: Int
    limit: Int = 50
    where: ProposalDiscussionThreadWhereInput
    orderBy: [ProposalDiscussionThreadOrderByInput!]
  ): [ProposalDiscussionThread!]!
  proposalDiscussionThreadByUniqueInput(
    where: ProposalDiscussionThreadWhereUniqueInput!
  ): ProposalDiscussionThread
  proposalDiscussionThreadsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalDiscussionThreadWhereInput
    orderBy: [ProposalDiscussionThreadOrderByInput!]
  ): ProposalDiscussionThreadConnection!
  proposalDiscussionWhitelists(
    offset: Int
    limit: Int = 50
    where: ProposalDiscussionWhitelistWhereInput
    orderBy: [ProposalDiscussionWhitelistOrderByInput!]
  ): [ProposalDiscussionWhitelist!]!
  proposalDiscussionWhitelistByUniqueInput(
    where: ProposalDiscussionWhitelistWhereUniqueInput!
  ): ProposalDiscussionWhitelist
  proposalDiscussionWhitelistsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalDiscussionWhitelistWhereInput
    orderBy: [ProposalDiscussionWhitelistOrderByInput!]
  ): ProposalDiscussionWhitelistConnection!
  proposalExecutedEvents(
    offset: Int
    limit: Int = 50
    where: ProposalExecutedEventWhereInput
    orderBy: [ProposalExecutedEventOrderByInput!]
  ): [ProposalExecutedEvent!]!
  proposalExecutedEventByUniqueInput(
    where: ProposalExecutedEventWhereUniqueInput!
  ): ProposalExecutedEvent
  proposalExecutedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalExecutedEventWhereInput
    orderBy: [ProposalExecutedEventOrderByInput!]
  ): ProposalExecutedEventConnection!
  proposalStatusUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: ProposalStatusUpdatedEventWhereInput
    orderBy: [ProposalStatusUpdatedEventOrderByInput!]
  ): [ProposalStatusUpdatedEvent!]!
  proposalStatusUpdatedEventByUniqueInput(
    where: ProposalStatusUpdatedEventWhereUniqueInput!
  ): ProposalStatusUpdatedEvent
  proposalStatusUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalStatusUpdatedEventWhereInput
    orderBy: [ProposalStatusUpdatedEventOrderByInput!]
  ): ProposalStatusUpdatedEventConnection!
  proposalVotedEvents(
    offset: Int
    limit: Int = 50
    where: ProposalVotedEventWhereInput
    orderBy: [ProposalVotedEventOrderByInput!]
  ): [ProposalVotedEvent!]!
  proposalVotedEventByUniqueInput(
    where: ProposalVotedEventWhereUniqueInput!
  ): ProposalVotedEvent
  proposalVotedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalVotedEventWhereInput
    orderBy: [ProposalVotedEventOrderByInput!]
  ): ProposalVotedEventConnection!
  proposals(
    offset: Int
    limit: Int = 50
    where: ProposalWhereInput
    orderBy: [ProposalOrderByInput!]
  ): [Proposal!]!
  proposalByUniqueInput(where: ProposalWhereUniqueInput!): Proposal
  proposalsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ProposalWhereInput
    orderBy: [ProposalOrderByInput!]
  ): ProposalConnection!
  channelCategoriesByName(
    whereChannelCategory: ChannelCategoryWhereInput
    skip: Int = 0
    limit: Int = 5
    text: String!
  ): [ChannelCategoriesByNameFTSOutput!]!
  commentText(
    whereComment: CommentWhereInput
    skip: Int = 0
    limit: Int = 5
    text: String!
  ): [CommentTextFTSOutput!]!
  membersByHandle(
    whereMembership: MembershipWhereInput
    skip: Int = 0
    limit: Int = 5
    text: String!
  ): [MembersByHandleFTSOutput!]!
  postsByText(
    whereForumPost: ForumPostWhereInput
    skip: Int = 0
    limit: Int = 5
    text: String!
  ): [PostsByTextFTSOutput!]!
  proposalsByTitle(
    whereProposal: ProposalWhereInput
    skip: Int = 0
    limit: Int = 5
    text: String!
  ): [ProposalsByTitleFTSOutput!]!
  search(
    whereVideo: VideoWhereInput
    whereChannel: ChannelWhereInput
    skip: Int = 0
    limit: Int = 5
    text: String!
  ): [SearchFTSOutput!]!
  threadsByTitle(
    whereForumThread: ForumThreadWhereInput
    skip: Int = 0
    limit: Int = 5
    text: String!
  ): [ThreadsByTitleFTSOutput!]!
  videoCategoriesByName(
    whereVideoCategory: VideoCategoryWhereInput
    skip: Int = 0
    limit: Int = 5
    text: String!
  ): [VideoCategoriesByNameFTSOutput!]!
  referendumFinishedEvents(
    offset: Int
    limit: Int = 50
    where: ReferendumFinishedEventWhereInput
    orderBy: [ReferendumFinishedEventOrderByInput!]
  ): [ReferendumFinishedEvent!]!
  referendumFinishedEventByUniqueInput(
    where: ReferendumFinishedEventWhereUniqueInput!
  ): ReferendumFinishedEvent
  referendumFinishedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ReferendumFinishedEventWhereInput
    orderBy: [ReferendumFinishedEventOrderByInput!]
  ): ReferendumFinishedEventConnection!
  referendumStageRevealings(
    offset: Int
    limit: Int = 50
    where: ReferendumStageRevealingWhereInput
    orderBy: [ReferendumStageRevealingOrderByInput!]
  ): [ReferendumStageRevealing!]!
  referendumStageRevealingByUniqueInput(
    where: ReferendumStageRevealingWhereUniqueInput!
  ): ReferendumStageRevealing
  referendumStageRevealingsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ReferendumStageRevealingWhereInput
    orderBy: [ReferendumStageRevealingOrderByInput!]
  ): ReferendumStageRevealingConnection!
  referendumStageVotings(
    offset: Int
    limit: Int = 50
    where: ReferendumStageVotingWhereInput
    orderBy: [ReferendumStageVotingOrderByInput!]
  ): [ReferendumStageVoting!]!
  referendumStageVotingByUniqueInput(
    where: ReferendumStageVotingWhereUniqueInput!
  ): ReferendumStageVoting
  referendumStageVotingsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ReferendumStageVotingWhereInput
    orderBy: [ReferendumStageVotingOrderByInput!]
  ): ReferendumStageVotingConnection!
  referendumStartedEvents(
    offset: Int
    limit: Int = 50
    where: ReferendumStartedEventWhereInput
    orderBy: [ReferendumStartedEventOrderByInput!]
  ): [ReferendumStartedEvent!]!
  referendumStartedEventByUniqueInput(
    where: ReferendumStartedEventWhereUniqueInput!
  ): ReferendumStartedEvent
  referendumStartedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ReferendumStartedEventWhereInput
    orderBy: [ReferendumStartedEventOrderByInput!]
  ): ReferendumStartedEventConnection!
  referendumStartedForcefullyEvents(
    offset: Int
    limit: Int = 50
    where: ReferendumStartedForcefullyEventWhereInput
    orderBy: [ReferendumStartedForcefullyEventOrderByInput!]
  ): [ReferendumStartedForcefullyEvent!]!
  referendumStartedForcefullyEventByUniqueInput(
    where: ReferendumStartedForcefullyEventWhereUniqueInput!
  ): ReferendumStartedForcefullyEvent
  referendumStartedForcefullyEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ReferendumStartedForcefullyEventWhereInput
    orderBy: [ReferendumStartedForcefullyEventOrderByInput!]
  ): ReferendumStartedForcefullyEventConnection!
  referralCutUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: ReferralCutUpdatedEventWhereInput
    orderBy: [ReferralCutUpdatedEventOrderByInput!]
  ): [ReferralCutUpdatedEvent!]!
  referralCutUpdatedEventByUniqueInput(
    where: ReferralCutUpdatedEventWhereUniqueInput!
  ): ReferralCutUpdatedEvent
  referralCutUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ReferralCutUpdatedEventWhereInput
    orderBy: [ReferralCutUpdatedEventOrderByInput!]
  ): ReferralCutUpdatedEventConnection!
  requestFundedEvents(
    offset: Int
    limit: Int = 50
    where: RequestFundedEventWhereInput
    orderBy: [RequestFundedEventOrderByInput!]
  ): [RequestFundedEvent!]!
  requestFundedEventByUniqueInput(
    where: RequestFundedEventWhereUniqueInput!
  ): RequestFundedEvent
  requestFundedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: RequestFundedEventWhereInput
    orderBy: [RequestFundedEventOrderByInput!]
  ): RequestFundedEventConnection!
  revealingStageStartedEvents(
    offset: Int
    limit: Int = 50
    where: RevealingStageStartedEventWhereInput
    orderBy: [RevealingStageStartedEventOrderByInput!]
  ): [RevealingStageStartedEvent!]!
  revealingStageStartedEventByUniqueInput(
    where: RevealingStageStartedEventWhereUniqueInput!
  ): RevealingStageStartedEvent
  revealingStageStartedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: RevealingStageStartedEventWhereInput
    orderBy: [RevealingStageStartedEventOrderByInput!]
  ): RevealingStageStartedEventConnection!
  rewardPaidEvents(
    offset: Int
    limit: Int = 50
    where: RewardPaidEventWhereInput
    orderBy: [RewardPaidEventOrderByInput!]
  ): [RewardPaidEvent!]!
  rewardPaidEventByUniqueInput(
    where: RewardPaidEventWhereUniqueInput!
  ): RewardPaidEvent
  rewardPaidEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: RewardPaidEventWhereInput
    orderBy: [RewardPaidEventOrderByInput!]
  ): RewardPaidEventConnection!
  rewardPaymentEvents(
    offset: Int
    limit: Int = 50
    where: RewardPaymentEventWhereInput
    orderBy: [RewardPaymentEventOrderByInput!]
  ): [RewardPaymentEvent!]!
  rewardPaymentEventByUniqueInput(
    where: RewardPaymentEventWhereUniqueInput!
  ): RewardPaymentEvent
  rewardPaymentEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: RewardPaymentEventWhereInput
    orderBy: [RewardPaymentEventOrderByInput!]
  ): RewardPaymentEventConnection!
  runtimeWasmBytecodes(
    offset: Int
    limit: Int = 50
    where: RuntimeWasmBytecodeWhereInput
    orderBy: [RuntimeWasmBytecodeOrderByInput!]
  ): [RuntimeWasmBytecode!]!
  runtimeWasmBytecodeByUniqueInput(
    where: RuntimeWasmBytecodeWhereUniqueInput!
  ): RuntimeWasmBytecode
  runtimeWasmBytecodesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: RuntimeWasmBytecodeWhereInput
    orderBy: [RuntimeWasmBytecodeOrderByInput!]
  ): RuntimeWasmBytecodeConnection!
  stakeDecreasedEvents(
    offset: Int
    limit: Int = 50
    where: StakeDecreasedEventWhereInput
    orderBy: [StakeDecreasedEventOrderByInput!]
  ): [StakeDecreasedEvent!]!
  stakeDecreasedEventByUniqueInput(
    where: StakeDecreasedEventWhereUniqueInput!
  ): StakeDecreasedEvent
  stakeDecreasedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: StakeDecreasedEventWhereInput
    orderBy: [StakeDecreasedEventOrderByInput!]
  ): StakeDecreasedEventConnection!
  stakeIncreasedEvents(
    offset: Int
    limit: Int = 50
    where: StakeIncreasedEventWhereInput
    orderBy: [StakeIncreasedEventOrderByInput!]
  ): [StakeIncreasedEvent!]!
  stakeIncreasedEventByUniqueInput(
    where: StakeIncreasedEventWhereUniqueInput!
  ): StakeIncreasedEvent
  stakeIncreasedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: StakeIncreasedEventWhereInput
    orderBy: [StakeIncreasedEventOrderByInput!]
  ): StakeIncreasedEventConnection!
  stakeReleasedEvents(
    offset: Int
    limit: Int = 50
    where: StakeReleasedEventWhereInput
    orderBy: [StakeReleasedEventOrderByInput!]
  ): [StakeReleasedEvent!]!
  stakeReleasedEventByUniqueInput(
    where: StakeReleasedEventWhereUniqueInput!
  ): StakeReleasedEvent
  stakeReleasedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: StakeReleasedEventWhereInput
    orderBy: [StakeReleasedEventOrderByInput!]
  ): StakeReleasedEventConnection!
  stakeSlashedEvents(
    offset: Int
    limit: Int = 50
    where: StakeSlashedEventWhereInput
    orderBy: [StakeSlashedEventOrderByInput!]
  ): [StakeSlashedEvent!]!
  stakeSlashedEventByUniqueInput(
    where: StakeSlashedEventWhereUniqueInput!
  ): StakeSlashedEvent
  stakeSlashedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: StakeSlashedEventWhereInput
    orderBy: [StakeSlashedEventOrderByInput!]
  ): StakeSlashedEventConnection!
  stakingAccountAddedEvents(
    offset: Int
    limit: Int = 50
    where: StakingAccountAddedEventWhereInput
    orderBy: [StakingAccountAddedEventOrderByInput!]
  ): [StakingAccountAddedEvent!]!
  stakingAccountAddedEventByUniqueInput(
    where: StakingAccountAddedEventWhereUniqueInput!
  ): StakingAccountAddedEvent
  stakingAccountAddedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: StakingAccountAddedEventWhereInput
    orderBy: [StakingAccountAddedEventOrderByInput!]
  ): StakingAccountAddedEventConnection!
  stakingAccountConfirmedEvents(
    offset: Int
    limit: Int = 50
    where: StakingAccountConfirmedEventWhereInput
    orderBy: [StakingAccountConfirmedEventOrderByInput!]
  ): [StakingAccountConfirmedEvent!]!
  stakingAccountConfirmedEventByUniqueInput(
    where: StakingAccountConfirmedEventWhereUniqueInput!
  ): StakingAccountConfirmedEvent
  stakingAccountConfirmedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: StakingAccountConfirmedEventWhereInput
    orderBy: [StakingAccountConfirmedEventOrderByInput!]
  ): StakingAccountConfirmedEventConnection!
  stakingAccountRemovedEvents(
    offset: Int
    limit: Int = 50
    where: StakingAccountRemovedEventWhereInput
    orderBy: [StakingAccountRemovedEventOrderByInput!]
  ): [StakingAccountRemovedEvent!]!
  stakingAccountRemovedEventByUniqueInput(
    where: StakingAccountRemovedEventWhereUniqueInput!
  ): StakingAccountRemovedEvent
  stakingAccountRemovedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: StakingAccountRemovedEventWhereInput
    orderBy: [StakingAccountRemovedEventOrderByInput!]
  ): StakingAccountRemovedEventConnection!
  statusTextChangedEvents(
    offset: Int
    limit: Int = 50
    where: StatusTextChangedEventWhereInput
    orderBy: [StatusTextChangedEventOrderByInput!]
  ): [StatusTextChangedEvent!]!
  statusTextChangedEventByUniqueInput(
    where: StatusTextChangedEventWhereUniqueInput!
  ): StatusTextChangedEvent
  statusTextChangedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: StatusTextChangedEventWhereInput
    orderBy: [StatusTextChangedEventOrderByInput!]
  ): StatusTextChangedEventConnection!
  storageBags(
    offset: Int
    limit: Int = 50
    where: StorageBagWhereInput
    orderBy: [StorageBagOrderByInput!]
  ): [StorageBag!]!
  storageBagByUniqueInput(where: StorageBagWhereUniqueInput!): StorageBag
  storageBagsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: StorageBagWhereInput
    orderBy: [StorageBagOrderByInput!]
  ): StorageBagConnection!
  storageBucketOperatorMetadata(
    offset: Int
    limit: Int = 50
    where: StorageBucketOperatorMetadataWhereInput
    orderBy: [StorageBucketOperatorMetadataOrderByInput!]
  ): [StorageBucketOperatorMetadata!]!
  storageBucketOperatorMetadataByUniqueInput(
    where: StorageBucketOperatorMetadataWhereUniqueInput!
  ): StorageBucketOperatorMetadata
  storageBucketOperatorMetadataConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: StorageBucketOperatorMetadataWhereInput
    orderBy: [StorageBucketOperatorMetadataOrderByInput!]
  ): StorageBucketOperatorMetadataConnection!
  storageBuckets(
    offset: Int
    limit: Int = 50
    where: StorageBucketWhereInput
    orderBy: [StorageBucketOrderByInput!]
  ): [StorageBucket!]!
  storageBucketByUniqueInput(
    where: StorageBucketWhereUniqueInput!
  ): StorageBucket
  storageBucketsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: StorageBucketWhereInput
    orderBy: [StorageBucketOrderByInput!]
  ): StorageBucketConnection!
  storageDataObjects(
    offset: Int
    limit: Int = 50
    where: StorageDataObjectWhereInput
    orderBy: [StorageDataObjectOrderByInput!]
  ): [StorageDataObject!]!
  storageDataObjectByUniqueInput(
    where: StorageDataObjectWhereUniqueInput!
  ): StorageDataObject
  storageDataObjectsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: StorageDataObjectWhereInput
    orderBy: [StorageDataObjectOrderByInput!]
  ): StorageDataObjectConnection!
  storageSystemParameters(
    offset: Int
    limit: Int = 50
    where: StorageSystemParametersWhereInput
    orderBy: [StorageSystemParametersOrderByInput!]
  ): [StorageSystemParameters!]!
  storageSystemParametersByUniqueInput(
    where: StorageSystemParametersWhereUniqueInput!
  ): StorageSystemParameters
  storageSystemParametersConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: StorageSystemParametersWhereInput
    orderBy: [StorageSystemParametersOrderByInput!]
  ): StorageSystemParametersConnection!
  terminatedLeaderEvents(
    offset: Int
    limit: Int = 50
    where: TerminatedLeaderEventWhereInput
    orderBy: [TerminatedLeaderEventOrderByInput!]
  ): [TerminatedLeaderEvent!]!
  terminatedLeaderEventByUniqueInput(
    where: TerminatedLeaderEventWhereUniqueInput!
  ): TerminatedLeaderEvent
  terminatedLeaderEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: TerminatedLeaderEventWhereInput
    orderBy: [TerminatedLeaderEventOrderByInput!]
  ): TerminatedLeaderEventConnection!
  terminatedWorkerEvents(
    offset: Int
    limit: Int = 50
    where: TerminatedWorkerEventWhereInput
    orderBy: [TerminatedWorkerEventOrderByInput!]
  ): [TerminatedWorkerEvent!]!
  terminatedWorkerEventByUniqueInput(
    where: TerminatedWorkerEventWhereUniqueInput!
  ): TerminatedWorkerEvent
  terminatedWorkerEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: TerminatedWorkerEventWhereInput
    orderBy: [TerminatedWorkerEventOrderByInput!]
  ): TerminatedWorkerEventConnection!
  threadCreatedEvents(
    offset: Int
    limit: Int = 50
    where: ThreadCreatedEventWhereInput
    orderBy: [ThreadCreatedEventOrderByInput!]
  ): [ThreadCreatedEvent!]!
  threadCreatedEventByUniqueInput(
    where: ThreadCreatedEventWhereUniqueInput!
  ): ThreadCreatedEvent
  threadCreatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ThreadCreatedEventWhereInput
    orderBy: [ThreadCreatedEventOrderByInput!]
  ): ThreadCreatedEventConnection!
  threadDeletedEvents(
    offset: Int
    limit: Int = 50
    where: ThreadDeletedEventWhereInput
    orderBy: [ThreadDeletedEventOrderByInput!]
  ): [ThreadDeletedEvent!]!
  threadDeletedEventByUniqueInput(
    where: ThreadDeletedEventWhereUniqueInput!
  ): ThreadDeletedEvent
  threadDeletedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ThreadDeletedEventWhereInput
    orderBy: [ThreadDeletedEventOrderByInput!]
  ): ThreadDeletedEventConnection!
  threadMetadataUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: ThreadMetadataUpdatedEventWhereInput
    orderBy: [ThreadMetadataUpdatedEventOrderByInput!]
  ): [ThreadMetadataUpdatedEvent!]!
  threadMetadataUpdatedEventByUniqueInput(
    where: ThreadMetadataUpdatedEventWhereUniqueInput!
  ): ThreadMetadataUpdatedEvent
  threadMetadataUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ThreadMetadataUpdatedEventWhereInput
    orderBy: [ThreadMetadataUpdatedEventOrderByInput!]
  ): ThreadMetadataUpdatedEventConnection!
  threadModeratedEvents(
    offset: Int
    limit: Int = 50
    where: ThreadModeratedEventWhereInput
    orderBy: [ThreadModeratedEventOrderByInput!]
  ): [ThreadModeratedEvent!]!
  threadModeratedEventByUniqueInput(
    where: ThreadModeratedEventWhereUniqueInput!
  ): ThreadModeratedEvent
  threadModeratedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ThreadModeratedEventWhereInput
    orderBy: [ThreadModeratedEventOrderByInput!]
  ): ThreadModeratedEventConnection!
  threadMovedEvents(
    offset: Int
    limit: Int = 50
    where: ThreadMovedEventWhereInput
    orderBy: [ThreadMovedEventOrderByInput!]
  ): [ThreadMovedEvent!]!
  threadMovedEventByUniqueInput(
    where: ThreadMovedEventWhereUniqueInput!
  ): ThreadMovedEvent
  threadMovedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: ThreadMovedEventWhereInput
    orderBy: [ThreadMovedEventOrderByInput!]
  ): ThreadMovedEventConnection!
  transactionalStatusUpdates(
    offset: Int
    limit: Int = 50
    where: TransactionalStatusUpdateWhereInput
    orderBy: [TransactionalStatusUpdateOrderByInput!]
  ): [TransactionalStatusUpdate!]!
  transactionalStatusUpdateByUniqueInput(
    where: TransactionalStatusUpdateWhereUniqueInput!
  ): TransactionalStatusUpdate
  transactionalStatusUpdatesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: TransactionalStatusUpdateWhereInput
    orderBy: [TransactionalStatusUpdateOrderByInput!]
  ): TransactionalStatusUpdateConnection!
  upcomingWorkingGroupOpenings(
    offset: Int
    limit: Int = 50
    where: UpcomingWorkingGroupOpeningWhereInput
    orderBy: [UpcomingWorkingGroupOpeningOrderByInput!]
  ): [UpcomingWorkingGroupOpening!]!
  upcomingWorkingGroupOpeningByUniqueInput(
    where: UpcomingWorkingGroupOpeningWhereUniqueInput!
  ): UpcomingWorkingGroupOpening
  upcomingWorkingGroupOpeningsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: UpcomingWorkingGroupOpeningWhereInput
    orderBy: [UpcomingWorkingGroupOpeningOrderByInput!]
  ): UpcomingWorkingGroupOpeningConnection!
  videoCategories(
    offset: Int
    limit: Int = 50
    where: VideoCategoryWhereInput
    orderBy: [VideoCategoryOrderByInput!]
  ): [VideoCategory!]!
  videoCategoryByUniqueInput(
    where: VideoCategoryWhereUniqueInput!
  ): VideoCategory
  videoCategoriesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: VideoCategoryWhereInput
    orderBy: [VideoCategoryOrderByInput!]
  ): VideoCategoryConnection!
  videoMediaEncodings(
    offset: Int
    limit: Int = 50
    where: VideoMediaEncodingWhereInput
    orderBy: [VideoMediaEncodingOrderByInput!]
  ): [VideoMediaEncoding!]!
  videoMediaEncodingByUniqueInput(
    where: VideoMediaEncodingWhereUniqueInput!
  ): VideoMediaEncoding
  videoMediaEncodingsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: VideoMediaEncodingWhereInput
    orderBy: [VideoMediaEncodingOrderByInput!]
  ): VideoMediaEncodingConnection!
  videoMediaMetadata(
    offset: Int
    limit: Int = 50
    where: VideoMediaMetadataWhereInput
    orderBy: [VideoMediaMetadataOrderByInput!]
  ): [VideoMediaMetadata!]!
  videoMediaMetadataByUniqueInput(
    where: VideoMediaMetadataWhereUniqueInput!
  ): VideoMediaMetadata
  videoMediaMetadataConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: VideoMediaMetadataWhereInput
    orderBy: [VideoMediaMetadataOrderByInput!]
  ): VideoMediaMetadataConnection!
  videoReactedEvents(
    offset: Int
    limit: Int = 50
    where: VideoReactedEventWhereInput
    orderBy: [VideoReactedEventOrderByInput!]
  ): [VideoReactedEvent!]!
  videoReactedEventByUniqueInput(
    where: VideoReactedEventWhereUniqueInput!
  ): VideoReactedEvent
  videoReactedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: VideoReactedEventWhereInput
    orderBy: [VideoReactedEventOrderByInput!]
  ): VideoReactedEventConnection!
  videoReactions(
    offset: Int
    limit: Int = 50
    where: VideoReactionWhereInput
    orderBy: [VideoReactionOrderByInput!]
  ): [VideoReaction!]!
  videoReactionByUniqueInput(
    where: VideoReactionWhereUniqueInput!
  ): VideoReaction
  videoReactionsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: VideoReactionWhereInput
    orderBy: [VideoReactionOrderByInput!]
  ): VideoReactionConnection!
  videoReactionsCountByReactionTypes(
    offset: Int
    limit: Int = 50
    where: VideoReactionsCountByReactionTypeWhereInput
    orderBy: [VideoReactionsCountByReactionTypeOrderByInput!]
  ): [VideoReactionsCountByReactionType!]!
  videoReactionsCountByReactionTypeByUniqueInput(
    where: VideoReactionsCountByReactionTypeWhereUniqueInput!
  ): VideoReactionsCountByReactionType
  videoReactionsCountByReactionTypesConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: VideoReactionsCountByReactionTypeWhereInput
    orderBy: [VideoReactionsCountByReactionTypeOrderByInput!]
  ): VideoReactionsCountByReactionTypeConnection!
  videoReactionsPreferenceEvents(
    offset: Int
    limit: Int = 50
    where: VideoReactionsPreferenceEventWhereInput
    orderBy: [VideoReactionsPreferenceEventOrderByInput!]
  ): [VideoReactionsPreferenceEvent!]!
  videoReactionsPreferenceEventByUniqueInput(
    where: VideoReactionsPreferenceEventWhereUniqueInput!
  ): VideoReactionsPreferenceEvent
  videoReactionsPreferenceEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: VideoReactionsPreferenceEventWhereInput
    orderBy: [VideoReactionsPreferenceEventOrderByInput!]
  ): VideoReactionsPreferenceEventConnection!
  videos(
    offset: Int
    limit: Int = 50
    where: VideoWhereInput
    orderBy: [VideoOrderByInput!]
  ): [Video!]!
  videoByUniqueInput(where: VideoWhereUniqueInput!): Video
  videosConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: VideoWhereInput
    orderBy: [VideoOrderByInput!]
  ): VideoConnection!
  voteCastEvents(
    offset: Int
    limit: Int = 50
    where: VoteCastEventWhereInput
    orderBy: [VoteCastEventOrderByInput!]
  ): [VoteCastEvent!]!
  voteCastEventByUniqueInput(
    where: VoteCastEventWhereUniqueInput!
  ): VoteCastEvent
  voteCastEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: VoteCastEventWhereInput
    orderBy: [VoteCastEventOrderByInput!]
  ): VoteCastEventConnection!
  voteOnPollEvents(
    offset: Int
    limit: Int = 50
    where: VoteOnPollEventWhereInput
    orderBy: [VoteOnPollEventOrderByInput!]
  ): [VoteOnPollEvent!]!
  voteOnPollEventByUniqueInput(
    where: VoteOnPollEventWhereUniqueInput!
  ): VoteOnPollEvent
  voteOnPollEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: VoteOnPollEventWhereInput
    orderBy: [VoteOnPollEventOrderByInput!]
  ): VoteOnPollEventConnection!
  voteRevealedEvents(
    offset: Int
    limit: Int = 50
    where: VoteRevealedEventWhereInput
    orderBy: [VoteRevealedEventOrderByInput!]
  ): [VoteRevealedEvent!]!
  voteRevealedEventByUniqueInput(
    where: VoteRevealedEventWhereUniqueInput!
  ): VoteRevealedEvent
  voteRevealedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: VoteRevealedEventWhereInput
    orderBy: [VoteRevealedEventOrderByInput!]
  ): VoteRevealedEventConnection!
  votingPeriodStartedEvents(
    offset: Int
    limit: Int = 50
    where: VotingPeriodStartedEventWhereInput
    orderBy: [VotingPeriodStartedEventOrderByInput!]
  ): [VotingPeriodStartedEvent!]!
  votingPeriodStartedEventByUniqueInput(
    where: VotingPeriodStartedEventWhereUniqueInput!
  ): VotingPeriodStartedEvent
  votingPeriodStartedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: VotingPeriodStartedEventWhereInput
    orderBy: [VotingPeriodStartedEventOrderByInput!]
  ): VotingPeriodStartedEventConnection!
  workEntrantFundsWithdrawnEvents(
    offset: Int
    limit: Int = 50
    where: WorkEntrantFundsWithdrawnEventWhereInput
    orderBy: [WorkEntrantFundsWithdrawnEventOrderByInput!]
  ): [WorkEntrantFundsWithdrawnEvent!]!
  workEntrantFundsWithdrawnEventByUniqueInput(
    where: WorkEntrantFundsWithdrawnEventWhereUniqueInput!
  ): WorkEntrantFundsWithdrawnEvent
  workEntrantFundsWithdrawnEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkEntrantFundsWithdrawnEventWhereInput
    orderBy: [WorkEntrantFundsWithdrawnEventOrderByInput!]
  ): WorkEntrantFundsWithdrawnEventConnection!
  workEntryAnnouncedEvents(
    offset: Int
    limit: Int = 50
    where: WorkEntryAnnouncedEventWhereInput
    orderBy: [WorkEntryAnnouncedEventOrderByInput!]
  ): [WorkEntryAnnouncedEvent!]!
  workEntryAnnouncedEventByUniqueInput(
    where: WorkEntryAnnouncedEventWhereUniqueInput!
  ): WorkEntryAnnouncedEvent
  workEntryAnnouncedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkEntryAnnouncedEventWhereInput
    orderBy: [WorkEntryAnnouncedEventOrderByInput!]
  ): WorkEntryAnnouncedEventConnection!
  workEntrySlashedEvents(
    offset: Int
    limit: Int = 50
    where: WorkEntrySlashedEventWhereInput
    orderBy: [WorkEntrySlashedEventOrderByInput!]
  ): [WorkEntrySlashedEvent!]!
  workEntrySlashedEventByUniqueInput(
    where: WorkEntrySlashedEventWhereUniqueInput!
  ): WorkEntrySlashedEvent
  workEntrySlashedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkEntrySlashedEventWhereInput
    orderBy: [WorkEntrySlashedEventOrderByInput!]
  ): WorkEntrySlashedEventConnection!
  workEntryWithdrawnEvents(
    offset: Int
    limit: Int = 50
    where: WorkEntryWithdrawnEventWhereInput
    orderBy: [WorkEntryWithdrawnEventOrderByInput!]
  ): [WorkEntryWithdrawnEvent!]!
  workEntryWithdrawnEventByUniqueInput(
    where: WorkEntryWithdrawnEventWhereUniqueInput!
  ): WorkEntryWithdrawnEvent
  workEntryWithdrawnEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkEntryWithdrawnEventWhereInput
    orderBy: [WorkEntryWithdrawnEventOrderByInput!]
  ): WorkEntryWithdrawnEventConnection!
  workSubmittedEvents(
    offset: Int
    limit: Int = 50
    where: WorkSubmittedEventWhereInput
    orderBy: [WorkSubmittedEventOrderByInput!]
  ): [WorkSubmittedEvent!]!
  workSubmittedEventByUniqueInput(
    where: WorkSubmittedEventWhereUniqueInput!
  ): WorkSubmittedEvent
  workSubmittedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkSubmittedEventWhereInput
    orderBy: [WorkSubmittedEventOrderByInput!]
  ): WorkSubmittedEventConnection!
  workerExitedEvents(
    offset: Int
    limit: Int = 50
    where: WorkerExitedEventWhereInput
    orderBy: [WorkerExitedEventOrderByInput!]
  ): [WorkerExitedEvent!]!
  workerExitedEventByUniqueInput(
    where: WorkerExitedEventWhereUniqueInput!
  ): WorkerExitedEvent
  workerExitedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkerExitedEventWhereInput
    orderBy: [WorkerExitedEventOrderByInput!]
  ): WorkerExitedEventConnection!
  workerRewardAccountUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: WorkerRewardAccountUpdatedEventWhereInput
    orderBy: [WorkerRewardAccountUpdatedEventOrderByInput!]
  ): [WorkerRewardAccountUpdatedEvent!]!
  workerRewardAccountUpdatedEventByUniqueInput(
    where: WorkerRewardAccountUpdatedEventWhereUniqueInput!
  ): WorkerRewardAccountUpdatedEvent
  workerRewardAccountUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkerRewardAccountUpdatedEventWhereInput
    orderBy: [WorkerRewardAccountUpdatedEventOrderByInput!]
  ): WorkerRewardAccountUpdatedEventConnection!
  workerRewardAmountUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: WorkerRewardAmountUpdatedEventWhereInput
    orderBy: [WorkerRewardAmountUpdatedEventOrderByInput!]
  ): [WorkerRewardAmountUpdatedEvent!]!
  workerRewardAmountUpdatedEventByUniqueInput(
    where: WorkerRewardAmountUpdatedEventWhereUniqueInput!
  ): WorkerRewardAmountUpdatedEvent
  workerRewardAmountUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkerRewardAmountUpdatedEventWhereInput
    orderBy: [WorkerRewardAmountUpdatedEventOrderByInput!]
  ): WorkerRewardAmountUpdatedEventConnection!
  workerRoleAccountUpdatedEvents(
    offset: Int
    limit: Int = 50
    where: WorkerRoleAccountUpdatedEventWhereInput
    orderBy: [WorkerRoleAccountUpdatedEventOrderByInput!]
  ): [WorkerRoleAccountUpdatedEvent!]!
  workerRoleAccountUpdatedEventByUniqueInput(
    where: WorkerRoleAccountUpdatedEventWhereUniqueInput!
  ): WorkerRoleAccountUpdatedEvent
  workerRoleAccountUpdatedEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkerRoleAccountUpdatedEventWhereInput
    orderBy: [WorkerRoleAccountUpdatedEventOrderByInput!]
  ): WorkerRoleAccountUpdatedEventConnection!
  workerStartedLeavingEvents(
    offset: Int
    limit: Int = 50
    where: WorkerStartedLeavingEventWhereInput
    orderBy: [WorkerStartedLeavingEventOrderByInput!]
  ): [WorkerStartedLeavingEvent!]!
  workerStartedLeavingEventByUniqueInput(
    where: WorkerStartedLeavingEventWhereUniqueInput!
  ): WorkerStartedLeavingEvent
  workerStartedLeavingEventsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkerStartedLeavingEventWhereInput
    orderBy: [WorkerStartedLeavingEventOrderByInput!]
  ): WorkerStartedLeavingEventConnection!
  workers(
    offset: Int
    limit: Int = 50
    where: WorkerWhereInput
    orderBy: [WorkerOrderByInput!]
  ): [Worker!]!
  workerByUniqueInput(where: WorkerWhereUniqueInput!): Worker
  workersConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkerWhereInput
    orderBy: [WorkerOrderByInput!]
  ): WorkerConnection!
  workingGroupApplications(
    offset: Int
    limit: Int = 50
    where: WorkingGroupApplicationWhereInput
    orderBy: [WorkingGroupApplicationOrderByInput!]
  ): [WorkingGroupApplication!]!
  workingGroupApplicationByUniqueInput(
    where: WorkingGroupApplicationWhereUniqueInput!
  ): WorkingGroupApplication
  workingGroupApplicationsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkingGroupApplicationWhereInput
    orderBy: [WorkingGroupApplicationOrderByInput!]
  ): WorkingGroupApplicationConnection!
  workingGroupMetadata(
    offset: Int
    limit: Int = 50
    where: WorkingGroupMetadataWhereInput
    orderBy: [WorkingGroupMetadataOrderByInput!]
  ): [WorkingGroupMetadata!]!
  workingGroupMetadataByUniqueInput(
    where: WorkingGroupMetadataWhereUniqueInput!
  ): WorkingGroupMetadata
  workingGroupMetadataConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkingGroupMetadataWhereInput
    orderBy: [WorkingGroupMetadataOrderByInput!]
  ): WorkingGroupMetadataConnection!
  workingGroupOpeningMetadata(
    offset: Int
    limit: Int = 50
    where: WorkingGroupOpeningMetadataWhereInput
    orderBy: [WorkingGroupOpeningMetadataOrderByInput!]
  ): [WorkingGroupOpeningMetadata!]!
  workingGroupOpeningMetadataByUniqueInput(
    where: WorkingGroupOpeningMetadataWhereUniqueInput!
  ): WorkingGroupOpeningMetadata
  workingGroupOpeningMetadataConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkingGroupOpeningMetadataWhereInput
    orderBy: [WorkingGroupOpeningMetadataOrderByInput!]
  ): WorkingGroupOpeningMetadataConnection!
  workingGroupOpenings(
    offset: Int
    limit: Int = 50
    where: WorkingGroupOpeningWhereInput
    orderBy: [WorkingGroupOpeningOrderByInput!]
  ): [WorkingGroupOpening!]!
  workingGroupOpeningByUniqueInput(
    where: WorkingGroupOpeningWhereUniqueInput!
  ): WorkingGroupOpening
  workingGroupOpeningsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkingGroupOpeningWhereInput
    orderBy: [WorkingGroupOpeningOrderByInput!]
  ): WorkingGroupOpeningConnection!
  workingGroups(
    offset: Int
    limit: Int = 50
    where: WorkingGroupWhereInput
    orderBy: [WorkingGroupOrderByInput!]
  ): [WorkingGroup!]!
  workingGroupByUniqueInput(where: WorkingGroupWhereUniqueInput!): WorkingGroup
  workingGroupsConnection(
    first: Int
    after: String
    last: Int
    before: String
    where: WorkingGroupWhereInput
    orderBy: [WorkingGroupOrderByInput!]
  ): WorkingGroupConnection!
}

input AnnouncingPeriodStartedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  AND: [AnnouncingPeriodStartedEventWhereInput!]
  OR: [AnnouncingPeriodStartedEventWhereInput!]
  NOT: [AnnouncingPeriodStartedEventWhereInput!]
}

# The javascript `Date` as string. Type represents date and time as the ISO Date string.
scalar DateTime

enum Network {
  BABYLON
  ALEXANDRIA
  ROME
  GIZA
  OLYMPIA
}

enum AnnouncingPeriodStartedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
}

type AnnouncingPeriodStartedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
}

interface Event {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
}

enum EventTypeOptions {
  AnnouncingPeriodStartedEvent
  ApplicationWithdrawnEvent
  AppliedOnOpeningEvent
  AuctionBidCanceledEvent
  AuctionBidMadeEvent
  AuctionCanceledEvent
  BidMadeCompletingAuctionEvent
  BountyCanceledEvent
  BountyCreatedEvent
  BountyCreatorCherryWithdrawalEvent
  BountyFundedEvent
  BountyFundingWithdrawalEvent
  BountyMaxFundingReachedEvent
  BountyRemovedEvent
  BountyVetoedEvent
  BudgetBalanceSetEvent
  BudgetIncrementUpdatedEvent
  BudgetRefillEvent
  BudgetRefillPlannedEvent
  BudgetSetEvent
  BudgetSpendingEvent
  BudgetUpdatedEvent
  BuyNowCanceledEvent
  BuyNowPriceUpdatedEvent
  CandidacyNoteSetEvent
  CandidacyStakeReleaseEvent
  CandidacyWithdrawEvent
  CategoryArchivalStatusUpdatedEvent
  CategoryCreatedEvent
  CategoryDeletedEvent
  CategoryMembershipOfModeratorUpdatedEvent
  CategoryStickyThreadUpdateEvent
  CommentCreatedEvent
  CommentDeletedEvent
  CommentModeratedEvent
  CommentPinnedEvent
  CommentReactedEvent
  CommentTextUpdatedEvent
  CouncilorRewardUpdatedEvent
  EnglishAuctionSettledEvent
  EnglishAuctionStartedEvent
  InitialInvitationBalanceUpdatedEvent
  InitialInvitationCountUpdatedEvent
  InvitesTransferredEvent
  LeaderInvitationQuotaUpdatedEvent
  LeaderSetEvent
  LeaderUnsetEvent
  MemberAccountsUpdatedEvent
  MemberBannedFromChannelEvent
  MemberInvitedEvent
  MemberProfileUpdatedEvent
  MemberVerificationStatusUpdatedEvent
  MembershipBoughtEvent
  MembershipPriceUpdatedEvent
  MetaprotocolTransactionStatusEvent
  NewCandidateEvent
  NewCouncilElectedEvent
  NewCouncilNotElectedEvent
  NewMissedRewardLevelReachedEvent
  NftBoughtEvent
  NftIssuedEvent
  NftSlingedBackToTheOriginalArtistEvent
  NotEnoughCandidatesEvent
  OfferAcceptedEvent
  OfferCanceledEvent
  OfferStartedEvent
  OpenAuctionBidAcceptedEvent
  OpenAuctionStartedEvent
  OpeningAddedEvent
  OpeningCanceledEvent
  OpeningFilledEvent
  OracleJudgmentSubmittedEvent
  PostAddedEvent
  PostDeletedEvent
  PostModeratedEvent
  PostReactedEvent
  PostTextUpdatedEvent
  ProposalCancelledEvent
  ProposalCreatedEvent
  ProposalDecisionMadeEvent
  ProposalDiscussionPostCreatedEvent
  ProposalDiscussionPostDeletedEvent
  ProposalDiscussionPostUpdatedEvent
  ProposalDiscussionThreadModeChangedEvent
  ProposalExecutedEvent
  ProposalStatusUpdatedEvent
  ProposalVotedEvent
  ReferendumFinishedEvent
  ReferendumStartedEvent
  ReferendumStartedForcefullyEvent
  ReferralCutUpdatedEvent
  RequestFundedEvent
  RevealingStageStartedEvent
  RewardPaidEvent
  RewardPaymentEvent
  StakeDecreasedEvent
  StakeIncreasedEvent
  StakeReleasedEvent
  StakeSlashedEvent
  StakingAccountAddedEvent
  StakingAccountConfirmedEvent
  StakingAccountRemovedEvent
  StatusTextChangedEvent
  TerminatedLeaderEvent
  TerminatedWorkerEvent
  ThreadCreatedEvent
  ThreadDeletedEvent
  ThreadMetadataUpdatedEvent
  ThreadModeratedEvent
  ThreadMovedEvent
  VideoReactedEvent
  VideoReactionsPreferenceEvent
  VoteCastEvent
  VoteOnPollEvent
  VoteRevealedEvent
  VotingPeriodStartedEvent
  WorkEntrantFundsWithdrawnEvent
  WorkEntryAnnouncedEvent
  WorkEntrySlashedEvent
  WorkEntryWithdrawnEvent
  WorkSubmittedEvent
  WorkerExitedEvent
  WorkerRewardAccountUpdatedEvent
  WorkerRewardAmountUpdatedEvent
  WorkerRoleAccountUpdatedEvent
  WorkerStartedLeavingEvent
}

interface BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
}

input AnnouncingPeriodStartedEventWhereUniqueInput {
  id: ID!
}

type AnnouncingPeriodStartedEventConnection {
  totalCount: Int!
  edges: [AnnouncingPeriodStartedEventEdge!]!
  pageInfo: PageInfo!
}

type AnnouncingPeriodStartedEventEdge {
  node: AnnouncingPeriodStartedEvent!
  cursor: String!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

input ApplicationFormQuestionAnswerWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  answer_eq: String
  answer_contains: String
  answer_startsWith: String
  answer_endsWith: String
  answer_in: [String!]
  application: WorkingGroupApplicationWhereInput
  question: ApplicationFormQuestionWhereInput
  AND: [ApplicationFormQuestionAnswerWhereInput!]
  OR: [ApplicationFormQuestionAnswerWhereInput!]
  NOT: [ApplicationFormQuestionAnswerWhereInput!]
}

input WorkingGroupApplicationWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  runtimeId_eq: Int
  runtimeId_gt: Int
  runtimeId_gte: Int
  runtimeId_lt: Int
  runtimeId_lte: Int
  runtimeId_in: [Int!]
  stake_eq: BigInt
  stake_gt: BigInt
  stake_gte: BigInt
  stake_lt: BigInt
  stake_lte: BigInt
  stake_in: [BigInt!]
  roleAccount_eq: String
  roleAccount_contains: String
  roleAccount_startsWith: String
  roleAccount_endsWith: String
  roleAccount_in: [String!]
  rewardAccount_eq: String
  rewardAccount_contains: String
  rewardAccount_startsWith: String
  rewardAccount_endsWith: String
  rewardAccount_in: [String!]
  stakingAccount_eq: String
  stakingAccount_contains: String
  stakingAccount_startsWith: String
  stakingAccount_endsWith: String
  stakingAccount_in: [String!]
  status_json: JSONObject
  opening: WorkingGroupOpeningWhereInput
  applicant: MembershipWhereInput
  answers_none: ApplicationFormQuestionAnswerWhereInput
  answers_some: ApplicationFormQuestionAnswerWhereInput
  answers_every: ApplicationFormQuestionAnswerWhereInput
  createdInEvent: AppliedOnOpeningEventWhereInput
  applicationwithdrawneventapplication_none: ApplicationWithdrawnEventWhereInput
  applicationwithdrawneventapplication_some: ApplicationWithdrawnEventWhereInput
  applicationwithdrawneventapplication_every: ApplicationWithdrawnEventWhereInput
  workerapplication_none: WorkerWhereInput
  workerapplication_some: WorkerWhereInput
  workerapplication_every: WorkerWhereInput
  AND: [WorkingGroupApplicationWhereInput!]
  OR: [WorkingGroupApplicationWhereInput!]
  NOT: [WorkingGroupApplicationWhereInput!]
}

# GraphQL representation of BigInt
scalar BigInt

# The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSONObject

input WorkingGroupOpeningWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  runtimeId_eq: Int
  runtimeId_gt: Int
  runtimeId_gte: Int
  runtimeId_lt: Int
  runtimeId_lte: Int
  runtimeId_in: [Int!]
  type_eq: WorkingGroupOpeningType
  type_in: [WorkingGroupOpeningType!]
  status_json: JSONObject
  stakeAmount_eq: BigInt
  stakeAmount_gt: BigInt
  stakeAmount_gte: BigInt
  stakeAmount_lt: BigInt
  stakeAmount_lte: BigInt
  stakeAmount_in: [BigInt!]
  unstakingPeriod_eq: Int
  unstakingPeriod_gt: Int
  unstakingPeriod_gte: Int
  unstakingPeriod_lt: Int
  unstakingPeriod_lte: Int
  unstakingPeriod_in: [Int!]
  rewardPerBlock_eq: BigInt
  rewardPerBlock_gt: BigInt
  rewardPerBlock_gte: BigInt
  rewardPerBlock_lt: BigInt
  rewardPerBlock_lte: BigInt
  rewardPerBlock_in: [BigInt!]
  group: WorkingGroupWhereInput
  applications_none: WorkingGroupApplicationWhereInput
  applications_some: WorkingGroupApplicationWhereInput
  applications_every: WorkingGroupApplicationWhereInput
  metadata: WorkingGroupOpeningMetadataWhereInput
  createdInEvent: OpeningAddedEventWhereInput
  appliedonopeningeventopening_none: AppliedOnOpeningEventWhereInput
  appliedonopeningeventopening_some: AppliedOnOpeningEventWhereInput
  appliedonopeningeventopening_every: AppliedOnOpeningEventWhereInput
  openingcanceledeventopening_none: OpeningCanceledEventWhereInput
  openingcanceledeventopening_some: OpeningCanceledEventWhereInput
  openingcanceledeventopening_every: OpeningCanceledEventWhereInput
  openingfilledeventopening_none: OpeningFilledEventWhereInput
  openingfilledeventopening_some: OpeningFilledEventWhereInput
  openingfilledeventopening_every: OpeningFilledEventWhereInput
  AND: [WorkingGroupOpeningWhereInput!]
  OR: [WorkingGroupOpeningWhereInput!]
  NOT: [WorkingGroupOpeningWhereInput!]
}

enum WorkingGroupOpeningType {
  REGULAR
  LEADER
}

input WorkingGroupWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  name_eq: String
  name_contains: String
  name_startsWith: String
  name_endsWith: String
  name_in: [String!]
  budget_eq: BigInt
  budget_gt: BigInt
  budget_gte: BigInt
  budget_lt: BigInt
  budget_lte: BigInt
  budget_in: [BigInt!]
  metadata: WorkingGroupMetadataWhereInput
  leader: WorkerWhereInput
  workers_none: WorkerWhereInput
  workers_some: WorkerWhereInput
  workers_every: WorkerWhereInput
  openings_none: WorkingGroupOpeningWhereInput
  openings_some: WorkingGroupOpeningWhereInput
  openings_every: WorkingGroupOpeningWhereInput
  applicationwithdrawneventgroup_none: ApplicationWithdrawnEventWhereInput
  applicationwithdrawneventgroup_some: ApplicationWithdrawnEventWhereInput
  applicationwithdrawneventgroup_every: ApplicationWithdrawnEventWhereInput
  appliedonopeningeventgroup_none: AppliedOnOpeningEventWhereInput
  appliedonopeningeventgroup_some: AppliedOnOpeningEventWhereInput
  appliedonopeningeventgroup_every: AppliedOnOpeningEventWhereInput
  budgetseteventgroup_none: BudgetSetEventWhereInput
  budgetseteventgroup_some: BudgetSetEventWhereInput
  budgetseteventgroup_every: BudgetSetEventWhereInput
  budgetspendingeventgroup_none: BudgetSpendingEventWhereInput
  budgetspendingeventgroup_some: BudgetSpendingEventWhereInput
  budgetspendingeventgroup_every: BudgetSpendingEventWhereInput
  budgetupdatedeventgroup_none: BudgetUpdatedEventWhereInput
  budgetupdatedeventgroup_some: BudgetUpdatedEventWhereInput
  budgetupdatedeventgroup_every: BudgetUpdatedEventWhereInput
  leaderseteventgroup_none: LeaderSetEventWhereInput
  leaderseteventgroup_some: LeaderSetEventWhereInput
  leaderseteventgroup_every: LeaderSetEventWhereInput
  leaderunseteventgroup_none: LeaderUnsetEventWhereInput
  leaderunseteventgroup_some: LeaderUnsetEventWhereInput
  leaderunseteventgroup_every: LeaderUnsetEventWhereInput
  newmissedrewardlevelreachedeventgroup_none: NewMissedRewardLevelReachedEventWhereInput
  newmissedrewardlevelreachedeventgroup_some: NewMissedRewardLevelReachedEventWhereInput
  newmissedrewardlevelreachedeventgroup_every: NewMissedRewardLevelReachedEventWhereInput
  openingaddedeventgroup_none: OpeningAddedEventWhereInput
  openingaddedeventgroup_some: OpeningAddedEventWhereInput
  openingaddedeventgroup_every: OpeningAddedEventWhereInput
  openingcanceledeventgroup_none: OpeningCanceledEventWhereInput
  openingcanceledeventgroup_some: OpeningCanceledEventWhereInput
  openingcanceledeventgroup_every: OpeningCanceledEventWhereInput
  openingfilledeventgroup_none: OpeningFilledEventWhereInput
  openingfilledeventgroup_some: OpeningFilledEventWhereInput
  openingfilledeventgroup_every: OpeningFilledEventWhereInput
  rewardpaideventgroup_none: RewardPaidEventWhereInput
  rewardpaideventgroup_some: RewardPaidEventWhereInput
  rewardpaideventgroup_every: RewardPaidEventWhereInput
  stakedecreasedeventgroup_none: StakeDecreasedEventWhereInput
  stakedecreasedeventgroup_some: StakeDecreasedEventWhereInput
  stakedecreasedeventgroup_every: StakeDecreasedEventWhereInput
  stakeincreasedeventgroup_none: StakeIncreasedEventWhereInput
  stakeincreasedeventgroup_some: StakeIncreasedEventWhereInput
  stakeincreasedeventgroup_every: StakeIncreasedEventWhereInput
  stakeslashedeventgroup_none: StakeSlashedEventWhereInput
  stakeslashedeventgroup_some: StakeSlashedEventWhereInput
  stakeslashedeventgroup_every: StakeSlashedEventWhereInput
  statustextchangedeventgroup_none: StatusTextChangedEventWhereInput
  statustextchangedeventgroup_some: StatusTextChangedEventWhereInput
  statustextchangedeventgroup_every: StatusTextChangedEventWhereInput
  terminatedleadereventgroup_none: TerminatedLeaderEventWhereInput
  terminatedleadereventgroup_some: TerminatedLeaderEventWhereInput
  terminatedleadereventgroup_every: TerminatedLeaderEventWhereInput
  terminatedworkereventgroup_none: TerminatedWorkerEventWhereInput
  terminatedworkereventgroup_some: TerminatedWorkerEventWhereInput
  terminatedworkereventgroup_every: TerminatedWorkerEventWhereInput
  upcomingworkinggroupopeninggroup_none: UpcomingWorkingGroupOpeningWhereInput
  upcomingworkinggroupopeninggroup_some: UpcomingWorkingGroupOpeningWhereInput
  upcomingworkinggroupopeninggroup_every: UpcomingWorkingGroupOpeningWhereInput
  workerexitedeventgroup_none: WorkerExitedEventWhereInput
  workerexitedeventgroup_some: WorkerExitedEventWhereInput
  workerexitedeventgroup_every: WorkerExitedEventWhereInput
  workerrewardaccountupdatedeventgroup_none: WorkerRewardAccountUpdatedEventWhereInput
  workerrewardaccountupdatedeventgroup_some: WorkerRewardAccountUpdatedEventWhereInput
  workerrewardaccountupdatedeventgroup_every: WorkerRewardAccountUpdatedEventWhereInput
  workerrewardamountupdatedeventgroup_none: WorkerRewardAmountUpdatedEventWhereInput
  workerrewardamountupdatedeventgroup_some: WorkerRewardAmountUpdatedEventWhereInput
  workerrewardamountupdatedeventgroup_every: WorkerRewardAmountUpdatedEventWhereInput
  workerroleaccountupdatedeventgroup_none: WorkerRoleAccountUpdatedEventWhereInput
  workerroleaccountupdatedeventgroup_some: WorkerRoleAccountUpdatedEventWhereInput
  workerroleaccountupdatedeventgroup_every: WorkerRoleAccountUpdatedEventWhereInput
  workerstartedleavingeventgroup_none: WorkerStartedLeavingEventWhereInput
  workerstartedleavingeventgroup_some: WorkerStartedLeavingEventWhereInput
  workerstartedleavingeventgroup_every: WorkerStartedLeavingEventWhereInput
  workinggroupmetadatagroup_none: WorkingGroupMetadataWhereInput
  workinggroupmetadatagroup_some: WorkingGroupMetadataWhereInput
  workinggroupmetadatagroup_every: WorkingGroupMetadataWhereInput
  AND: [WorkingGroupWhereInput!]
  OR: [WorkingGroupWhereInput!]
  NOT: [WorkingGroupWhereInput!]
}

input WorkingGroupMetadataWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  status_eq: String
  status_contains: String
  status_startsWith: String
  status_endsWith: String
  status_in: [String!]
  statusMessage_eq: String
  statusMessage_contains: String
  statusMessage_startsWith: String
  statusMessage_endsWith: String
  statusMessage_in: [String!]
  about_eq: String
  about_contains: String
  about_startsWith: String
  about_endsWith: String
  about_in: [String!]
  description_eq: String
  description_contains: String
  description_startsWith: String
  description_endsWith: String
  description_in: [String!]
  setInEvent: StatusTextChangedEventWhereInput
  group: WorkingGroupWhereInput
  workinggroupmetadata_none: WorkingGroupWhereInput
  workinggroupmetadata_some: WorkingGroupWhereInput
  workinggroupmetadata_every: WorkingGroupWhereInput
  AND: [WorkingGroupMetadataWhereInput!]
  OR: [WorkingGroupMetadataWhereInput!]
  NOT: [WorkingGroupMetadataWhereInput!]
}

input StatusTextChangedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  metadata_eq: String
  metadata_contains: String
  metadata_startsWith: String
  metadata_endsWith: String
  metadata_in: [String!]
  result_json: JSONObject
  group: WorkingGroupWhereInput
  upcomingworkinggroupopeningcreatedInEvent_none: UpcomingWorkingGroupOpeningWhereInput
  upcomingworkinggroupopeningcreatedInEvent_some: UpcomingWorkingGroupOpeningWhereInput
  upcomingworkinggroupopeningcreatedInEvent_every: UpcomingWorkingGroupOpeningWhereInput
  workinggroupmetadatasetInEvent_none: WorkingGroupMetadataWhereInput
  workinggroupmetadatasetInEvent_some: WorkingGroupMetadataWhereInput
  workinggroupmetadatasetInEvent_every: WorkingGroupMetadataWhereInput
  AND: [StatusTextChangedEventWhereInput!]
  OR: [StatusTextChangedEventWhereInput!]
  NOT: [StatusTextChangedEventWhereInput!]
}

input UpcomingWorkingGroupOpeningWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  expectedStart_eq: DateTime
  expectedStart_lt: DateTime
  expectedStart_lte: DateTime
  expectedStart_gt: DateTime
  expectedStart_gte: DateTime
  stakeAmount_eq: BigInt
  stakeAmount_gt: BigInt
  stakeAmount_gte: BigInt
  stakeAmount_lt: BigInt
  stakeAmount_lte: BigInt
  stakeAmount_in: [BigInt!]
  rewardPerBlock_eq: BigInt
  rewardPerBlock_gt: BigInt
  rewardPerBlock_gte: BigInt
  rewardPerBlock_lt: BigInt
  rewardPerBlock_lte: BigInt
  rewardPerBlock_in: [BigInt!]
  createdInEvent: StatusTextChangedEventWhereInput
  group: WorkingGroupWhereInput
  metadata: WorkingGroupOpeningMetadataWhereInput
  AND: [UpcomingWorkingGroupOpeningWhereInput!]
  OR: [UpcomingWorkingGroupOpeningWhereInput!]
  NOT: [UpcomingWorkingGroupOpeningWhereInput!]
}

input WorkingGroupOpeningMetadataWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  originallyValid_eq: Boolean
  originallyValid_in: [Boolean!]
  title_eq: String
  title_contains: String
  title_startsWith: String
  title_endsWith: String
  title_in: [String!]
  shortDescription_eq: String
  shortDescription_contains: String
  shortDescription_startsWith: String
  shortDescription_endsWith: String
  shortDescription_in: [String!]
  description_eq: String
  description_contains: String
  description_startsWith: String
  description_endsWith: String
  description_in: [String!]
  hiringLimit_eq: Int
  hiringLimit_gt: Int
  hiringLimit_gte: Int
  hiringLimit_lt: Int
  hiringLimit_lte: Int
  hiringLimit_in: [Int!]
  expectedEnding_eq: DateTime
  expectedEnding_lt: DateTime
  expectedEnding_lte: DateTime
  expectedEnding_gt: DateTime
  expectedEnding_gte: DateTime
  applicationDetails_eq: String
  applicationDetails_contains: String
  applicationDetails_startsWith: String
  applicationDetails_endsWith: String
  applicationDetails_in: [String!]
  applicationFormQuestions_none: ApplicationFormQuestionWhereInput
  applicationFormQuestions_some: ApplicationFormQuestionWhereInput
  applicationFormQuestions_every: ApplicationFormQuestionWhereInput
  upcomingworkinggroupopeningmetadata_none: UpcomingWorkingGroupOpeningWhereInput
  upcomingworkinggroupopeningmetadata_some: UpcomingWorkingGroupOpeningWhereInput
  upcomingworkinggroupopeningmetadata_every: UpcomingWorkingGroupOpeningWhereInput
  workinggroupopeningmetadata_none: WorkingGroupOpeningWhereInput
  workinggroupopeningmetadata_some: WorkingGroupOpeningWhereInput
  workinggroupopeningmetadata_every: WorkingGroupOpeningWhereInput
  AND: [WorkingGroupOpeningMetadataWhereInput!]
  OR: [WorkingGroupOpeningMetadataWhereInput!]
  NOT: [WorkingGroupOpeningMetadataWhereInput!]
}

input ApplicationFormQuestionWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  question_eq: String
  question_contains: String
  question_startsWith: String
  question_endsWith: String
  question_in: [String!]
  type_eq: ApplicationFormQuestionType
  type_in: [ApplicationFormQuestionType!]
  index_eq: Int
  index_gt: Int
  index_gte: Int
  index_lt: Int
  index_lte: Int
  index_in: [Int!]
  openingMetadata: WorkingGroupOpeningMetadataWhereInput
  applicationformquestionanswerquestion_none: ApplicationFormQuestionAnswerWhereInput
  applicationformquestionanswerquestion_some: ApplicationFormQuestionAnswerWhereInput
  applicationformquestionanswerquestion_every: ApplicationFormQuestionAnswerWhereInput
  AND: [ApplicationFormQuestionWhereInput!]
  OR: [ApplicationFormQuestionWhereInput!]
  NOT: [ApplicationFormQuestionWhereInput!]
}

enum ApplicationFormQuestionType {
  TEXT
  TEXTAREA
}

input WorkerWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  runtimeId_eq: Int
  runtimeId_gt: Int
  runtimeId_gte: Int
  runtimeId_lt: Int
  runtimeId_lte: Int
  runtimeId_in: [Int!]
  groupId_eq: String
  groupId_contains: String
  groupId_startsWith: String
  groupId_endsWith: String
  groupId_in: [String!]
  roleAccount_eq: String
  roleAccount_contains: String
  roleAccount_startsWith: String
  roleAccount_endsWith: String
  roleAccount_in: [String!]
  rewardAccount_eq: String
  rewardAccount_contains: String
  rewardAccount_startsWith: String
  rewardAccount_endsWith: String
  rewardAccount_in: [String!]
  stakeAccount_eq: String
  stakeAccount_contains: String
  stakeAccount_startsWith: String
  stakeAccount_endsWith: String
  stakeAccount_in: [String!]
  status_json: JSONObject
  isLead_eq: Boolean
  isLead_in: [Boolean!]
  isActive_eq: Boolean
  isActive_in: [Boolean!]
  stake_eq: BigInt
  stake_gt: BigInt
  stake_gte: BigInt
  stake_lt: BigInt
  stake_lte: BigInt
  stake_in: [BigInt!]
  rewardPerBlock_eq: BigInt
  rewardPerBlock_gt: BigInt
  rewardPerBlock_gte: BigInt
  rewardPerBlock_lt: BigInt
  rewardPerBlock_lte: BigInt
  rewardPerBlock_in: [BigInt!]
  missingRewardAmount_eq: BigInt
  missingRewardAmount_gt: BigInt
  missingRewardAmount_gte: BigInt
  missingRewardAmount_lt: BigInt
  missingRewardAmount_lte: BigInt
  missingRewardAmount_in: [BigInt!]
  storage_eq: String
  storage_contains: String
  storage_startsWith: String
  storage_endsWith: String
  storage_in: [String!]
  group: WorkingGroupWhereInput
  membership: MembershipWhereInput
  payouts_none: RewardPaidEventWhereInput
  payouts_some: RewardPaidEventWhereInput
  payouts_every: RewardPaidEventWhereInput
  slashes_none: StakeSlashedEventWhereInput
  slashes_some: StakeSlashedEventWhereInput
  slashes_every: StakeSlashedEventWhereInput
  entry: OpeningFilledEventWhereInput
  application: WorkingGroupApplicationWhereInput
  managedForumCategories_none: ForumCategoryWhereInput
  managedForumCategories_some: ForumCategoryWhereInput
  managedForumCategories_every: ForumCategoryWhereInput
  categoryarchivalstatusupdatedeventactor_none: CategoryArchivalStatusUpdatedEventWhereInput
  categoryarchivalstatusupdatedeventactor_some: CategoryArchivalStatusUpdatedEventWhereInput
  categoryarchivalstatusupdatedeventactor_every: CategoryArchivalStatusUpdatedEventWhereInput
  categorydeletedeventactor_none: CategoryDeletedEventWhereInput
  categorydeletedeventactor_some: CategoryDeletedEventWhereInput
  categorydeletedeventactor_every: CategoryDeletedEventWhereInput
  categorymembershipofmoderatorupdatedeventmoderator_none: CategoryMembershipOfModeratorUpdatedEventWhereInput
  categorymembershipofmoderatorupdatedeventmoderator_some: CategoryMembershipOfModeratorUpdatedEventWhereInput
  categorymembershipofmoderatorupdatedeventmoderator_every: CategoryMembershipOfModeratorUpdatedEventWhereInput
  categorystickythreadupdateeventactor_none: CategoryStickyThreadUpdateEventWhereInput
  categorystickythreadupdateeventactor_some: CategoryStickyThreadUpdateEventWhereInput
  categorystickythreadupdateeventactor_every: CategoryStickyThreadUpdateEventWhereInput
  leaderseteventworker_none: LeaderSetEventWhereInput
  leaderseteventworker_some: LeaderSetEventWhereInput
  leaderseteventworker_every: LeaderSetEventWhereInput
  leaderunseteventleader_none: LeaderUnsetEventWhereInput
  leaderunseteventleader_some: LeaderUnsetEventWhereInput
  leaderunseteventleader_every: LeaderUnsetEventWhereInput
  memberverificationstatusupdatedeventworker_none: MemberVerificationStatusUpdatedEventWhereInput
  memberverificationstatusupdatedeventworker_some: MemberVerificationStatusUpdatedEventWhereInput
  memberverificationstatusupdatedeventworker_every: MemberVerificationStatusUpdatedEventWhereInput
  newmissedrewardlevelreachedeventworker_none: NewMissedRewardLevelReachedEventWhereInput
  newmissedrewardlevelreachedeventworker_some: NewMissedRewardLevelReachedEventWhereInput
  newmissedrewardlevelreachedeventworker_every: NewMissedRewardLevelReachedEventWhereInput
  postmoderatedeventactor_none: PostModeratedEventWhereInput
  postmoderatedeventactor_some: PostModeratedEventWhereInput
  postmoderatedeventactor_every: PostModeratedEventWhereInput
  stakedecreasedeventworker_none: StakeDecreasedEventWhereInput
  stakedecreasedeventworker_some: StakeDecreasedEventWhereInput
  stakedecreasedeventworker_every: StakeDecreasedEventWhereInput
  stakeincreasedeventworker_none: StakeIncreasedEventWhereInput
  stakeincreasedeventworker_some: StakeIncreasedEventWhereInput
  stakeincreasedeventworker_every: StakeIncreasedEventWhereInput
  terminatedleadereventworker_none: TerminatedLeaderEventWhereInput
  terminatedleadereventworker_some: TerminatedLeaderEventWhereInput
  terminatedleadereventworker_every: TerminatedLeaderEventWhereInput
  terminatedworkereventworker_none: TerminatedWorkerEventWhereInput
  terminatedworkereventworker_some: TerminatedWorkerEventWhereInput
  terminatedworkereventworker_every: TerminatedWorkerEventWhereInput
  threadmoderatedeventactor_none: ThreadModeratedEventWhereInput
  threadmoderatedeventactor_some: ThreadModeratedEventWhereInput
  threadmoderatedeventactor_every: ThreadModeratedEventWhereInput
  threadmovedeventactor_none: ThreadMovedEventWhereInput
  threadmovedeventactor_some: ThreadMovedEventWhereInput
  threadmovedeventactor_every: ThreadMovedEventWhereInput
  workerexitedeventworker_none: WorkerExitedEventWhereInput
  workerexitedeventworker_some: WorkerExitedEventWhereInput
  workerexitedeventworker_every: WorkerExitedEventWhereInput
  workerrewardaccountupdatedeventworker_none: WorkerRewardAccountUpdatedEventWhereInput
  workerrewardaccountupdatedeventworker_some: WorkerRewardAccountUpdatedEventWhereInput
  workerrewardaccountupdatedeventworker_every: WorkerRewardAccountUpdatedEventWhereInput
  workerrewardamountupdatedeventworker_none: WorkerRewardAmountUpdatedEventWhereInput
  workerrewardamountupdatedeventworker_some: WorkerRewardAmountUpdatedEventWhereInput
  workerrewardamountupdatedeventworker_every: WorkerRewardAmountUpdatedEventWhereInput
  workerroleaccountupdatedeventworker_none: WorkerRoleAccountUpdatedEventWhereInput
  workerroleaccountupdatedeventworker_some: WorkerRoleAccountUpdatedEventWhereInput
  workerroleaccountupdatedeventworker_every: WorkerRoleAccountUpdatedEventWhereInput
  workerstartedleavingeventworker_none: WorkerStartedLeavingEventWhereInput
  workerstartedleavingeventworker_some: WorkerStartedLeavingEventWhereInput
  workerstartedleavingeventworker_every: WorkerStartedLeavingEventWhereInput
  workinggroupleader_none: WorkingGroupWhereInput
  workinggroupleader_some: WorkingGroupWhereInput
  workinggroupleader_every: WorkingGroupWhereInput
  AND: [WorkerWhereInput!]
  OR: [WorkerWhereInput!]
  NOT: [WorkerWhereInput!]
}

input MembershipWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  handle_eq: String
  handle_contains: String
  handle_startsWith: String
  handle_endsWith: String
  handle_in: [String!]
  controllerAccount_eq: String
  controllerAccount_contains: String
  controllerAccount_startsWith: String
  controllerAccount_endsWith: String
  controllerAccount_in: [String!]
  rootAccount_eq: String
  rootAccount_contains: String
  rootAccount_startsWith: String
  rootAccount_endsWith: String
  rootAccount_in: [String!]
  entry_json: JSONObject
  isVerified_eq: Boolean
  isVerified_in: [Boolean!]
  boundAccounts_containsAll: [String!]
  boundAccounts_containsNone: [String!]
  boundAccounts_containsAny: [String!]
  inviteCount_eq: Int
  inviteCount_gt: Int
  inviteCount_gte: Int
  inviteCount_lt: Int
  inviteCount_lte: Int
  inviteCount_in: [Int!]
  isFoundingMember_eq: Boolean
  isFoundingMember_in: [Boolean!]
  isCouncilMember_eq: Boolean
  isCouncilMember_in: [Boolean!]
  metadata: MemberMetadataWhereInput
  invitees_none: MembershipWhereInput
  invitees_some: MembershipWhereInput
  invitees_every: MembershipWhereInput
  invitedBy: MembershipWhereInput
  referredMembers_none: MembershipWhereInput
  referredMembers_some: MembershipWhereInput
  referredMembers_every: MembershipWhereInput
  referredBy: MembershipWhereInput
  roles_none: WorkerWhereInput
  roles_some: WorkerWhereInput
  roles_every: WorkerWhereInput
  whitelistedIn_none: ProposalDiscussionWhitelistWhereInput
  whitelistedIn_some: ProposalDiscussionWhitelistWhereInput
  whitelistedIn_every: ProposalDiscussionWhitelistWhereInput
  whitelistedInBounties_none: BountyEntrantWhitelistWhereInput
  whitelistedInBounties_some: BountyEntrantWhitelistWhereInput
  whitelistedInBounties_every: BountyEntrantWhitelistWhereInput
  channels_none: ChannelWhereInput
  channels_some: ChannelWhereInput
  channels_every: ChannelWhereInput
  collaboratorInChannels_none: ChannelWhereInput
  collaboratorInChannels_some: ChannelWhereInput
  collaboratorInChannels_every: ChannelWhereInput
  memberBannedFromChannels_none: ChannelWhereInput
  memberBannedFromChannels_some: ChannelWhereInput
  memberBannedFromChannels_every: ChannelWhereInput
  councilCandidacies_none: CandidateWhereInput
  councilCandidacies_some: CandidateWhereInput
  councilCandidacies_every: CandidateWhereInput
  councilMembers_none: CouncilMemberWhereInput
  councilMembers_some: CouncilMemberWhereInput
  councilMembers_every: CouncilMemberWhereInput
  whitelistedInAuctions_none: AuctionWhereInput
  whitelistedInAuctions_some: AuctionWhereInput
  whitelistedInAuctions_every: AuctionWhereInput
  ownedNfts_none: OwnedNftWhereInput
  ownedNfts_some: OwnedNftWhereInput
  ownedNfts_every: OwnedNftWhereInput
  nftCollectorInChannels_none: ChannelNftCollectorsWhereInput
  nftCollectorInChannels_some: ChannelNftCollectorsWhereInput
  nftCollectorInChannels_every: ChannelNftCollectorsWhereInput
  memberEnglishAuctionSettledEvents_none: EnglishAuctionSettledEventWhereInput
  memberEnglishAuctionSettledEvents_some: EnglishAuctionSettledEventWhereInput
  memberEnglishAuctionSettledEvents_every: EnglishAuctionSettledEventWhereInput
  memberOpenAuctionAcceptedBidEvents_none: OpenAuctionBidAcceptedEventWhereInput
  memberOpenAuctionAcceptedBidEvents_some: OpenAuctionBidAcceptedEventWhereInput
  memberOpenAuctionAcceptedBidEvents_every: OpenAuctionBidAcceptedEventWhereInput
  memberBidMadeCompletingAuctionEvents_none: BidMadeCompletingAuctionEventWhereInput
  memberBidMadeCompletingAuctionEvents_some: BidMadeCompletingAuctionEventWhereInput
  memberBidMadeCompletingAuctionEvents_every: BidMadeCompletingAuctionEventWhereInput
  auctioninitialOwner_none: AuctionWhereInput
  auctioninitialOwner_some: AuctionWhereInput
  auctioninitialOwner_every: AuctionWhereInput
  auctionwinningMember_none: AuctionWhereInput
  auctionwinningMember_some: AuctionWhereInput
  auctionwinningMember_every: AuctionWhereInput
  auctionbidcanceledeventmember_none: AuctionBidCanceledEventWhereInput
  auctionbidcanceledeventmember_some: AuctionBidCanceledEventWhereInput
  auctionbidcanceledeventmember_every: AuctionBidCanceledEventWhereInput
  auctionbidcanceledeventownerMember_none: AuctionBidCanceledEventWhereInput
  auctionbidcanceledeventownerMember_some: AuctionBidCanceledEventWhereInput
  auctionbidcanceledeventownerMember_every: AuctionBidCanceledEventWhereInput
  auctionbidmadeeventmember_none: AuctionBidMadeEventWhereInput
  auctionbidmadeeventmember_some: AuctionBidMadeEventWhereInput
  auctionbidmadeeventmember_every: AuctionBidMadeEventWhereInput
  auctionbidmadeeventownerMember_none: AuctionBidMadeEventWhereInput
  auctionbidmadeeventownerMember_some: AuctionBidMadeEventWhereInput
  auctionbidmadeeventownerMember_every: AuctionBidMadeEventWhereInput
  auctionbidmadeeventpreviousTopBidder_none: AuctionBidMadeEventWhereInput
  auctionbidmadeeventpreviousTopBidder_some: AuctionBidMadeEventWhereInput
  auctionbidmadeeventpreviousTopBidder_every: AuctionBidMadeEventWhereInput
  auctioncanceledeventownerMember_none: AuctionCanceledEventWhereInput
  auctioncanceledeventownerMember_some: AuctionCanceledEventWhereInput
  auctioncanceledeventownerMember_every: AuctionCanceledEventWhereInput
  bidbidder_none: BidWhereInput
  bidbidder_some: BidWhereInput
  bidbidder_every: BidWhereInput
  bidmadecompletingauctioneventmember_none: BidMadeCompletingAuctionEventWhereInput
  bidmadecompletingauctioneventmember_some: BidMadeCompletingAuctionEventWhereInput
  bidmadecompletingauctioneventmember_every: BidMadeCompletingAuctionEventWhereInput
  bidmadecompletingauctioneventownerMember_none: BidMadeCompletingAuctionEventWhereInput
  bidmadecompletingauctioneventownerMember_some: BidMadeCompletingAuctionEventWhereInput
  bidmadecompletingauctioneventownerMember_every: BidMadeCompletingAuctionEventWhereInput
  bidmadecompletingauctioneventpreviousTopBidder_none: BidMadeCompletingAuctionEventWhereInput
  bidmadecompletingauctioneventpreviousTopBidder_some: BidMadeCompletingAuctionEventWhereInput
  bidmadecompletingauctioneventpreviousTopBidder_every: BidMadeCompletingAuctionEventWhereInput
  bountycreator_none: BountyWhereInput
  bountycreator_some: BountyWhereInput
  bountycreator_every: BountyWhereInput
  bountyoracle_none: BountyWhereInput
  bountyoracle_some: BountyWhereInput
  bountyoracle_every: BountyWhereInput
  bountycontributioncontributor_none: BountyContributionWhereInput
  bountycontributioncontributor_some: BountyContributionWhereInput
  bountycontributioncontributor_every: BountyContributionWhereInput
  bountyentryworker_none: BountyEntryWhereInput
  bountyentryworker_some: BountyEntryWhereInput
  bountyentryworker_every: BountyEntryWhereInput
  buynowcanceledeventownerMember_none: BuyNowCanceledEventWhereInput
  buynowcanceledeventownerMember_some: BuyNowCanceledEventWhereInput
  buynowcanceledeventownerMember_every: BuyNowCanceledEventWhereInput
  buynowpriceupdatedeventownerMember_none: BuyNowPriceUpdatedEventWhereInput
  buynowpriceupdatedeventownerMember_some: BuyNowPriceUpdatedEventWhereInput
  buynowpriceupdatedeventownerMember_every: BuyNowPriceUpdatedEventWhereInput
  commentauthor_none: CommentWhereInput
  commentauthor_some: CommentWhereInput
  commentauthor_every: CommentWhereInput
  commentcreatedeventparentCommentAuthor_none: CommentCreatedEventWhereInput
  commentcreatedeventparentCommentAuthor_some: CommentCreatedEventWhereInput
  commentcreatedeventparentCommentAuthor_every: CommentCreatedEventWhereInput
  commentreactedeventreactingMember_none: CommentReactedEventWhereInput
  commentreactedeventreactingMember_some: CommentReactedEventWhereInput
  commentreactedeventreactingMember_every: CommentReactedEventWhereInput
  commentreactionmember_none: CommentReactionWhereInput
  commentreactionmember_some: CommentReactionWhereInput
  commentreactionmember_every: CommentReactionWhereInput
  englishauctionsettledeventwinner_none: EnglishAuctionSettledEventWhereInput
  englishauctionsettledeventwinner_some: EnglishAuctionSettledEventWhereInput
  englishauctionsettledeventwinner_every: EnglishAuctionSettledEventWhereInput
  englishauctionsettledeventownerMember_none: EnglishAuctionSettledEventWhereInput
  englishauctionsettledeventownerMember_some: EnglishAuctionSettledEventWhereInput
  englishauctionsettledeventownerMember_every: EnglishAuctionSettledEventWhereInput
  englishauctionstartedeventownerMember_none: EnglishAuctionStartedEventWhereInput
  englishauctionstartedeventownerMember_some: EnglishAuctionStartedEventWhereInput
  englishauctionstartedeventownerMember_every: EnglishAuctionStartedEventWhereInput
  forumpostauthor_none: ForumPostWhereInput
  forumpostauthor_some: ForumPostWhereInput
  forumpostauthor_every: ForumPostWhereInput
  forumpostreactionmember_none: ForumPostReactionWhereInput
  forumpostreactionmember_some: ForumPostReactionWhereInput
  forumpostreactionmember_every: ForumPostReactionWhereInput
  forumthreadauthor_none: ForumThreadWhereInput
  forumthreadauthor_some: ForumThreadWhereInput
  forumthreadauthor_every: ForumThreadWhereInput
  invitestransferredeventsourceMember_none: InvitesTransferredEventWhereInput
  invitestransferredeventsourceMember_some: InvitesTransferredEventWhereInput
  invitestransferredeventsourceMember_every: InvitesTransferredEventWhereInput
  invitestransferredeventtargetMember_none: InvitesTransferredEventWhereInput
  invitestransferredeventtargetMember_some: InvitesTransferredEventWhereInput
  invitestransferredeventtargetMember_every: InvitesTransferredEventWhereInput
  memberaccountsupdatedeventmember_none: MemberAccountsUpdatedEventWhereInput
  memberaccountsupdatedeventmember_some: MemberAccountsUpdatedEventWhereInput
  memberaccountsupdatedeventmember_every: MemberAccountsUpdatedEventWhereInput
  memberbannedfromchanneleventmember_none: MemberBannedFromChannelEventWhereInput
  memberbannedfromchanneleventmember_some: MemberBannedFromChannelEventWhereInput
  memberbannedfromchanneleventmember_every: MemberBannedFromChannelEventWhereInput
  memberinvitedeventinvitingMember_none: MemberInvitedEventWhereInput
  memberinvitedeventinvitingMember_some: MemberInvitedEventWhereInput
  memberinvitedeventinvitingMember_every: MemberInvitedEventWhereInput
  memberinvitedeventnewMember_none: MemberInvitedEventWhereInput
  memberinvitedeventnewMember_some: MemberInvitedEventWhereInput
  memberinvitedeventnewMember_every: MemberInvitedEventWhereInput
  memberprofileupdatedeventmember_none: MemberProfileUpdatedEventWhereInput
  memberprofileupdatedeventmember_some: MemberProfileUpdatedEventWhereInput
  memberprofileupdatedeventmember_every: MemberProfileUpdatedEventWhereInput
  memberverificationstatusupdatedeventmember_none: MemberVerificationStatusUpdatedEventWhereInput
  memberverificationstatusupdatedeventmember_some: MemberVerificationStatusUpdatedEventWhereInput
  memberverificationstatusupdatedeventmember_every: MemberVerificationStatusUpdatedEventWhereInput
  membershipboughteventnewMember_none: MembershipBoughtEventWhereInput
  membershipboughteventnewMember_some: MembershipBoughtEventWhereInput
  membershipboughteventnewMember_every: MembershipBoughtEventWhereInput
  membershipboughteventreferrer_none: MembershipBoughtEventWhereInput
  membershipboughteventreferrer_some: MembershipBoughtEventWhereInput
  membershipboughteventreferrer_every: MembershipBoughtEventWhereInput
  nftboughteventmember_none: NftBoughtEventWhereInput
  nftboughteventmember_some: NftBoughtEventWhereInput
  nftboughteventmember_every: NftBoughtEventWhereInput
  nftboughteventownerMember_none: NftBoughtEventWhereInput
  nftboughteventownerMember_some: NftBoughtEventWhereInput
  nftboughteventownerMember_every: NftBoughtEventWhereInput
  nftissuedeventownerMember_none: NftIssuedEventWhereInput
  nftissuedeventownerMember_some: NftIssuedEventWhereInput
  nftissuedeventownerMember_every: NftIssuedEventWhereInput
  nftsellordermadeeventownerMember_none: NftSellOrderMadeEventWhereInput
  nftsellordermadeeventownerMember_some: NftSellOrderMadeEventWhereInput
  nftsellordermadeeventownerMember_every: NftSellOrderMadeEventWhereInput
  nftslingedbacktotheoriginalartisteventownerMember_none: NftSlingedBackToTheOriginalArtistEventWhereInput
  nftslingedbacktotheoriginalartisteventownerMember_some: NftSlingedBackToTheOriginalArtistEventWhereInput
  nftslingedbacktotheoriginalartisteventownerMember_every: NftSlingedBackToTheOriginalArtistEventWhereInput
  offeracceptedeventownerMember_none: OfferAcceptedEventWhereInput
  offeracceptedeventownerMember_some: OfferAcceptedEventWhereInput
  offeracceptedeventownerMember_every: OfferAcceptedEventWhereInput
  offercanceledeventownerMember_none: OfferCanceledEventWhereInput
  offercanceledeventownerMember_some: OfferCanceledEventWhereInput
  offercanceledeventownerMember_every: OfferCanceledEventWhereInput
  offerstartedeventmember_none: OfferStartedEventWhereInput
  offerstartedeventmember_some: OfferStartedEventWhereInput
  offerstartedeventmember_every: OfferStartedEventWhereInput
  offerstartedeventownerMember_none: OfferStartedEventWhereInput
  offerstartedeventownerMember_some: OfferStartedEventWhereInput
  offerstartedeventownerMember_every: OfferStartedEventWhereInput
  openauctionbidacceptedeventownerMember_none: OpenAuctionBidAcceptedEventWhereInput
  openauctionbidacceptedeventownerMember_some: OpenAuctionBidAcceptedEventWhereInput
  openauctionbidacceptedeventownerMember_every: OpenAuctionBidAcceptedEventWhereInput
  openauctionbidacceptedeventwinningBidder_none: OpenAuctionBidAcceptedEventWhereInput
  openauctionbidacceptedeventwinningBidder_some: OpenAuctionBidAcceptedEventWhereInput
  openauctionbidacceptedeventwinningBidder_every: OpenAuctionBidAcceptedEventWhereInput
  openauctionstartedeventownerMember_none: OpenAuctionStartedEventWhereInput
  openauctionstartedeventownerMember_some: OpenAuctionStartedEventWhereInput
  openauctionstartedeventownerMember_every: OpenAuctionStartedEventWhereInput
  postdeletedeventactor_none: PostDeletedEventWhereInput
  postdeletedeventactor_some: PostDeletedEventWhereInput
  postdeletedeventactor_every: PostDeletedEventWhereInput
  postreactedeventreactingMember_none: PostReactedEventWhereInput
  postreactedeventreactingMember_some: PostReactedEventWhereInput
  postreactedeventreactingMember_every: PostReactedEventWhereInput
  proposalcreator_none: ProposalWhereInput
  proposalcreator_some: ProposalWhereInput
  proposalcreator_every: ProposalWhereInput
  proposaldiscussionpostauthor_none: ProposalDiscussionPostWhereInput
  proposaldiscussionpostauthor_some: ProposalDiscussionPostWhereInput
  proposaldiscussionpostauthor_every: ProposalDiscussionPostWhereInput
  proposaldiscussionpostdeletedeventactor_none: ProposalDiscussionPostDeletedEventWhereInput
  proposaldiscussionpostdeletedeventactor_some: ProposalDiscussionPostDeletedEventWhereInput
  proposaldiscussionpostdeletedeventactor_every: ProposalDiscussionPostDeletedEventWhereInput
  proposaldiscussionthreadmodechangedeventactor_none: ProposalDiscussionThreadModeChangedEventWhereInput
  proposaldiscussionthreadmodechangedeventactor_some: ProposalDiscussionThreadModeChangedEventWhereInput
  proposaldiscussionthreadmodechangedeventactor_every: ProposalDiscussionThreadModeChangedEventWhereInput
  proposalvotedeventvoter_none: ProposalVotedEventWhereInput
  proposalvotedeventvoter_some: ProposalVotedEventWhereInput
  proposalvotedeventvoter_every: ProposalVotedEventWhereInput
  stakingaccountaddedeventmember_none: StakingAccountAddedEventWhereInput
  stakingaccountaddedeventmember_some: StakingAccountAddedEventWhereInput
  stakingaccountaddedeventmember_every: StakingAccountAddedEventWhereInput
  stakingaccountconfirmedeventmember_none: StakingAccountConfirmedEventWhereInput
  stakingaccountconfirmedeventmember_some: StakingAccountConfirmedEventWhereInput
  stakingaccountconfirmedeventmember_every: StakingAccountConfirmedEventWhereInput
  stakingaccountremovedeventmember_none: StakingAccountRemovedEventWhereInput
  stakingaccountremovedeventmember_some: StakingAccountRemovedEventWhereInput
  stakingaccountremovedeventmember_every: StakingAccountRemovedEventWhereInput
  videoreactedeventreactingMember_none: VideoReactedEventWhereInput
  videoreactedeventreactingMember_some: VideoReactedEventWhereInput
  videoreactedeventreactingMember_every: VideoReactedEventWhereInput
  videoreactionmember_none: VideoReactionWhereInput
  videoreactionmember_some: VideoReactionWhereInput
  videoreactionmember_every: VideoReactionWhereInput
  voteonpolleventvotingMember_none: VoteOnPollEventWhereInput
  voteonpolleventvotingMember_some: VoteOnPollEventWhereInput
  voteonpolleventvotingMember_every: VoteOnPollEventWhereInput
  workinggroupapplicationapplicant_none: WorkingGroupApplicationWhereInput
  workinggroupapplicationapplicant_some: WorkingGroupApplicationWhereInput
  workinggroupapplicationapplicant_every: WorkingGroupApplicationWhereInput
  AND: [MembershipWhereInput!]
  OR: [MembershipWhereInput!]
  NOT: [MembershipWhereInput!]
}

input MemberMetadataWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  name_eq: String
  name_contains: String
  name_startsWith: String
  name_endsWith: String
  name_in: [String!]
  avatar_json: JSONObject
  about_eq: String
  about_contains: String
  about_startsWith: String
  about_endsWith: String
  about_in: [String!]
  externalResources_none: MembershipExternalResourceWhereInput
  externalResources_some: MembershipExternalResourceWhereInput
  externalResources_every: MembershipExternalResourceWhereInput
  memberinvitedeventmetadata_none: MemberInvitedEventWhereInput
  memberinvitedeventmetadata_some: MemberInvitedEventWhereInput
  memberinvitedeventmetadata_every: MemberInvitedEventWhereInput
  memberprofileupdatedeventnewMetadata_none: MemberProfileUpdatedEventWhereInput
  memberprofileupdatedeventnewMetadata_some: MemberProfileUpdatedEventWhereInput
  memberprofileupdatedeventnewMetadata_every: MemberProfileUpdatedEventWhereInput
  membershipmetadata_none: MembershipWhereInput
  membershipmetadata_some: MembershipWhereInput
  membershipmetadata_every: MembershipWhereInput
  membershipboughteventmetadata_none: MembershipBoughtEventWhereInput
  membershipboughteventmetadata_some: MembershipBoughtEventWhereInput
  membershipboughteventmetadata_every: MembershipBoughtEventWhereInput
  AND: [MemberMetadataWhereInput!]
  OR: [MemberMetadataWhereInput!]
  NOT: [MemberMetadataWhereInput!]
}

input MembershipExternalResourceWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  type_eq: MembershipExternalResourceType
  type_in: [MembershipExternalResourceType!]
  value_eq: String
  value_contains: String
  value_startsWith: String
  value_endsWith: String
  value_in: [String!]
  memberMetadata: MemberMetadataWhereInput
  AND: [MembershipExternalResourceWhereInput!]
  OR: [MembershipExternalResourceWhereInput!]
  NOT: [MembershipExternalResourceWhereInput!]
}

enum MembershipExternalResourceType {
  EMAIL
  HYPERLINK
  TWITTER
  TELEGRAM
  DISCORD
  FACEBOOK
  YOUTUBE
  MATRIX
  IRC
  WECHAT
  WHATSAPP
}

input MemberInvitedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  rootAccount_eq: String
  rootAccount_contains: String
  rootAccount_startsWith: String
  rootAccount_endsWith: String
  rootAccount_in: [String!]
  controllerAccount_eq: String
  controllerAccount_contains: String
  controllerAccount_startsWith: String
  controllerAccount_endsWith: String
  controllerAccount_in: [String!]
  handle_eq: String
  handle_contains: String
  handle_startsWith: String
  handle_endsWith: String
  handle_in: [String!]
  invitingMember: MembershipWhereInput
  newMember: MembershipWhereInput
  metadata: MemberMetadataWhereInput
  AND: [MemberInvitedEventWhereInput!]
  OR: [MemberInvitedEventWhereInput!]
  NOT: [MemberInvitedEventWhereInput!]
}

input MemberProfileUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newHandle_eq: String
  newHandle_contains: String
  newHandle_startsWith: String
  newHandle_endsWith: String
  newHandle_in: [String!]
  member: MembershipWhereInput
  newMetadata: MemberMetadataWhereInput
  AND: [MemberProfileUpdatedEventWhereInput!]
  OR: [MemberProfileUpdatedEventWhereInput!]
  NOT: [MemberProfileUpdatedEventWhereInput!]
}

input MembershipBoughtEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  rootAccount_eq: String
  rootAccount_contains: String
  rootAccount_startsWith: String
  rootAccount_endsWith: String
  rootAccount_in: [String!]
  controllerAccount_eq: String
  controllerAccount_contains: String
  controllerAccount_startsWith: String
  controllerAccount_endsWith: String
  controllerAccount_in: [String!]
  handle_eq: String
  handle_contains: String
  handle_startsWith: String
  handle_endsWith: String
  handle_in: [String!]
  newMember: MembershipWhereInput
  metadata: MemberMetadataWhereInput
  referrer: MembershipWhereInput
  AND: [MembershipBoughtEventWhereInput!]
  OR: [MembershipBoughtEventWhereInput!]
  NOT: [MembershipBoughtEventWhereInput!]
}

input ProposalDiscussionWhitelistWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  phantom_eq: Int
  phantom_gt: Int
  phantom_gte: Int
  phantom_lt: Int
  phantom_lte: Int
  phantom_in: [Int!]
  members_none: MembershipWhereInput
  members_some: MembershipWhereInput
  members_every: MembershipWhereInput
  AND: [ProposalDiscussionWhitelistWhereInput!]
  OR: [ProposalDiscussionWhitelistWhereInput!]
  NOT: [ProposalDiscussionWhitelistWhereInput!]
}

input BountyEntrantWhitelistWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  phantom_eq: Int
  phantom_gt: Int
  phantom_gte: Int
  phantom_lt: Int
  phantom_lte: Int
  phantom_in: [Int!]
  members_none: MembershipWhereInput
  members_some: MembershipWhereInput
  members_every: MembershipWhereInput
  bountyentrantWhitelist_none: BountyWhereInput
  bountyentrantWhitelist_some: BountyWhereInput
  bountyentrantWhitelist_every: BountyWhereInput
  AND: [BountyEntrantWhitelistWhereInput!]
  OR: [BountyEntrantWhitelistWhereInput!]
  NOT: [BountyEntrantWhitelistWhereInput!]
}

input BountyWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  title_eq: String
  title_contains: String
  title_startsWith: String
  title_endsWith: String
  title_in: [String!]
  description_eq: String
  description_contains: String
  description_startsWith: String
  description_endsWith: String
  description_in: [String!]
  bannerImageUri_eq: String
  bannerImageUri_contains: String
  bannerImageUri_startsWith: String
  bannerImageUri_endsWith: String
  bannerImageUri_in: [String!]
  cherry_eq: BigInt
  cherry_gt: BigInt
  cherry_gte: BigInt
  cherry_lt: BigInt
  cherry_lte: BigInt
  cherry_in: [BigInt!]
  entrantStake_eq: BigInt
  entrantStake_gt: BigInt
  entrantStake_gte: BigInt
  entrantStake_lt: BigInt
  entrantStake_lte: BigInt
  entrantStake_in: [BigInt!]
  fundingType_json: JSONObject
  workPeriod_eq: Int
  workPeriod_gt: Int
  workPeriod_gte: Int
  workPeriod_lt: Int
  workPeriod_lte: Int
  workPeriod_in: [Int!]
  judgingPeriod_eq: Int
  judgingPeriod_gt: Int
  judgingPeriod_gte: Int
  judgingPeriod_lt: Int
  judgingPeriod_lte: Int
  judgingPeriod_in: [Int!]
  stage_eq: BountyStage
  stage_in: [BountyStage!]
  totalFunding_eq: BigInt
  totalFunding_gt: BigInt
  totalFunding_gte: BigInt
  totalFunding_lt: BigInt
  totalFunding_lte: BigInt
  totalFunding_in: [BigInt!]
  isTerminated_eq: Boolean
  isTerminated_in: [Boolean!]
  creator: MembershipWhereInput
  oracle: MembershipWhereInput
  entrantWhitelist: BountyEntrantWhitelistWhereInput
  discussionThread: ForumThreadWhereInput
  contributions_none: BountyContributionWhereInput
  contributions_some: BountyContributionWhereInput
  contributions_every: BountyContributionWhereInput
  entries_none: BountyEntryWhereInput
  entries_some: BountyEntryWhereInput
  entries_every: BountyEntryWhereInput
  createdInEvent: BountyCreatedEventWhereInput
  canceledEvent: BountyCanceledEventWhereInput
  vetoedEvent: BountyVetoedEventWhereInput
  maxFundingReachedEvent: BountyMaxFundingReachedEventWhereInput
  removedInEvent: BountyRemovedEventWhereInput
  judgment: OracleJudgmentSubmittedEventWhereInput
  bountycreatorcherrywithdrawaleventbounty_none: BountyCreatorCherryWithdrawalEventWhereInput
  bountycreatorcherrywithdrawaleventbounty_some: BountyCreatorCherryWithdrawalEventWhereInput
  bountycreatorcherrywithdrawaleventbounty_every: BountyCreatorCherryWithdrawalEventWhereInput
  worksubmittedeventbounty_none: WorkSubmittedEventWhereInput
  worksubmittedeventbounty_some: WorkSubmittedEventWhereInput
  worksubmittedeventbounty_every: WorkSubmittedEventWhereInput
  AND: [BountyWhereInput!]
  OR: [BountyWhereInput!]
  NOT: [BountyWhereInput!]
}

enum BountyStage {
  Funding
  Expired
  WorkSubmission
  Judgment
  Successful
  Failed
}

input ForumThreadWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  title_eq: String
  title_contains: String
  title_startsWith: String
  title_endsWith: String
  title_in: [String!]
  visiblePostsCount_eq: Int
  visiblePostsCount_gt: Int
  visiblePostsCount_gte: Int
  visiblePostsCount_lt: Int
  visiblePostsCount_lte: Int
  visiblePostsCount_in: [Int!]
  isSticky_eq: Boolean
  isSticky_in: [Boolean!]
  status_json: JSONObject
  isVisible_eq: Boolean
  isVisible_in: [Boolean!]
  author: MembershipWhereInput
  category: ForumCategoryWhereInput
  posts_none: ForumPostWhereInput
  posts_some: ForumPostWhereInput
  posts_every: ForumPostWhereInput
  initialPost: ForumPostWhereInput
  poll: ForumPollWhereInput
  createdInEvent: ThreadCreatedEventWhereInput
  metadataUpdates_none: ThreadMetadataUpdatedEventWhereInput
  metadataUpdates_some: ThreadMetadataUpdatedEventWhereInput
  metadataUpdates_every: ThreadMetadataUpdatedEventWhereInput
  madeStickyInEvents_none: CategoryStickyThreadUpdateEventWhereInput
  madeStickyInEvents_some: CategoryStickyThreadUpdateEventWhereInput
  madeStickyInEvents_every: CategoryStickyThreadUpdateEventWhereInput
  movedInEvents_none: ThreadMovedEventWhereInput
  movedInEvents_some: ThreadMovedEventWhereInput
  movedInEvents_every: ThreadMovedEventWhereInput
  tags_none: ForumThreadTagWhereInput
  tags_some: ForumThreadTagWhereInput
  tags_every: ForumThreadTagWhereInput
  bountydiscussionThread_none: BountyWhereInput
  bountydiscussionThread_some: BountyWhereInput
  bountydiscussionThread_every: BountyWhereInput
  threaddeletedeventthread_none: ThreadDeletedEventWhereInput
  threaddeletedeventthread_some: ThreadDeletedEventWhereInput
  threaddeletedeventthread_every: ThreadDeletedEventWhereInput
  threadmoderatedeventthread_none: ThreadModeratedEventWhereInput
  threadmoderatedeventthread_some: ThreadModeratedEventWhereInput
  threadmoderatedeventthread_every: ThreadModeratedEventWhereInput
  AND: [ForumThreadWhereInput!]
  OR: [ForumThreadWhereInput!]
  NOT: [ForumThreadWhereInput!]
}

input ForumCategoryWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  title_eq: String
  title_contains: String
  title_startsWith: String
  title_endsWith: String
  title_in: [String!]
  description_eq: String
  description_contains: String
  description_startsWith: String
  description_endsWith: String
  description_in: [String!]
  status_json: JSONObject
  parent: ForumCategoryWhereInput
  threads_none: ForumThreadWhereInput
  threads_some: ForumThreadWhereInput
  threads_every: ForumThreadWhereInput
  moderators_none: WorkerWhereInput
  moderators_some: WorkerWhereInput
  moderators_every: WorkerWhereInput
  createdInEvent: CategoryCreatedEventWhereInput
  categoryarchivalstatusupdatedeventcategory_none: CategoryArchivalStatusUpdatedEventWhereInput
  categoryarchivalstatusupdatedeventcategory_some: CategoryArchivalStatusUpdatedEventWhereInput
  categoryarchivalstatusupdatedeventcategory_every: CategoryArchivalStatusUpdatedEventWhereInput
  categorydeletedeventcategory_none: CategoryDeletedEventWhereInput
  categorydeletedeventcategory_some: CategoryDeletedEventWhereInput
  categorydeletedeventcategory_every: CategoryDeletedEventWhereInput
  categorymembershipofmoderatorupdatedeventcategory_none: CategoryMembershipOfModeratorUpdatedEventWhereInput
  categorymembershipofmoderatorupdatedeventcategory_some: CategoryMembershipOfModeratorUpdatedEventWhereInput
  categorymembershipofmoderatorupdatedeventcategory_every: CategoryMembershipOfModeratorUpdatedEventWhereInput
  categorystickythreadupdateeventcategory_none: CategoryStickyThreadUpdateEventWhereInput
  categorystickythreadupdateeventcategory_some: CategoryStickyThreadUpdateEventWhereInput
  categorystickythreadupdateeventcategory_every: CategoryStickyThreadUpdateEventWhereInput
  forumcategoryparent_none: ForumCategoryWhereInput
  forumcategoryparent_some: ForumCategoryWhereInput
  forumcategoryparent_every: ForumCategoryWhereInput
  threadmovedeventoldCategory_none: ThreadMovedEventWhereInput
  threadmovedeventoldCategory_some: ThreadMovedEventWhereInput
  threadmovedeventoldCategory_every: ThreadMovedEventWhereInput
  threadmovedeventnewCategory_none: ThreadMovedEventWhereInput
  threadmovedeventnewCategory_some: ThreadMovedEventWhereInput
  threadmovedeventnewCategory_every: ThreadMovedEventWhereInput
  AND: [ForumCategoryWhereInput!]
  OR: [ForumCategoryWhereInput!]
  NOT: [ForumCategoryWhereInput!]
}

input CategoryCreatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  category: ForumCategoryWhereInput
  AND: [CategoryCreatedEventWhereInput!]
  OR: [CategoryCreatedEventWhereInput!]
  NOT: [CategoryCreatedEventWhereInput!]
}

input CategoryArchivalStatusUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newArchivalStatus_eq: Boolean
  newArchivalStatus_in: [Boolean!]
  category: ForumCategoryWhereInput
  actor: WorkerWhereInput
  AND: [CategoryArchivalStatusUpdatedEventWhereInput!]
  OR: [CategoryArchivalStatusUpdatedEventWhereInput!]
  NOT: [CategoryArchivalStatusUpdatedEventWhereInput!]
}

input CategoryDeletedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  category: ForumCategoryWhereInput
  actor: WorkerWhereInput
  AND: [CategoryDeletedEventWhereInput!]
  OR: [CategoryDeletedEventWhereInput!]
  NOT: [CategoryDeletedEventWhereInput!]
}

input CategoryMembershipOfModeratorUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newCanModerateValue_eq: Boolean
  newCanModerateValue_in: [Boolean!]
  moderator: WorkerWhereInput
  category: ForumCategoryWhereInput
  AND: [CategoryMembershipOfModeratorUpdatedEventWhereInput!]
  OR: [CategoryMembershipOfModeratorUpdatedEventWhereInput!]
  NOT: [CategoryMembershipOfModeratorUpdatedEventWhereInput!]
}

input CategoryStickyThreadUpdateEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  category: ForumCategoryWhereInput
  newStickyThreads_none: ForumThreadWhereInput
  newStickyThreads_some: ForumThreadWhereInput
  newStickyThreads_every: ForumThreadWhereInput
  actor: WorkerWhereInput
  AND: [CategoryStickyThreadUpdateEventWhereInput!]
  OR: [CategoryStickyThreadUpdateEventWhereInput!]
  NOT: [CategoryStickyThreadUpdateEventWhereInput!]
}

input ThreadMovedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  thread: ForumThreadWhereInput
  oldCategory: ForumCategoryWhereInput
  newCategory: ForumCategoryWhereInput
  actor: WorkerWhereInput
  AND: [ThreadMovedEventWhereInput!]
  OR: [ThreadMovedEventWhereInput!]
  NOT: [ThreadMovedEventWhereInput!]
}

input ForumPostWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  text_eq: String
  text_contains: String
  text_startsWith: String
  text_endsWith: String
  text_in: [String!]
  status_json: JSONObject
  isVisible_eq: Boolean
  isVisible_in: [Boolean!]
  origin_json: JSONObject
  author: MembershipWhereInput
  thread: ForumThreadWhereInput
  repliesTo: ForumPostWhereInput
  edits_none: PostTextUpdatedEventWhereInput
  edits_some: PostTextUpdatedEventWhereInput
  edits_every: PostTextUpdatedEventWhereInput
  reactions_none: ForumPostReactionWhereInput
  reactions_some: ForumPostReactionWhereInput
  reactions_every: ForumPostReactionWhereInput
  deletedInEvent: PostDeletedEventWhereInput
  forumpostrepliesTo_none: ForumPostWhereInput
  forumpostrepliesTo_some: ForumPostWhereInput
  forumpostrepliesTo_every: ForumPostWhereInput
  forumthreadinitialPost_none: ForumThreadWhereInput
  forumthreadinitialPost_some: ForumThreadWhereInput
  forumthreadinitialPost_every: ForumThreadWhereInput
  postaddedeventpost_none: PostAddedEventWhereInput
  postaddedeventpost_some: PostAddedEventWhereInput
  postaddedeventpost_every: PostAddedEventWhereInput
  postmoderatedeventpost_none: PostModeratedEventWhereInput
  postmoderatedeventpost_some: PostModeratedEventWhereInput
  postmoderatedeventpost_every: PostModeratedEventWhereInput
  postreactedeventpost_none: PostReactedEventWhereInput
  postreactedeventpost_some: PostReactedEventWhereInput
  postreactedeventpost_every: PostReactedEventWhereInput
  AND: [ForumPostWhereInput!]
  OR: [ForumPostWhereInput!]
  NOT: [ForumPostWhereInput!]
}

input PostTextUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newText_eq: String
  newText_contains: String
  newText_startsWith: String
  newText_endsWith: String
  newText_in: [String!]
  post: ForumPostWhereInput
  AND: [PostTextUpdatedEventWhereInput!]
  OR: [PostTextUpdatedEventWhereInput!]
  NOT: [PostTextUpdatedEventWhereInput!]
}

input ForumPostReactionWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  reaction_eq: PostReaction
  reaction_in: [PostReaction!]
  member: MembershipWhereInput
  post: ForumPostWhereInput
  AND: [ForumPostReactionWhereInput!]
  OR: [ForumPostReactionWhereInput!]
  NOT: [ForumPostReactionWhereInput!]
}

enum PostReaction {
  LIKE
}

input PostDeletedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  rationale_eq: String
  rationale_contains: String
  rationale_startsWith: String
  rationale_endsWith: String
  rationale_in: [String!]
  posts_none: ForumPostWhereInput
  posts_some: ForumPostWhereInput
  posts_every: ForumPostWhereInput
  actor: MembershipWhereInput
  AND: [PostDeletedEventWhereInput!]
  OR: [PostDeletedEventWhereInput!]
  NOT: [PostDeletedEventWhereInput!]
}

input PostAddedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  isEditable_eq: Boolean
  isEditable_in: [Boolean!]
  text_eq: String
  text_contains: String
  text_startsWith: String
  text_endsWith: String
  text_in: [String!]
  post: ForumPostWhereInput
  AND: [PostAddedEventWhereInput!]
  OR: [PostAddedEventWhereInput!]
  NOT: [PostAddedEventWhereInput!]
}

input PostModeratedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  rationale_eq: String
  rationale_contains: String
  rationale_startsWith: String
  rationale_endsWith: String
  rationale_in: [String!]
  post: ForumPostWhereInput
  actor: WorkerWhereInput
  AND: [PostModeratedEventWhereInput!]
  OR: [PostModeratedEventWhereInput!]
  NOT: [PostModeratedEventWhereInput!]
}

input PostReactedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  reactionResult_json: JSONObject
  post: ForumPostWhereInput
  reactingMember: MembershipWhereInput
  AND: [PostReactedEventWhereInput!]
  OR: [PostReactedEventWhereInput!]
  NOT: [PostReactedEventWhereInput!]
}

input ForumPollWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  description_eq: String
  description_contains: String
  description_startsWith: String
  description_endsWith: String
  description_in: [String!]
  endTime_eq: DateTime
  endTime_lt: DateTime
  endTime_lte: DateTime
  endTime_gt: DateTime
  endTime_gte: DateTime
  thread: ForumThreadWhereInput
  pollAlternatives_none: ForumPollAlternativeWhereInput
  pollAlternatives_some: ForumPollAlternativeWhereInput
  pollAlternatives_every: ForumPollAlternativeWhereInput
  AND: [ForumPollWhereInput!]
  OR: [ForumPollWhereInput!]
  NOT: [ForumPollWhereInput!]
}

input ForumPollAlternativeWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  index_eq: Int
  index_gt: Int
  index_gte: Int
  index_lt: Int
  index_lte: Int
  index_in: [Int!]
  text_eq: String
  text_contains: String
  text_startsWith: String
  text_endsWith: String
  text_in: [String!]
  poll: ForumPollWhereInput
  votes_none: VoteOnPollEventWhereInput
  votes_some: VoteOnPollEventWhereInput
  votes_every: VoteOnPollEventWhereInput
  AND: [ForumPollAlternativeWhereInput!]
  OR: [ForumPollAlternativeWhereInput!]
  NOT: [ForumPollAlternativeWhereInput!]
}

input VoteOnPollEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  pollAlternative: ForumPollAlternativeWhereInput
  votingMember: MembershipWhereInput
  AND: [VoteOnPollEventWhereInput!]
  OR: [VoteOnPollEventWhereInput!]
  NOT: [VoteOnPollEventWhereInput!]
}

input ThreadCreatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  title_eq: String
  title_contains: String
  title_startsWith: String
  title_endsWith: String
  title_in: [String!]
  text_eq: String
  text_contains: String
  text_startsWith: String
  text_endsWith: String
  text_in: [String!]
  thread: ForumThreadWhereInput
  AND: [ThreadCreatedEventWhereInput!]
  OR: [ThreadCreatedEventWhereInput!]
  NOT: [ThreadCreatedEventWhereInput!]
}

input ThreadMetadataUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newTitle_eq: String
  newTitle_contains: String
  newTitle_startsWith: String
  newTitle_endsWith: String
  newTitle_in: [String!]
  thread: ForumThreadWhereInput
  AND: [ThreadMetadataUpdatedEventWhereInput!]
  OR: [ThreadMetadataUpdatedEventWhereInput!]
  NOT: [ThreadMetadataUpdatedEventWhereInput!]
}

input ForumThreadTagWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  visibleThreadsCount_eq: Int
  visibleThreadsCount_gt: Int
  visibleThreadsCount_gte: Int
  visibleThreadsCount_lt: Int
  visibleThreadsCount_lte: Int
  visibleThreadsCount_in: [Int!]
  threads_none: ForumThreadWhereInput
  threads_some: ForumThreadWhereInput
  threads_every: ForumThreadWhereInput
  AND: [ForumThreadTagWhereInput!]
  OR: [ForumThreadTagWhereInput!]
  NOT: [ForumThreadTagWhereInput!]
}

input ThreadDeletedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  thread: ForumThreadWhereInput
  AND: [ThreadDeletedEventWhereInput!]
  OR: [ThreadDeletedEventWhereInput!]
  NOT: [ThreadDeletedEventWhereInput!]
}

input ThreadModeratedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  rationale_eq: String
  rationale_contains: String
  rationale_startsWith: String
  rationale_endsWith: String
  rationale_in: [String!]
  thread: ForumThreadWhereInput
  actor: WorkerWhereInput
  AND: [ThreadModeratedEventWhereInput!]
  OR: [ThreadModeratedEventWhereInput!]
  NOT: [ThreadModeratedEventWhereInput!]
}

input BountyContributionWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  contributorId_eq: String
  contributorId_contains: String
  contributorId_startsWith: String
  contributorId_endsWith: String
  contributorId_in: [String!]
  amount_eq: BigInt
  amount_gt: BigInt
  amount_gte: BigInt
  amount_lt: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  bounty: BountyWhereInput
  contributor: MembershipWhereInput
  bountyFundedEvents_none: BountyFundedEventWhereInput
  bountyFundedEvents_some: BountyFundedEventWhereInput
  bountyFundedEvents_every: BountyFundedEventWhereInput
  withdrawnInEvent: BountyFundingWithdrawalEventWhereInput
  AND: [BountyContributionWhereInput!]
  OR: [BountyContributionWhereInput!]
  NOT: [BountyContributionWhereInput!]
}

input BountyFundedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  contribution: BountyContributionWhereInput
  AND: [BountyFundedEventWhereInput!]
  OR: [BountyFundedEventWhereInput!]
  NOT: [BountyFundedEventWhereInput!]
}

input BountyFundingWithdrawalEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  contribution: BountyContributionWhereInput
  AND: [BountyFundingWithdrawalEventWhereInput!]
  OR: [BountyFundingWithdrawalEventWhereInput!]
  NOT: [BountyFundingWithdrawalEventWhereInput!]
}

input BountyEntryWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  stakingAccount_eq: String
  stakingAccount_contains: String
  stakingAccount_startsWith: String
  stakingAccount_endsWith: String
  stakingAccount_in: [String!]
  workSubmitted_eq: Boolean
  workSubmitted_in: [Boolean!]
  status_json: JSONObject
  bounty: BountyWhereInput
  worker: MembershipWhereInput
  announcedInEvent: WorkEntryAnnouncedEventWhereInput
  withdrawnInEvent: WorkEntryWithdrawnEventWhereInput
  slashedInEvent: WorkEntrySlashedEventWhereInput
  works_none: WorkSubmittedEventWhereInput
  works_some: WorkSubmittedEventWhereInput
  works_every: WorkSubmittedEventWhereInput
  cashedOutInEvent: WorkEntrantFundsWithdrawnEventWhereInput
  AND: [BountyEntryWhereInput!]
  OR: [BountyEntryWhereInput!]
  NOT: [BountyEntryWhereInput!]
}

input WorkEntryAnnouncedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  entry: BountyEntryWhereInput
  AND: [WorkEntryAnnouncedEventWhereInput!]
  OR: [WorkEntryAnnouncedEventWhereInput!]
  NOT: [WorkEntryAnnouncedEventWhereInput!]
}

input WorkEntryWithdrawnEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  entry: BountyEntryWhereInput
  AND: [WorkEntryWithdrawnEventWhereInput!]
  OR: [WorkEntryWithdrawnEventWhereInput!]
  NOT: [WorkEntryWithdrawnEventWhereInput!]
}

input WorkEntrySlashedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  entry: BountyEntryWhereInput
  AND: [WorkEntrySlashedEventWhereInput!]
  OR: [WorkEntrySlashedEventWhereInput!]
  NOT: [WorkEntrySlashedEventWhereInput!]
}

input WorkSubmittedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  title_eq: String
  title_contains: String
  title_startsWith: String
  title_endsWith: String
  title_in: [String!]
  description_eq: String
  description_contains: String
  description_startsWith: String
  description_endsWith: String
  description_in: [String!]
  bounty: BountyWhereInput
  entry: BountyEntryWhereInput
  AND: [WorkSubmittedEventWhereInput!]
  OR: [WorkSubmittedEventWhereInput!]
  NOT: [WorkSubmittedEventWhereInput!]
}

input WorkEntrantFundsWithdrawnEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  entry: BountyEntryWhereInput
  AND: [WorkEntrantFundsWithdrawnEventWhereInput!]
  OR: [WorkEntrantFundsWithdrawnEventWhereInput!]
  NOT: [WorkEntrantFundsWithdrawnEventWhereInput!]
}

input BountyCreatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  bounty: BountyWhereInput
  AND: [BountyCreatedEventWhereInput!]
  OR: [BountyCreatedEventWhereInput!]
  NOT: [BountyCreatedEventWhereInput!]
}

input BountyCanceledEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  bounty: BountyWhereInput
  AND: [BountyCanceledEventWhereInput!]
  OR: [BountyCanceledEventWhereInput!]
  NOT: [BountyCanceledEventWhereInput!]
}

input BountyVetoedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  bounty: BountyWhereInput
  AND: [BountyVetoedEventWhereInput!]
  OR: [BountyVetoedEventWhereInput!]
  NOT: [BountyVetoedEventWhereInput!]
}

input BountyMaxFundingReachedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  bounty: BountyWhereInput
  AND: [BountyMaxFundingReachedEventWhereInput!]
  OR: [BountyMaxFundingReachedEventWhereInput!]
  NOT: [BountyMaxFundingReachedEventWhereInput!]
}

input BountyRemovedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  bounty: BountyWhereInput
  AND: [BountyRemovedEventWhereInput!]
  OR: [BountyRemovedEventWhereInput!]
  NOT: [BountyRemovedEventWhereInput!]
}

input OracleJudgmentSubmittedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  rationale_eq: String
  rationale_contains: String
  rationale_startsWith: String
  rationale_endsWith: String
  rationale_in: [String!]
  bounty: BountyWhereInput
  AND: [OracleJudgmentSubmittedEventWhereInput!]
  OR: [OracleJudgmentSubmittedEventWhereInput!]
  NOT: [OracleJudgmentSubmittedEventWhereInput!]
}

input BountyCreatorCherryWithdrawalEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  bounty: BountyWhereInput
  AND: [BountyCreatorCherryWithdrawalEventWhereInput!]
  OR: [BountyCreatorCherryWithdrawalEventWhereInput!]
  NOT: [BountyCreatorCherryWithdrawalEventWhereInput!]
}

input ChannelWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  rewardAccount_eq: String
  rewardAccount_contains: String
  rewardAccount_startsWith: String
  rewardAccount_endsWith: String
  rewardAccount_in: [String!]
  title_eq: String
  title_contains: String
  title_startsWith: String
  title_endsWith: String
  title_in: [String!]
  description_eq: String
  description_contains: String
  description_startsWith: String
  description_endsWith: String
  description_in: [String!]
  activeVideosCounter_eq: Int
  activeVideosCounter_gt: Int
  activeVideosCounter_gte: Int
  activeVideosCounter_lt: Int
  activeVideosCounter_lte: Int
  activeVideosCounter_in: [Int!]
  isPublic_eq: Boolean
  isPublic_in: [Boolean!]
  isCensored_eq: Boolean
  isCensored_in: [Boolean!]
  createdInBlock_eq: Int
  createdInBlock_gt: Int
  createdInBlock_gte: Int
  createdInBlock_lt: Int
  createdInBlock_lte: Int
  createdInBlock_in: [Int!]
  ownerMember: MembershipWhereInput
  ownerCuratorGroup: CuratorGroupWhereInput
  category: ChannelCategoryWhereInput
  coverPhoto: StorageDataObjectWhereInput
  avatarPhoto: StorageDataObjectWhereInput
  language: LanguageWhereInput
  videos_none: VideoWhereInput
  videos_some: VideoWhereInput
  videos_every: VideoWhereInput
  collaborators_none: MembershipWhereInput
  collaborators_some: MembershipWhereInput
  collaborators_every: MembershipWhereInput
  bannedMembers_none: MembershipWhereInput
  bannedMembers_some: MembershipWhereInput
  bannedMembers_every: MembershipWhereInput
  channelNftCollectors_none: ChannelNftCollectorsWhereInput
  channelNftCollectors_some: ChannelNftCollectorsWhereInput
  channelNftCollectors_every: ChannelNftCollectorsWhereInput
  commentcreatedeventvideoChannel_none: CommentCreatedEventWhereInput
  commentcreatedeventvideoChannel_some: CommentCreatedEventWhereInput
  commentcreatedeventvideoChannel_every: CommentCreatedEventWhereInput
  commentdeletedeventvideoChannel_none: CommentDeletedEventWhereInput
  commentdeletedeventvideoChannel_some: CommentDeletedEventWhereInput
  commentdeletedeventvideoChannel_every: CommentDeletedEventWhereInput
  commentmoderatedeventvideoChannel_none: CommentModeratedEventWhereInput
  commentmoderatedeventvideoChannel_some: CommentModeratedEventWhereInput
  commentmoderatedeventvideoChannel_every: CommentModeratedEventWhereInput
  commentpinnedeventvideoChannel_none: CommentPinnedEventWhereInput
  commentpinnedeventvideoChannel_some: CommentPinnedEventWhereInput
  commentpinnedeventvideoChannel_every: CommentPinnedEventWhereInput
  commentreactedeventvideoChannel_none: CommentReactedEventWhereInput
  commentreactedeventvideoChannel_some: CommentReactedEventWhereInput
  commentreactedeventvideoChannel_every: CommentReactedEventWhereInput
  commenttextupdatedeventvideoChannel_none: CommentTextUpdatedEventWhereInput
  commenttextupdatedeventvideoChannel_some: CommentTextUpdatedEventWhereInput
  commenttextupdatedeventvideoChannel_every: CommentTextUpdatedEventWhereInput
  memberbannedfromchanneleventchannel_none: MemberBannedFromChannelEventWhereInput
  memberbannedfromchanneleventchannel_some: MemberBannedFromChannelEventWhereInput
  memberbannedfromchanneleventchannel_every: MemberBannedFromChannelEventWhereInput
  ownednftcreatorChannel_none: OwnedNftWhereInput
  ownednftcreatorChannel_some: OwnedNftWhereInput
  ownednftcreatorChannel_every: OwnedNftWhereInput
  videoreactedeventvideoChannel_none: VideoReactedEventWhereInput
  videoreactedeventvideoChannel_some: VideoReactedEventWhereInput
  videoreactedeventvideoChannel_every: VideoReactedEventWhereInput
  AND: [ChannelWhereInput!]
  OR: [ChannelWhereInput!]
  NOT: [ChannelWhereInput!]
}

input CuratorGroupWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  isActive_eq: Boolean
  isActive_in: [Boolean!]
  curators_none: CuratorWhereInput
  curators_some: CuratorWhereInput
  curators_every: CuratorWhereInput
  channels_none: ChannelWhereInput
  channels_some: ChannelWhereInput
  channels_every: ChannelWhereInput
  nftCollectorInChannels_none: ChannelNftCollectorsWhereInput
  nftCollectorInChannels_some: ChannelNftCollectorsWhereInput
  nftCollectorInChannels_every: ChannelNftCollectorsWhereInput
  auctionbidcanceledeventownerCuratorGroup_none: AuctionBidCanceledEventWhereInput
  auctionbidcanceledeventownerCuratorGroup_some: AuctionBidCanceledEventWhereInput
  auctionbidcanceledeventownerCuratorGroup_every: AuctionBidCanceledEventWhereInput
  auctionbidmadeeventownerCuratorGroup_none: AuctionBidMadeEventWhereInput
  auctionbidmadeeventownerCuratorGroup_some: AuctionBidMadeEventWhereInput
  auctionbidmadeeventownerCuratorGroup_every: AuctionBidMadeEventWhereInput
  auctioncanceledeventownerCuratorGroup_none: AuctionCanceledEventWhereInput
  auctioncanceledeventownerCuratorGroup_some: AuctionCanceledEventWhereInput
  auctioncanceledeventownerCuratorGroup_every: AuctionCanceledEventWhereInput
  bidmadecompletingauctioneventownerCuratorGroup_none: BidMadeCompletingAuctionEventWhereInput
  bidmadecompletingauctioneventownerCuratorGroup_some: BidMadeCompletingAuctionEventWhereInput
  bidmadecompletingauctioneventownerCuratorGroup_every: BidMadeCompletingAuctionEventWhereInput
  buynowcanceledeventownerCuratorGroup_none: BuyNowCanceledEventWhereInput
  buynowcanceledeventownerCuratorGroup_some: BuyNowCanceledEventWhereInput
  buynowcanceledeventownerCuratorGroup_every: BuyNowCanceledEventWhereInput
  buynowpriceupdatedeventownerCuratorGroup_none: BuyNowPriceUpdatedEventWhereInput
  buynowpriceupdatedeventownerCuratorGroup_some: BuyNowPriceUpdatedEventWhereInput
  buynowpriceupdatedeventownerCuratorGroup_every: BuyNowPriceUpdatedEventWhereInput
  englishauctionsettledeventownerCuratorGroup_none: EnglishAuctionSettledEventWhereInput
  englishauctionsettledeventownerCuratorGroup_some: EnglishAuctionSettledEventWhereInput
  englishauctionsettledeventownerCuratorGroup_every: EnglishAuctionSettledEventWhereInput
  englishauctionstartedeventownerCuratorGroup_none: EnglishAuctionStartedEventWhereInput
  englishauctionstartedeventownerCuratorGroup_some: EnglishAuctionStartedEventWhereInput
  englishauctionstartedeventownerCuratorGroup_every: EnglishAuctionStartedEventWhereInput
  nftboughteventownerCuratorGroup_none: NftBoughtEventWhereInput
  nftboughteventownerCuratorGroup_some: NftBoughtEventWhereInput
  nftboughteventownerCuratorGroup_every: NftBoughtEventWhereInput
  nftissuedeventownerCuratorGroup_none: NftIssuedEventWhereInput
  nftissuedeventownerCuratorGroup_some: NftIssuedEventWhereInput
  nftissuedeventownerCuratorGroup_every: NftIssuedEventWhereInput
  nftsellordermadeeventownerCuratorGroup_none: NftSellOrderMadeEventWhereInput
  nftsellordermadeeventownerCuratorGroup_some: NftSellOrderMadeEventWhereInput
  nftsellordermadeeventownerCuratorGroup_every: NftSellOrderMadeEventWhereInput
  nftslingedbacktotheoriginalartisteventownerCuratorGroup_none: NftSlingedBackToTheOriginalArtistEventWhereInput
  nftslingedbacktotheoriginalartisteventownerCuratorGroup_some: NftSlingedBackToTheOriginalArtistEventWhereInput
  nftslingedbacktotheoriginalartisteventownerCuratorGroup_every: NftSlingedBackToTheOriginalArtistEventWhereInput
  offeracceptedeventownerCuratorGroup_none: OfferAcceptedEventWhereInput
  offeracceptedeventownerCuratorGroup_some: OfferAcceptedEventWhereInput
  offeracceptedeventownerCuratorGroup_every: OfferAcceptedEventWhereInput
  offercanceledeventownerCuratorGroup_none: OfferCanceledEventWhereInput
  offercanceledeventownerCuratorGroup_some: OfferCanceledEventWhereInput
  offercanceledeventownerCuratorGroup_every: OfferCanceledEventWhereInput
  offerstartedeventownerCuratorGroup_none: OfferStartedEventWhereInput
  offerstartedeventownerCuratorGroup_some: OfferStartedEventWhereInput
  offerstartedeventownerCuratorGroup_every: OfferStartedEventWhereInput
  openauctionbidacceptedeventownerCuratorGroup_none: OpenAuctionBidAcceptedEventWhereInput
  openauctionbidacceptedeventownerCuratorGroup_some: OpenAuctionBidAcceptedEventWhereInput
  openauctionbidacceptedeventownerCuratorGroup_every: OpenAuctionBidAcceptedEventWhereInput
  openauctionstartedeventownerCuratorGroup_none: OpenAuctionStartedEventWhereInput
  openauctionstartedeventownerCuratorGroup_some: OpenAuctionStartedEventWhereInput
  openauctionstartedeventownerCuratorGroup_every: OpenAuctionStartedEventWhereInput
  ownednftownerCuratorGroup_none: OwnedNftWhereInput
  ownednftownerCuratorGroup_some: OwnedNftWhereInput
  ownednftownerCuratorGroup_every: OwnedNftWhereInput
  AND: [CuratorGroupWhereInput!]
  OR: [CuratorGroupWhereInput!]
  NOT: [CuratorGroupWhereInput!]
}

input CuratorWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  dummy_eq: Int
  dummy_gt: Int
  dummy_gte: Int
  dummy_lt: Int
  dummy_lte: Int
  dummy_in: [Int!]
  curatorGroups_none: CuratorGroupWhereInput
  curatorGroups_some: CuratorGroupWhereInput
  curatorGroups_every: CuratorGroupWhereInput
  AND: [CuratorWhereInput!]
  OR: [CuratorWhereInput!]
  NOT: [CuratorWhereInput!]
}

input ChannelNftCollectorsWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  amount_eq: Int
  amount_gt: Int
  amount_gte: Int
  amount_lt: Int
  amount_lte: Int
  amount_in: [Int!]
  lastIncreaseAt_eq: DateTime
  lastIncreaseAt_lt: DateTime
  lastIncreaseAt_lte: DateTime
  lastIncreaseAt_gt: DateTime
  lastIncreaseAt_gte: DateTime
  channel: ChannelWhereInput
  member: MembershipWhereInput
  curatorGroup: CuratorGroupWhereInput
  AND: [ChannelNftCollectorsWhereInput!]
  OR: [ChannelNftCollectorsWhereInput!]
  NOT: [ChannelNftCollectorsWhereInput!]
}

input AuctionBidCanceledEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  member: MembershipWhereInput
  video: VideoWhereInput
  ownerMember: MembershipWhereInput
  ownerCuratorGroup: CuratorGroupWhereInput
  AND: [AuctionBidCanceledEventWhereInput!]
  OR: [AuctionBidCanceledEventWhereInput!]
  NOT: [AuctionBidCanceledEventWhereInput!]
}

input VideoWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  title_eq: String
  title_contains: String
  title_startsWith: String
  title_endsWith: String
  title_in: [String!]
  description_eq: String
  description_contains: String
  description_startsWith: String
  description_endsWith: String
  description_in: [String!]
  duration_eq: Int
  duration_gt: Int
  duration_gte: Int
  duration_lt: Int
  duration_lte: Int
  duration_in: [Int!]
  hasMarketing_eq: Boolean
  hasMarketing_in: [Boolean!]
  publishedBeforeJoystream_eq: DateTime
  publishedBeforeJoystream_lt: DateTime
  publishedBeforeJoystream_lte: DateTime
  publishedBeforeJoystream_gt: DateTime
  publishedBeforeJoystream_gte: DateTime
  isPublic_eq: Boolean
  isPublic_in: [Boolean!]
  isCensored_eq: Boolean
  isCensored_in: [Boolean!]
  isExplicit_eq: Boolean
  isExplicit_in: [Boolean!]
  createdInBlock_eq: Int
  createdInBlock_gt: Int
  createdInBlock_gte: Int
  createdInBlock_lt: Int
  createdInBlock_lte: Int
  createdInBlock_in: [Int!]
  isFeatured_eq: Boolean
  isFeatured_in: [Boolean!]
  isCommentSectionEnabled_eq: Boolean
  isCommentSectionEnabled_in: [Boolean!]
  commentsCount_eq: Int
  commentsCount_gt: Int
  commentsCount_gte: Int
  commentsCount_lt: Int
  commentsCount_lte: Int
  commentsCount_in: [Int!]
  isReactionFeatureEnabled_eq: Boolean
  isReactionFeatureEnabled_in: [Boolean!]
  reactionsCount_eq: Int
  reactionsCount_gt: Int
  reactionsCount_gte: Int
  reactionsCount_lt: Int
  reactionsCount_lte: Int
  reactionsCount_in: [Int!]
  channel: ChannelWhereInput
  category: VideoCategoryWhereInput
  thumbnailPhoto: StorageDataObjectWhereInput
  language: LanguageWhereInput
  nft: OwnedNftWhereInput
  license: LicenseWhereInput
  media: StorageDataObjectWhereInput
  mediaMetadata: VideoMediaMetadataWhereInput
  pinnedComment: CommentWhereInput
  comments_none: CommentWhereInput
  comments_some: CommentWhereInput
  comments_every: CommentWhereInput
  reactions_none: VideoReactionWhereInput
  reactions_some: VideoReactionWhereInput
  reactions_every: VideoReactionWhereInput
  reactionsCountByReactionId_none: VideoReactionsCountByReactionTypeWhereInput
  reactionsCountByReactionId_some: VideoReactionsCountByReactionTypeWhereInput
  reactionsCountByReactionId_every: VideoReactionsCountByReactionTypeWhereInput
  auctionbidcanceledeventvideo_none: AuctionBidCanceledEventWhereInput
  auctionbidcanceledeventvideo_some: AuctionBidCanceledEventWhereInput
  auctionbidcanceledeventvideo_every: AuctionBidCanceledEventWhereInput
  auctionbidmadeeventvideo_none: AuctionBidMadeEventWhereInput
  auctionbidmadeeventvideo_some: AuctionBidMadeEventWhereInput
  auctionbidmadeeventvideo_every: AuctionBidMadeEventWhereInput
  auctioncanceledeventvideo_none: AuctionCanceledEventWhereInput
  auctioncanceledeventvideo_some: AuctionCanceledEventWhereInput
  auctioncanceledeventvideo_every: AuctionCanceledEventWhereInput
  bidmadecompletingauctioneventvideo_none: BidMadeCompletingAuctionEventWhereInput
  bidmadecompletingauctioneventvideo_some: BidMadeCompletingAuctionEventWhereInput
  bidmadecompletingauctioneventvideo_every: BidMadeCompletingAuctionEventWhereInput
  buynowcanceledeventvideo_none: BuyNowCanceledEventWhereInput
  buynowcanceledeventvideo_some: BuyNowCanceledEventWhereInput
  buynowcanceledeventvideo_every: BuyNowCanceledEventWhereInput
  buynowpriceupdatedeventvideo_none: BuyNowPriceUpdatedEventWhereInput
  buynowpriceupdatedeventvideo_some: BuyNowPriceUpdatedEventWhereInput
  buynowpriceupdatedeventvideo_every: BuyNowPriceUpdatedEventWhereInput
  commentcreatedeventvideo_none: CommentCreatedEventWhereInput
  commentcreatedeventvideo_some: CommentCreatedEventWhereInput
  commentcreatedeventvideo_every: CommentCreatedEventWhereInput
  commentdeletedeventvideo_none: CommentDeletedEventWhereInput
  commentdeletedeventvideo_some: CommentDeletedEventWhereInput
  commentdeletedeventvideo_every: CommentDeletedEventWhereInput
  commentmoderatedeventvideo_none: CommentModeratedEventWhereInput
  commentmoderatedeventvideo_some: CommentModeratedEventWhereInput
  commentmoderatedeventvideo_every: CommentModeratedEventWhereInput
  commentpinnedeventvideo_none: CommentPinnedEventWhereInput
  commentpinnedeventvideo_some: CommentPinnedEventWhereInput
  commentpinnedeventvideo_every: CommentPinnedEventWhereInput
  commentreactedeventvideo_none: CommentReactedEventWhereInput
  commentreactedeventvideo_some: CommentReactedEventWhereInput
  commentreactedeventvideo_every: CommentReactedEventWhereInput
  commentreactionvideo_none: CommentReactionWhereInput
  commentreactionvideo_some: CommentReactionWhereInput
  commentreactionvideo_every: CommentReactionWhereInput
  commentreactionscountbyreactionidvideo_none: CommentReactionsCountByReactionIdWhereInput
  commentreactionscountbyreactionidvideo_some: CommentReactionsCountByReactionIdWhereInput
  commentreactionscountbyreactionidvideo_every: CommentReactionsCountByReactionIdWhereInput
  commenttextupdatedeventvideo_none: CommentTextUpdatedEventWhereInput
  commenttextupdatedeventvideo_some: CommentTextUpdatedEventWhereInput
  commenttextupdatedeventvideo_every: CommentTextUpdatedEventWhereInput
  englishauctionsettledeventvideo_none: EnglishAuctionSettledEventWhereInput
  englishauctionsettledeventvideo_some: EnglishAuctionSettledEventWhereInput
  englishauctionsettledeventvideo_every: EnglishAuctionSettledEventWhereInput
  englishauctionstartedeventvideo_none: EnglishAuctionStartedEventWhereInput
  englishauctionstartedeventvideo_some: EnglishAuctionStartedEventWhereInput
  englishauctionstartedeventvideo_every: EnglishAuctionStartedEventWhereInput
  nftboughteventvideo_none: NftBoughtEventWhereInput
  nftboughteventvideo_some: NftBoughtEventWhereInput
  nftboughteventvideo_every: NftBoughtEventWhereInput
  nftissuedeventvideo_none: NftIssuedEventWhereInput
  nftissuedeventvideo_some: NftIssuedEventWhereInput
  nftissuedeventvideo_every: NftIssuedEventWhereInput
  nftsellordermadeeventvideo_none: NftSellOrderMadeEventWhereInput
  nftsellordermadeeventvideo_some: NftSellOrderMadeEventWhereInput
  nftsellordermadeeventvideo_every: NftSellOrderMadeEventWhereInput
  nftslingedbacktotheoriginalartisteventvideo_none: NftSlingedBackToTheOriginalArtistEventWhereInput
  nftslingedbacktotheoriginalartisteventvideo_some: NftSlingedBackToTheOriginalArtistEventWhereInput
  nftslingedbacktotheoriginalartisteventvideo_every: NftSlingedBackToTheOriginalArtistEventWhereInput
  offeracceptedeventvideo_none: OfferAcceptedEventWhereInput
  offeracceptedeventvideo_some: OfferAcceptedEventWhereInput
  offeracceptedeventvideo_every: OfferAcceptedEventWhereInput
  offercanceledeventvideo_none: OfferCanceledEventWhereInput
  offercanceledeventvideo_some: OfferCanceledEventWhereInput
  offercanceledeventvideo_every: OfferCanceledEventWhereInput
  offerstartedeventvideo_none: OfferStartedEventWhereInput
  offerstartedeventvideo_some: OfferStartedEventWhereInput
  offerstartedeventvideo_every: OfferStartedEventWhereInput
  openauctionbidacceptedeventvideo_none: OpenAuctionBidAcceptedEventWhereInput
  openauctionbidacceptedeventvideo_some: OpenAuctionBidAcceptedEventWhereInput
  openauctionbidacceptedeventvideo_every: OpenAuctionBidAcceptedEventWhereInput
  openauctionstartedeventvideo_none: OpenAuctionStartedEventWhereInput
  openauctionstartedeventvideo_some: OpenAuctionStartedEventWhereInput
  openauctionstartedeventvideo_every: OpenAuctionStartedEventWhereInput
  videoreactedeventvideo_none: VideoReactedEventWhereInput
  videoreactedeventvideo_some: VideoReactedEventWhereInput
  videoreactedeventvideo_every: VideoReactedEventWhereInput
  videoreactionspreferenceeventvideo_none: VideoReactionsPreferenceEventWhereInput
  videoreactionspreferenceeventvideo_some: VideoReactionsPreferenceEventWhereInput
  videoreactionspreferenceeventvideo_every: VideoReactionsPreferenceEventWhereInput
  AND: [VideoWhereInput!]
  OR: [VideoWhereInput!]
  NOT: [VideoWhereInput!]
}

input VideoCategoryWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  name_eq: String
  name_contains: String
  name_startsWith: String
  name_endsWith: String
  name_in: [String!]
  activeVideosCounter_eq: Int
  activeVideosCounter_gt: Int
  activeVideosCounter_gte: Int
  activeVideosCounter_lt: Int
  activeVideosCounter_lte: Int
  activeVideosCounter_in: [Int!]
  createdInBlock_eq: Int
  createdInBlock_gt: Int
  createdInBlock_gte: Int
  createdInBlock_lt: Int
  createdInBlock_lte: Int
  createdInBlock_in: [Int!]
  videos_none: VideoWhereInput
  videos_some: VideoWhereInput
  videos_every: VideoWhereInput
  AND: [VideoCategoryWhereInput!]
  OR: [VideoCategoryWhereInput!]
  NOT: [VideoCategoryWhereInput!]
}

input StorageDataObjectWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  isAccepted_eq: Boolean
  isAccepted_in: [Boolean!]
  size_eq: BigInt
  size_gt: BigInt
  size_gte: BigInt
  size_lt: BigInt
  size_lte: BigInt
  size_in: [BigInt!]
  ipfsHash_eq: String
  ipfsHash_contains: String
  ipfsHash_startsWith: String
  ipfsHash_endsWith: String
  ipfsHash_in: [String!]
  type_json: JSONObject
  deletionPrize_eq: BigInt
  deletionPrize_gt: BigInt
  deletionPrize_gte: BigInt
  deletionPrize_lt: BigInt
  deletionPrize_lte: BigInt
  deletionPrize_in: [BigInt!]
  unsetAt_eq: DateTime
  unsetAt_lt: DateTime
  unsetAt_lte: DateTime
  unsetAt_gt: DateTime
  unsetAt_gte: DateTime
  storageBag: StorageBagWhereInput
  videoThumbnail: VideoWhereInput
  videoMedia: VideoWhereInput
  channelcoverPhoto_none: ChannelWhereInput
  channelcoverPhoto_some: ChannelWhereInput
  channelcoverPhoto_every: ChannelWhereInput
  channelavatarPhoto_none: ChannelWhereInput
  channelavatarPhoto_some: ChannelWhereInput
  channelavatarPhoto_every: ChannelWhereInput
  AND: [StorageDataObjectWhereInput!]
  OR: [StorageDataObjectWhereInput!]
  NOT: [StorageDataObjectWhereInput!]
}

input StorageBagWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  owner_json: JSONObject
  objects_none: StorageDataObjectWhereInput
  objects_some: StorageDataObjectWhereInput
  objects_every: StorageDataObjectWhereInput
  storageBuckets_none: StorageBucketWhereInput
  storageBuckets_some: StorageBucketWhereInput
  storageBuckets_every: StorageBucketWhereInput
  distributionBuckets_none: DistributionBucketWhereInput
  distributionBuckets_some: DistributionBucketWhereInput
  distributionBuckets_every: DistributionBucketWhereInput
  AND: [StorageBagWhereInput!]
  OR: [StorageBagWhereInput!]
  NOT: [StorageBagWhereInput!]
}

input StorageBucketWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  operatorStatus_json: JSONObject
  acceptingNewBags_eq: Boolean
  acceptingNewBags_in: [Boolean!]
  dataObjectsSizeLimit_eq: BigInt
  dataObjectsSizeLimit_gt: BigInt
  dataObjectsSizeLimit_gte: BigInt
  dataObjectsSizeLimit_lt: BigInt
  dataObjectsSizeLimit_lte: BigInt
  dataObjectsSizeLimit_in: [BigInt!]
  dataObjectCountLimit_eq: BigInt
  dataObjectCountLimit_gt: BigInt
  dataObjectCountLimit_gte: BigInt
  dataObjectCountLimit_lt: BigInt
  dataObjectCountLimit_lte: BigInt
  dataObjectCountLimit_in: [BigInt!]
  dataObjectsCount_eq: BigInt
  dataObjectsCount_gt: BigInt
  dataObjectsCount_gte: BigInt
  dataObjectsCount_lt: BigInt
  dataObjectsCount_lte: BigInt
  dataObjectsCount_in: [BigInt!]
  dataObjectsSize_eq: BigInt
  dataObjectsSize_gt: BigInt
  dataObjectsSize_gte: BigInt
  dataObjectsSize_lt: BigInt
  dataObjectsSize_lte: BigInt
  dataObjectsSize_in: [BigInt!]
  operatorMetadata: StorageBucketOperatorMetadataWhereInput
  bags_none: StorageBagWhereInput
  bags_some: StorageBagWhereInput
  bags_every: StorageBagWhereInput
  AND: [StorageBucketWhereInput!]
  OR: [StorageBucketWhereInput!]
  NOT: [StorageBucketWhereInput!]
}

input StorageBucketOperatorMetadataWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  nodeEndpoint_eq: String
  nodeEndpoint_contains: String
  nodeEndpoint_startsWith: String
  nodeEndpoint_endsWith: String
  nodeEndpoint_in: [String!]
  extra_eq: String
  extra_contains: String
  extra_startsWith: String
  extra_endsWith: String
  extra_in: [String!]
  nodeLocation: NodeLocationMetadataWhereInput
  storagebucketoperatorMetadata_none: StorageBucketWhereInput
  storagebucketoperatorMetadata_some: StorageBucketWhereInput
  storagebucketoperatorMetadata_every: StorageBucketWhereInput
  AND: [StorageBucketOperatorMetadataWhereInput!]
  OR: [StorageBucketOperatorMetadataWhereInput!]
  NOT: [StorageBucketOperatorMetadataWhereInput!]
}

input NodeLocationMetadataWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  countryCode_eq: String
  countryCode_contains: String
  countryCode_startsWith: String
  countryCode_endsWith: String
  countryCode_in: [String!]
  city_eq: String
  city_contains: String
  city_startsWith: String
  city_endsWith: String
  city_in: [String!]
  coordinates: GeoCoordinatesWhereInput
  distributionbucketoperatormetadatanodeLocation_none: DistributionBucketOperatorMetadataWhereInput
  distributionbucketoperatormetadatanodeLocation_some: DistributionBucketOperatorMetadataWhereInput
  distributionbucketoperatormetadatanodeLocation_every: DistributionBucketOperatorMetadataWhereInput
  storagebucketoperatormetadatanodeLocation_none: StorageBucketOperatorMetadataWhereInput
  storagebucketoperatormetadatanodeLocation_some: StorageBucketOperatorMetadataWhereInput
  storagebucketoperatormetadatanodeLocation_every: StorageBucketOperatorMetadataWhereInput
  AND: [NodeLocationMetadataWhereInput!]
  OR: [NodeLocationMetadataWhereInput!]
  NOT: [NodeLocationMetadataWhereInput!]
}

input GeoCoordinatesWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  latitude_eq: Float
  latitude_gt: Float
  latitude_gte: Float
  latitude_lt: Float
  latitude_lte: Float
  latitude_in: [Float!]
  longitude_eq: Float
  longitude_gt: Float
  longitude_gte: Float
  longitude_lt: Float
  longitude_lte: Float
  longitude_in: [Float!]
  nodelocationmetadatacoordinates_none: NodeLocationMetadataWhereInput
  nodelocationmetadatacoordinates_some: NodeLocationMetadataWhereInput
  nodelocationmetadatacoordinates_every: NodeLocationMetadataWhereInput
  AND: [GeoCoordinatesWhereInput!]
  OR: [GeoCoordinatesWhereInput!]
  NOT: [GeoCoordinatesWhereInput!]
}

input DistributionBucketOperatorMetadataWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  nodeEndpoint_eq: String
  nodeEndpoint_contains: String
  nodeEndpoint_startsWith: String
  nodeEndpoint_endsWith: String
  nodeEndpoint_in: [String!]
  extra_eq: String
  extra_contains: String
  extra_startsWith: String
  extra_endsWith: String
  extra_in: [String!]
  nodeLocation: NodeLocationMetadataWhereInput
  distributionbucketoperatormetadata_none: DistributionBucketOperatorWhereInput
  distributionbucketoperatormetadata_some: DistributionBucketOperatorWhereInput
  distributionbucketoperatormetadata_every: DistributionBucketOperatorWhereInput
  AND: [DistributionBucketOperatorMetadataWhereInput!]
  OR: [DistributionBucketOperatorMetadataWhereInput!]
  NOT: [DistributionBucketOperatorMetadataWhereInput!]
}

input DistributionBucketOperatorWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  workerId_eq: Int
  workerId_gt: Int
  workerId_gte: Int
  workerId_lt: Int
  workerId_lte: Int
  workerId_in: [Int!]
  status_eq: DistributionBucketOperatorStatus
  status_in: [DistributionBucketOperatorStatus!]
  distributionBucket: DistributionBucketWhereInput
  metadata: DistributionBucketOperatorMetadataWhereInput
  AND: [DistributionBucketOperatorWhereInput!]
  OR: [DistributionBucketOperatorWhereInput!]
  NOT: [DistributionBucketOperatorWhereInput!]
}

enum DistributionBucketOperatorStatus {
  INVITED
  ACTIVE
}

input DistributionBucketWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  bucketIndex_eq: Int
  bucketIndex_gt: Int
  bucketIndex_gte: Int
  bucketIndex_lt: Int
  bucketIndex_lte: Int
  bucketIndex_in: [Int!]
  acceptingNewBags_eq: Boolean
  acceptingNewBags_in: [Boolean!]
  distributing_eq: Boolean
  distributing_in: [Boolean!]
  family: DistributionBucketFamilyWhereInput
  operators_none: DistributionBucketOperatorWhereInput
  operators_some: DistributionBucketOperatorWhereInput
  operators_every: DistributionBucketOperatorWhereInput
  bags_none: StorageBagWhereInput
  bags_some: StorageBagWhereInput
  bags_every: StorageBagWhereInput
  AND: [DistributionBucketWhereInput!]
  OR: [DistributionBucketWhereInput!]
  NOT: [DistributionBucketWhereInput!]
}

input DistributionBucketFamilyWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  metadata: DistributionBucketFamilyMetadataWhereInput
  buckets_none: DistributionBucketWhereInput
  buckets_some: DistributionBucketWhereInput
  buckets_every: DistributionBucketWhereInput
  AND: [DistributionBucketFamilyWhereInput!]
  OR: [DistributionBucketFamilyWhereInput!]
  NOT: [DistributionBucketFamilyWhereInput!]
}

input DistributionBucketFamilyMetadataWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  region_eq: String
  region_contains: String
  region_startsWith: String
  region_endsWith: String
  region_in: [String!]
  description_eq: String
  description_contains: String
  description_startsWith: String
  description_endsWith: String
  description_in: [String!]
  latencyTestTargets_containsAll: [String!]
  latencyTestTargets_containsNone: [String!]
  latencyTestTargets_containsAny: [String!]
  areas_none: DistributionBucketFamilyGeographicAreaWhereInput
  areas_some: DistributionBucketFamilyGeographicAreaWhereInput
  areas_every: DistributionBucketFamilyGeographicAreaWhereInput
  distributionbucketfamilymetadata_none: DistributionBucketFamilyWhereInput
  distributionbucketfamilymetadata_some: DistributionBucketFamilyWhereInput
  distributionbucketfamilymetadata_every: DistributionBucketFamilyWhereInput
  AND: [DistributionBucketFamilyMetadataWhereInput!]
  OR: [DistributionBucketFamilyMetadataWhereInput!]
  NOT: [DistributionBucketFamilyMetadataWhereInput!]
}

input DistributionBucketFamilyGeographicAreaWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  area_json: JSONObject
  distributionBucketFamilyMetadata: DistributionBucketFamilyMetadataWhereInput
  AND: [DistributionBucketFamilyGeographicAreaWhereInput!]
  OR: [DistributionBucketFamilyGeographicAreaWhereInput!]
  NOT: [DistributionBucketFamilyGeographicAreaWhereInput!]
}

input LanguageWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  iso_eq: String
  iso_contains: String
  iso_startsWith: String
  iso_endsWith: String
  iso_in: [String!]
  createdInBlock_eq: Int
  createdInBlock_gt: Int
  createdInBlock_gte: Int
  createdInBlock_lt: Int
  createdInBlock_lte: Int
  createdInBlock_in: [Int!]
  channellanguage_none: ChannelWhereInput
  channellanguage_some: ChannelWhereInput
  channellanguage_every: ChannelWhereInput
  videolanguage_none: VideoWhereInput
  videolanguage_some: VideoWhereInput
  videolanguage_every: VideoWhereInput
  AND: [LanguageWhereInput!]
  OR: [LanguageWhereInput!]
  NOT: [LanguageWhereInput!]
}

input OwnedNftWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  metadata_eq: String
  metadata_contains: String
  metadata_startsWith: String
  metadata_endsWith: String
  metadata_in: [String!]
  transactionalStatus_json: JSONObject
  creatorRoyalty_eq: Float
  creatorRoyalty_gt: Float
  creatorRoyalty_gte: Float
  creatorRoyalty_lt: Float
  creatorRoyalty_lte: Float
  creatorRoyalty_in: [Float!]
  isOwnedByChannel_eq: Boolean
  isOwnedByChannel_in: [Boolean!]
  lastSalePrice_eq: BigInt
  lastSalePrice_gt: BigInt
  lastSalePrice_gte: BigInt
  lastSalePrice_lt: BigInt
  lastSalePrice_lte: BigInt
  lastSalePrice_in: [BigInt!]
  lastSaleDate_eq: DateTime
  lastSaleDate_lt: DateTime
  lastSaleDate_lte: DateTime
  lastSaleDate_gt: DateTime
  lastSaleDate_gte: DateTime
  video: VideoWhereInput
  auctions_none: AuctionWhereInput
  auctions_some: AuctionWhereInput
  auctions_every: AuctionWhereInput
  ownerMember: MembershipWhereInput
  transactionalStatusAuction: AuctionWhereInput
  transactionalStatusUpdates_none: TransactionalStatusUpdateWhereInput
  transactionalStatusUpdates_some: TransactionalStatusUpdateWhereInput
  transactionalStatusUpdates_every: TransactionalStatusUpdateWhereInput
  ownerCuratorGroup: CuratorGroupWhereInput
  creatorChannel: ChannelWhereInput
  bids_none: BidWhereInput
  bids_some: BidWhereInput
  bids_every: BidWhereInput
  AND: [OwnedNftWhereInput!]
  OR: [OwnedNftWhereInput!]
  NOT: [OwnedNftWhereInput!]
}

input AuctionWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  startingPrice_eq: BigInt
  startingPrice_gt: BigInt
  startingPrice_gte: BigInt
  startingPrice_lt: BigInt
  startingPrice_lte: BigInt
  startingPrice_in: [BigInt!]
  buyNowPrice_eq: BigInt
  buyNowPrice_gt: BigInt
  buyNowPrice_gte: BigInt
  buyNowPrice_lt: BigInt
  buyNowPrice_lte: BigInt
  buyNowPrice_in: [BigInt!]
  auctionType_json: JSONObject
  startsAtBlock_eq: Int
  startsAtBlock_gt: Int
  startsAtBlock_gte: Int
  startsAtBlock_lt: Int
  startsAtBlock_lte: Int
  startsAtBlock_in: [Int!]
  endedAtBlock_eq: Int
  endedAtBlock_gt: Int
  endedAtBlock_gte: Int
  endedAtBlock_lt: Int
  endedAtBlock_lte: Int
  endedAtBlock_in: [Int!]
  isCanceled_eq: Boolean
  isCanceled_in: [Boolean!]
  isCompleted_eq: Boolean
  isCompleted_in: [Boolean!]
  nft: OwnedNftWhereInput
  initialOwner: MembershipWhereInput
  winningMember: MembershipWhereInput
  topBid: BidWhereInput
  bids_none: BidWhereInput
  bids_some: BidWhereInput
  bids_every: BidWhereInput
  whitelistedMembers_none: MembershipWhereInput
  whitelistedMembers_some: MembershipWhereInput
  whitelistedMembers_every: MembershipWhereInput
  englishauctionstartedeventauction_none: EnglishAuctionStartedEventWhereInput
  englishauctionstartedeventauction_some: EnglishAuctionStartedEventWhereInput
  englishauctionstartedeventauction_every: EnglishAuctionStartedEventWhereInput
  openauctionstartedeventauction_none: OpenAuctionStartedEventWhereInput
  openauctionstartedeventauction_some: OpenAuctionStartedEventWhereInput
  openauctionstartedeventauction_every: OpenAuctionStartedEventWhereInput
  ownednfttransactionalStatusAuction_none: OwnedNftWhereInput
  ownednfttransactionalStatusAuction_some: OwnedNftWhereInput
  ownednfttransactionalStatusAuction_every: OwnedNftWhereInput
  transactionalstatusupdatetransactionalStatusAuction_none: TransactionalStatusUpdateWhereInput
  transactionalstatusupdatetransactionalStatusAuction_some: TransactionalStatusUpdateWhereInput
  transactionalstatusupdatetransactionalStatusAuction_every: TransactionalStatusUpdateWhereInput
  AND: [AuctionWhereInput!]
  OR: [AuctionWhereInput!]
  NOT: [AuctionWhereInput!]
}

input BidWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  amount_eq: BigInt
  amount_gt: BigInt
  amount_gte: BigInt
  amount_lt: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  isCanceled_eq: Boolean
  isCanceled_in: [Boolean!]
  createdInBlock_eq: Int
  createdInBlock_gt: Int
  createdInBlock_gte: Int
  createdInBlock_lt: Int
  createdInBlock_lte: Int
  createdInBlock_in: [Int!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  auction: AuctionWhereInput
  nft: OwnedNftWhereInput
  auctionTopBid: AuctionWhereInput
  bidder: MembershipWhereInput
  auctionbidmadeeventpreviousTopBid_none: AuctionBidMadeEventWhereInput
  auctionbidmadeeventpreviousTopBid_some: AuctionBidMadeEventWhereInput
  auctionbidmadeeventpreviousTopBid_every: AuctionBidMadeEventWhereInput
  bidmadecompletingauctioneventwinningBid_none: BidMadeCompletingAuctionEventWhereInput
  bidmadecompletingauctioneventwinningBid_some: BidMadeCompletingAuctionEventWhereInput
  bidmadecompletingauctioneventwinningBid_every: BidMadeCompletingAuctionEventWhereInput
  bidmadecompletingauctioneventpreviousTopBid_none: BidMadeCompletingAuctionEventWhereInput
  bidmadecompletingauctioneventpreviousTopBid_some: BidMadeCompletingAuctionEventWhereInput
  bidmadecompletingauctioneventpreviousTopBid_every: BidMadeCompletingAuctionEventWhereInput
  englishauctionsettledeventwinningBid_none: EnglishAuctionSettledEventWhereInput
  englishauctionsettledeventwinningBid_some: EnglishAuctionSettledEventWhereInput
  englishauctionsettledeventwinningBid_every: EnglishAuctionSettledEventWhereInput
  openauctionbidacceptedeventwinningBid_none: OpenAuctionBidAcceptedEventWhereInput
  openauctionbidacceptedeventwinningBid_some: OpenAuctionBidAcceptedEventWhereInput
  openauctionbidacceptedeventwinningBid_every: OpenAuctionBidAcceptedEventWhereInput
  AND: [BidWhereInput!]
  OR: [BidWhereInput!]
  NOT: [BidWhereInput!]
}

input AuctionBidMadeEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  bidAmount_eq: BigInt
  bidAmount_gt: BigInt
  bidAmount_gte: BigInt
  bidAmount_lt: BigInt
  bidAmount_lte: BigInt
  bidAmount_in: [BigInt!]
  member: MembershipWhereInput
  video: VideoWhereInput
  ownerMember: MembershipWhereInput
  ownerCuratorGroup: CuratorGroupWhereInput
  previousTopBid: BidWhereInput
  previousTopBidder: MembershipWhereInput
  AND: [AuctionBidMadeEventWhereInput!]
  OR: [AuctionBidMadeEventWhereInput!]
  NOT: [AuctionBidMadeEventWhereInput!]
}

input BidMadeCompletingAuctionEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  price_eq: BigInt
  price_gt: BigInt
  price_gte: BigInt
  price_lt: BigInt
  price_lte: BigInt
  price_in: [BigInt!]
  member: MembershipWhereInput
  video: VideoWhereInput
  ownerMember: MembershipWhereInput
  ownerCuratorGroup: CuratorGroupWhereInput
  winningBid: BidWhereInput
  previousTopBid: BidWhereInput
  previousTopBidder: MembershipWhereInput
  bidders_none: MembershipWhereInput
  bidders_some: MembershipWhereInput
  bidders_every: MembershipWhereInput
  AND: [BidMadeCompletingAuctionEventWhereInput!]
  OR: [BidMadeCompletingAuctionEventWhereInput!]
  NOT: [BidMadeCompletingAuctionEventWhereInput!]
}

input EnglishAuctionSettledEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  winner: MembershipWhereInput
  winningBid: BidWhereInput
  video: VideoWhereInput
  bidders_none: MembershipWhereInput
  bidders_some: MembershipWhereInput
  bidders_every: MembershipWhereInput
  ownerMember: MembershipWhereInput
  ownerCuratorGroup: CuratorGroupWhereInput
  AND: [EnglishAuctionSettledEventWhereInput!]
  OR: [EnglishAuctionSettledEventWhereInput!]
  NOT: [EnglishAuctionSettledEventWhereInput!]
}

input OpenAuctionBidAcceptedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  contentActor_json: JSONObject
  video: VideoWhereInput
  ownerMember: MembershipWhereInput
  ownerCuratorGroup: CuratorGroupWhereInput
  winningBid: BidWhereInput
  winningBidder: MembershipWhereInput
  bidders_none: MembershipWhereInput
  bidders_some: MembershipWhereInput
  bidders_every: MembershipWhereInput
  AND: [OpenAuctionBidAcceptedEventWhereInput!]
  OR: [OpenAuctionBidAcceptedEventWhereInput!]
  NOT: [OpenAuctionBidAcceptedEventWhereInput!]
}

input EnglishAuctionStartedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  actor_json: JSONObject
  video: VideoWhereInput
  auction: AuctionWhereInput
  ownerMember: MembershipWhereInput
  ownerCuratorGroup: CuratorGroupWhereInput
  AND: [EnglishAuctionStartedEventWhereInput!]
  OR: [EnglishAuctionStartedEventWhereInput!]
  NOT: [EnglishAuctionStartedEventWhereInput!]
}

input OpenAuctionStartedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  actor_json: JSONObject
  video: VideoWhereInput
  auction: AuctionWhereInput
  ownerMember: MembershipWhereInput
  ownerCuratorGroup: CuratorGroupWhereInput
  AND: [OpenAuctionStartedEventWhereInput!]
  OR: [OpenAuctionStartedEventWhereInput!]
  NOT: [OpenAuctionStartedEventWhereInput!]
}

input TransactionalStatusUpdateWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  transactionalStatus_json: JSONObject
  changedAt_eq: Int
  changedAt_gt: Int
  changedAt_gte: Int
  changedAt_lt: Int
  changedAt_lte: Int
  changedAt_in: [Int!]
  nft: OwnedNftWhereInput
  transactionalStatusAuction: AuctionWhereInput
  AND: [TransactionalStatusUpdateWhereInput!]
  OR: [TransactionalStatusUpdateWhereInput!]
  NOT: [TransactionalStatusUpdateWhereInput!]
}

input LicenseWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  code_eq: Int
  code_gt: Int
  code_gte: Int
  code_lt: Int
  code_lte: Int
  code_in: [Int!]
  attribution_eq: String
  attribution_contains: String
  attribution_startsWith: String
  attribution_endsWith: String
  attribution_in: [String!]
  customText_eq: String
  customText_contains: String
  customText_startsWith: String
  customText_endsWith: String
  customText_in: [String!]
  videolicense_none: VideoWhereInput
  videolicense_some: VideoWhereInput
  videolicense_every: VideoWhereInput
  AND: [LicenseWhereInput!]
  OR: [LicenseWhereInput!]
  NOT: [LicenseWhereInput!]
}

input VideoMediaMetadataWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  pixelWidth_eq: Int
  pixelWidth_gt: Int
  pixelWidth_gte: Int
  pixelWidth_lt: Int
  pixelWidth_lte: Int
  pixelWidth_in: [Int!]
  pixelHeight_eq: Int
  pixelHeight_gt: Int
  pixelHeight_gte: Int
  pixelHeight_lt: Int
  pixelHeight_lte: Int
  pixelHeight_in: [Int!]
  size_eq: BigInt
  size_gt: BigInt
  size_gte: BigInt
  size_lt: BigInt
  size_lte: BigInt
  size_in: [BigInt!]
  createdInBlock_eq: Int
  createdInBlock_gt: Int
  createdInBlock_gte: Int
  createdInBlock_lt: Int
  createdInBlock_lte: Int
  createdInBlock_in: [Int!]
  encoding: VideoMediaEncodingWhereInput
  video: VideoWhereInput
  AND: [VideoMediaMetadataWhereInput!]
  OR: [VideoMediaMetadataWhereInput!]
  NOT: [VideoMediaMetadataWhereInput!]
}

input VideoMediaEncodingWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  codecName_eq: String
  codecName_contains: String
  codecName_startsWith: String
  codecName_endsWith: String
  codecName_in: [String!]
  container_eq: String
  container_contains: String
  container_startsWith: String
  container_endsWith: String
  container_in: [String!]
  mimeMediaType_eq: String
  mimeMediaType_contains: String
  mimeMediaType_startsWith: String
  mimeMediaType_endsWith: String
  mimeMediaType_in: [String!]
  videomediametadataencoding_none: VideoMediaMetadataWhereInput
  videomediametadataencoding_some: VideoMediaMetadataWhereInput
  videomediametadataencoding_every: VideoMediaMetadataWhereInput
  AND: [VideoMediaEncodingWhereInput!]
  OR: [VideoMediaEncodingWhereInput!]
  NOT: [VideoMediaEncodingWhereInput!]
}

input CommentWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  text_eq: String
  text_contains: String
  text_startsWith: String
  text_endsWith: String
  text_in: [String!]
  status_eq: CommentStatus
  status_in: [CommentStatus!]
  repliesCount_eq: Int
  repliesCount_gt: Int
  repliesCount_gte: Int
  repliesCount_lt: Int
  repliesCount_lte: Int
  repliesCount_in: [Int!]
  reactionsCount_eq: Int
  reactionsCount_gt: Int
  reactionsCount_gte: Int
  reactionsCount_lt: Int
  reactionsCount_lte: Int
  reactionsCount_in: [Int!]
  reactionsAndRepliesCount_eq: Int
  reactionsAndRepliesCount_gt: Int
  reactionsAndRepliesCount_gte: Int
  reactionsAndRepliesCount_lt: Int
  reactionsAndRepliesCount_lte: Int
  reactionsAndRepliesCount_in: [Int!]
  isEdited_eq: Boolean
  isEdited_in: [Boolean!]
  author: MembershipWhereInput
  video: VideoWhereInput
  reactions_none: CommentReactionWhereInput
  reactions_some: CommentReactionWhereInput
  reactions_every: CommentReactionWhereInput
  reactionsCountByReactionId_none: CommentReactionsCountByReactionIdWhereInput
  reactionsCountByReactionId_some: CommentReactionsCountByReactionIdWhereInput
  reactionsCountByReactionId_every: CommentReactionsCountByReactionIdWhereInput
  parentComment: CommentWhereInput
  edits_none: CommentTextUpdatedEventWhereInput
  edits_some: CommentTextUpdatedEventWhereInput
  edits_every: CommentTextUpdatedEventWhereInput
  deletedInEvent: CommentDeletedEventWhereInput
  moderatedInEvent: CommentModeratedEventWhereInput
  commentparentComment_none: CommentWhereInput
  commentparentComment_some: CommentWhereInput
  commentparentComment_every: CommentWhereInput
  commentcreatedeventcomment_none: CommentCreatedEventWhereInput
  commentcreatedeventcomment_some: CommentCreatedEventWhereInput
  commentcreatedeventcomment_every: CommentCreatedEventWhereInput
  commentpinnedeventcomment_none: CommentPinnedEventWhereInput
  commentpinnedeventcomment_some: CommentPinnedEventWhereInput
  commentpinnedeventcomment_every: CommentPinnedEventWhereInput
  commentreactedeventcomment_none: CommentReactedEventWhereInput
  commentreactedeventcomment_some: CommentReactedEventWhereInput
  commentreactedeventcomment_every: CommentReactedEventWhereInput
  AND: [CommentWhereInput!]
  OR: [CommentWhereInput!]
  NOT: [CommentWhereInput!]
}

enum CommentStatus {
  VISIBLE
  DELETED
  MODERATED
}

input CommentReactionWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  reactionId_eq: Int
  reactionId_gt: Int
  reactionId_gte: Int
  reactionId_lt: Int
  reactionId_lte: Int
  reactionId_in: [Int!]
  memberId_eq: String
  memberId_contains: String
  memberId_startsWith: String
  memberId_endsWith: String
  memberId_in: [String!]
  member: MembershipWhereInput
  comment: CommentWhereInput
  video: VideoWhereInput
  AND: [CommentReactionWhereInput!]
  OR: [CommentReactionWhereInput!]
  NOT: [CommentReactionWhereInput!]
}

input CommentReactionsCountByReactionIdWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  reactionId_eq: Int
  reactionId_gt: Int
  reactionId_gte: Int
  reactionId_lt: Int
  reactionId_lte: Int
  reactionId_in: [Int!]
  count_eq: Int
  count_gt: Int
  count_gte: Int
  count_lt: Int
  count_lte: Int
  count_in: [Int!]
  comment: CommentWhereInput
  video: VideoWhereInput
  AND: [CommentReactionsCountByReactionIdWhereInput!]
  OR: [CommentReactionsCountByReactionIdWhereInput!]
  NOT: [CommentReactionsCountByReactionIdWhereInput!]
}

input CommentTextUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newText_eq: String
  newText_contains: String
  newText_startsWith: String
  newText_endsWith: String
  newText_in: [String!]
  comment: CommentWhereInput
  video: VideoWhereInput
  videoChannel: ChannelWhereInput
  AND: [CommentTextUpdatedEventWhereInput!]
  OR: [CommentTextUpdatedEventWhereInput!]
  NOT: [CommentTextUpdatedEventWhereInput!]
}

input CommentDeletedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  comment: CommentWhereInput
  video: VideoWhereInput
  videoChannel: ChannelWhereInput
  AND: [CommentDeletedEventWhereInput!]
  OR: [CommentDeletedEventWhereInput!]
  NOT: [CommentDeletedEventWhereInput!]
}

input CommentModeratedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  actor_json: JSONObject
  rationale_eq: String
  rationale_contains: String
  rationale_startsWith: String
  rationale_endsWith: String
  rationale_in: [String!]
  comment: CommentWhereInput
  video: VideoWhereInput
  videoChannel: ChannelWhereInput
  AND: [CommentModeratedEventWhereInput!]
  OR: [CommentModeratedEventWhereInput!]
  NOT: [CommentModeratedEventWhereInput!]
}

input CommentCreatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  text_eq: String
  text_contains: String
  text_startsWith: String
  text_endsWith: String
  text_in: [String!]
  comment: CommentWhereInput
  parentCommentAuthor: MembershipWhereInput
  video: VideoWhereInput
  videoChannel: ChannelWhereInput
  AND: [CommentCreatedEventWhereInput!]
  OR: [CommentCreatedEventWhereInput!]
  NOT: [CommentCreatedEventWhereInput!]
}

input CommentPinnedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  action_eq: Boolean
  action_in: [Boolean!]
  comment: CommentWhereInput
  video: VideoWhereInput
  videoChannel: ChannelWhereInput
  AND: [CommentPinnedEventWhereInput!]
  OR: [CommentPinnedEventWhereInput!]
  NOT: [CommentPinnedEventWhereInput!]
}

input CommentReactedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  reactionResult_eq: Int
  reactionResult_gt: Int
  reactionResult_gte: Int
  reactionResult_lt: Int
  reactionResult_lte: Int
  reactionResult_in: [Int!]
  comment: CommentWhereInput
  video: VideoWhereInput
  videoChannel: ChannelWhereInput
  reactingMember: MembershipWhereInput
  AND: [CommentReactedEventWhereInput!]
  OR: [CommentReactedEventWhereInput!]
  NOT: [CommentReactedEventWhereInput!]
}

input VideoReactionWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  reaction_eq: VideoReactionOptions
  reaction_in: [VideoReactionOptions!]
  memberId_eq: String
  memberId_contains: String
  memberId_startsWith: String
  memberId_endsWith: String
  memberId_in: [String!]
  member: MembershipWhereInput
  video: VideoWhereInput
  AND: [VideoReactionWhereInput!]
  OR: [VideoReactionWhereInput!]
  NOT: [VideoReactionWhereInput!]
}

enum VideoReactionOptions {
  LIKE
  UNLIKE
}

input VideoReactionsCountByReactionTypeWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  reaction_eq: VideoReactionOptions
  reaction_in: [VideoReactionOptions!]
  count_eq: Int
  count_gt: Int
  count_gte: Int
  count_lt: Int
  count_lte: Int
  count_in: [Int!]
  video: VideoWhereInput
  AND: [VideoReactionsCountByReactionTypeWhereInput!]
  OR: [VideoReactionsCountByReactionTypeWhereInput!]
  NOT: [VideoReactionsCountByReactionTypeWhereInput!]
}

input AuctionCanceledEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  contentActor_json: JSONObject
  video: VideoWhereInput
  ownerMember: MembershipWhereInput
  ownerCuratorGroup: CuratorGroupWhereInput
  AND: [AuctionCanceledEventWhereInput!]
  OR: [AuctionCanceledEventWhereInput!]
  NOT: [AuctionCanceledEventWhereInput!]
}

input BuyNowCanceledEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  contentActor_json: JSONObject
  video: VideoWhereInput
  ownerMember: MembershipWhereInput
  ownerCuratorGroup: CuratorGroupWhereInput
  AND: [BuyNowCanceledEventWhereInput!]
  OR: [BuyNowCanceledEventWhereInput!]
  NOT: [BuyNowCanceledEventWhereInput!]
}

input BuyNowPriceUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  contentActor_json: JSONObject
  newPrice_eq: BigInt
  newPrice_gt: BigInt
  newPrice_gte: BigInt
  newPrice_lt: BigInt
  newPrice_lte: BigInt
  newPrice_in: [BigInt!]
  video: VideoWhereInput
  ownerMember: MembershipWhereInput
  ownerCuratorGroup: CuratorGroupWhereInput
  AND: [BuyNowPriceUpdatedEventWhereInput!]
  OR: [BuyNowPriceUpdatedEventWhereInput!]
  NOT: [BuyNowPriceUpdatedEventWhereInput!]
}

input NftBoughtEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  price_eq: BigInt
  price_gt: BigInt
  price_gte: BigInt
  price_lt: BigInt
  price_lte: BigInt
  price_in: [BigInt!]
  video: VideoWhereInput
  member: MembershipWhereInput
  ownerMember: MembershipWhereInput
  ownerCuratorGroup: CuratorGroupWhereInput
  AND: [NftBoughtEventWhereInput!]
  OR: [NftBoughtEventWhereInput!]
  NOT: [NftBoughtEventWhereInput!]
}

input NftIssuedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  contentActor_json: JSONObject
  royalty_eq: Float
  royalty_gt: Float
  royalty_gte: Float
  royalty_lt: Float
  royalty_lte: Float
  royalty_in: [Float!]
  metadata_eq: String
  metadata_contains: String
  metadata_startsWith: String
  metadata_endsWith: String
  metadata_in: [String!]
  video: VideoWhereInput
  ownerMember: MembershipWhereInput
  ownerCuratorGroup: CuratorGroupWhereInput
  AND: [NftIssuedEventWhereInput!]
  OR: [NftIssuedEventWhereInput!]
  NOT: [NftIssuedEventWhereInput!]
}

input NftSellOrderMadeEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  contentActor_json: JSONObject
  price_eq: BigInt
  price_gt: BigInt
  price_gte: BigInt
  price_lt: BigInt
  price_lte: BigInt
  price_in: [BigInt!]
  video: VideoWhereInput
  ownerMember: MembershipWhereInput
  ownerCuratorGroup: CuratorGroupWhereInput
  AND: [NftSellOrderMadeEventWhereInput!]
  OR: [NftSellOrderMadeEventWhereInput!]
  NOT: [NftSellOrderMadeEventWhereInput!]
}

input NftSlingedBackToTheOriginalArtistEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  contentActor_json: JSONObject
  video: VideoWhereInput
  ownerMember: MembershipWhereInput
  ownerCuratorGroup: CuratorGroupWhereInput
  AND: [NftSlingedBackToTheOriginalArtistEventWhereInput!]
  OR: [NftSlingedBackToTheOriginalArtistEventWhereInput!]
  NOT: [NftSlingedBackToTheOriginalArtistEventWhereInput!]
}

input OfferAcceptedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  price_eq: BigInt
  price_gt: BigInt
  price_gte: BigInt
  price_lt: BigInt
  price_lte: BigInt
  price_in: [BigInt!]
  video: VideoWhereInput
  ownerMember: MembershipWhereInput
  ownerCuratorGroup: CuratorGroupWhereInput
  AND: [OfferAcceptedEventWhereInput!]
  OR: [OfferAcceptedEventWhereInput!]
  NOT: [OfferAcceptedEventWhereInput!]
}

input OfferCanceledEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  contentActor_json: JSONObject
  video: VideoWhereInput
  ownerMember: MembershipWhereInput
  ownerCuratorGroup: CuratorGroupWhereInput
  AND: [OfferCanceledEventWhereInput!]
  OR: [OfferCanceledEventWhereInput!]
  NOT: [OfferCanceledEventWhereInput!]
}

input OfferStartedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  contentActor_json: JSONObject
  price_eq: BigInt
  price_gt: BigInt
  price_gte: BigInt
  price_lt: BigInt
  price_lte: BigInt
  price_in: [BigInt!]
  video: VideoWhereInput
  member: MembershipWhereInput
  ownerMember: MembershipWhereInput
  ownerCuratorGroup: CuratorGroupWhereInput
  AND: [OfferStartedEventWhereInput!]
  OR: [OfferStartedEventWhereInput!]
  NOT: [OfferStartedEventWhereInput!]
}

input VideoReactedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  reactionResult_eq: VideoReactionOptions
  reactionResult_in: [VideoReactionOptions!]
  video: VideoWhereInput
  videoChannel: ChannelWhereInput
  reactingMember: MembershipWhereInput
  AND: [VideoReactedEventWhereInput!]
  OR: [VideoReactedEventWhereInput!]
  NOT: [VideoReactedEventWhereInput!]
}

input VideoReactionsPreferenceEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  reactionsStatus_eq: Boolean
  reactionsStatus_in: [Boolean!]
  video: VideoWhereInput
  AND: [VideoReactionsPreferenceEventWhereInput!]
  OR: [VideoReactionsPreferenceEventWhereInput!]
  NOT: [VideoReactionsPreferenceEventWhereInput!]
}

input ChannelCategoryWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  name_eq: String
  name_contains: String
  name_startsWith: String
  name_endsWith: String
  name_in: [String!]
  activeVideosCounter_eq: Int
  activeVideosCounter_gt: Int
  activeVideosCounter_gte: Int
  activeVideosCounter_lt: Int
  activeVideosCounter_lte: Int
  activeVideosCounter_in: [Int!]
  createdInBlock_eq: Int
  createdInBlock_gt: Int
  createdInBlock_gte: Int
  createdInBlock_lt: Int
  createdInBlock_lte: Int
  createdInBlock_in: [Int!]
  channels_none: ChannelWhereInput
  channels_some: ChannelWhereInput
  channels_every: ChannelWhereInput
  AND: [ChannelCategoryWhereInput!]
  OR: [ChannelCategoryWhereInput!]
  NOT: [ChannelCategoryWhereInput!]
}

input MemberBannedFromChannelEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  action_eq: Boolean
  action_in: [Boolean!]
  channel: ChannelWhereInput
  member: MembershipWhereInput
  AND: [MemberBannedFromChannelEventWhereInput!]
  OR: [MemberBannedFromChannelEventWhereInput!]
  NOT: [MemberBannedFromChannelEventWhereInput!]
}

input CandidateWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  stakingAccountId_eq: String
  stakingAccountId_contains: String
  stakingAccountId_startsWith: String
  stakingAccountId_endsWith: String
  stakingAccountId_in: [String!]
  rewardAccountId_eq: String
  rewardAccountId_contains: String
  rewardAccountId_startsWith: String
  rewardAccountId_endsWith: String
  rewardAccountId_in: [String!]
  stake_eq: BigInt
  stake_gt: BigInt
  stake_gte: BigInt
  stake_lt: BigInt
  stake_lte: BigInt
  stake_in: [BigInt!]
  stakeLocked_eq: Boolean
  stakeLocked_in: [Boolean!]
  status_eq: CandidacyStatus
  status_in: [CandidacyStatus!]
  votePower_eq: BigInt
  votePower_gt: BigInt
  votePower_gte: BigInt
  votePower_lt: BigInt
  votePower_lte: BigInt
  votePower_in: [BigInt!]
  lastVoteReceivedAtBlock_eq: BigInt
  lastVoteReceivedAtBlock_gt: BigInt
  lastVoteReceivedAtBlock_gte: BigInt
  lastVoteReceivedAtBlock_lt: BigInt
  lastVoteReceivedAtBlock_lte: BigInt
  lastVoteReceivedAtBlock_in: [BigInt!]
  lastVoteReceivedAtEventNumber_eq: Int
  lastVoteReceivedAtEventNumber_gt: Int
  lastVoteReceivedAtEventNumber_gte: Int
  lastVoteReceivedAtEventNumber_lt: Int
  lastVoteReceivedAtEventNumber_lte: Int
  lastVoteReceivedAtEventNumber_in: [Int!]
  member: MembershipWhereInput
  electionRound: ElectionRoundWhereInput
  noteMetadata: CandidacyNoteMetadataWhereInput
  votesReceived_none: CastVoteWhereInput
  votesReceived_some: CastVoteWhereInput
  votesReceived_every: CastVoteWhereInput
  candidacynoteseteventcandidate_none: CandidacyNoteSetEventWhereInput
  candidacynoteseteventcandidate_some: CandidacyNoteSetEventWhereInput
  candidacynoteseteventcandidate_every: CandidacyNoteSetEventWhereInput
  candidacystakereleaseeventcandidate_none: CandidacyStakeReleaseEventWhereInput
  candidacystakereleaseeventcandidate_some: CandidacyStakeReleaseEventWhereInput
  candidacystakereleaseeventcandidate_every: CandidacyStakeReleaseEventWhereInput
  candidacywithdraweventcandidate_none: CandidacyWithdrawEventWhereInput
  candidacywithdraweventcandidate_some: CandidacyWithdrawEventWhereInput
  candidacywithdraweventcandidate_every: CandidacyWithdrawEventWhereInput
  newcandidateeventcandidate_none: NewCandidateEventWhereInput
  newcandidateeventcandidate_some: NewCandidateEventWhereInput
  newcandidateeventcandidate_every: NewCandidateEventWhereInput
  AND: [CandidateWhereInput!]
  OR: [CandidateWhereInput!]
  NOT: [CandidateWhereInput!]
}

enum CandidacyStatus {
  ACTIVE
  WITHDRAWN
  ELECTED
  FAILED
}

input ElectionRoundWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  cycleId_eq: Int
  cycleId_gt: Int
  cycleId_gte: Int
  cycleId_lt: Int
  cycleId_lte: Int
  cycleId_in: [Int!]
  isFinished_eq: Boolean
  isFinished_in: [Boolean!]
  endedAtBlock_eq: Int
  endedAtBlock_gt: Int
  endedAtBlock_gte: Int
  endedAtBlock_lt: Int
  endedAtBlock_lte: Int
  endedAtBlock_in: [Int!]
  endedAtTime_eq: DateTime
  endedAtTime_lt: DateTime
  endedAtTime_lte: DateTime
  endedAtTime_gt: DateTime
  endedAtTime_gte: DateTime
  endedAtNetwork_eq: Network
  endedAtNetwork_in: [Network!]
  castVotes_none: CastVoteWhereInput
  castVotes_some: CastVoteWhereInput
  castVotes_every: CastVoteWhereInput
  referendumStageVoting: ReferendumStageVotingWhereInput
  referendumStageRevealing: ReferendumStageRevealingWhereInput
  electedCouncil: ElectedCouncilWhereInput
  nextElectedCouncil: ElectedCouncilWhereInput
  candidates_none: CandidateWhereInput
  candidates_some: CandidateWhereInput
  candidates_every: CandidateWhereInput
  newcandidateeventelectionRound_none: NewCandidateEventWhereInput
  newcandidateeventelectionRound_some: NewCandidateEventWhereInput
  newcandidateeventelectionRound_every: NewCandidateEventWhereInput
  AND: [ElectionRoundWhereInput!]
  OR: [ElectionRoundWhereInput!]
  NOT: [ElectionRoundWhereInput!]
}

input CastVoteWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  commitment_eq: String
  commitment_contains: String
  commitment_startsWith: String
  commitment_endsWith: String
  commitment_in: [String!]
  stake_eq: BigInt
  stake_gt: BigInt
  stake_gte: BigInt
  stake_lt: BigInt
  stake_lte: BigInt
  stake_in: [BigInt!]
  stakeLocked_eq: Boolean
  stakeLocked_in: [Boolean!]
  castBy_eq: String
  castBy_contains: String
  castBy_startsWith: String
  castBy_endsWith: String
  castBy_in: [String!]
  votePower_eq: BigInt
  votePower_gt: BigInt
  votePower_gte: BigInt
  votePower_lt: BigInt
  votePower_lte: BigInt
  votePower_in: [BigInt!]
  electionRound: ElectionRoundWhereInput
  voteFor: CandidateWhereInput
  votecasteventcastVote_none: VoteCastEventWhereInput
  votecasteventcastVote_some: VoteCastEventWhereInput
  votecasteventcastVote_every: VoteCastEventWhereInput
  voterevealedeventcastVote_none: VoteRevealedEventWhereInput
  voterevealedeventcastVote_some: VoteRevealedEventWhereInput
  voterevealedeventcastVote_every: VoteRevealedEventWhereInput
  AND: [CastVoteWhereInput!]
  OR: [CastVoteWhereInput!]
  NOT: [CastVoteWhereInput!]
}

input VoteCastEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  castVote: CastVoteWhereInput
  AND: [VoteCastEventWhereInput!]
  OR: [VoteCastEventWhereInput!]
  NOT: [VoteCastEventWhereInput!]
}

input VoteRevealedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  castVote: CastVoteWhereInput
  AND: [VoteRevealedEventWhereInput!]
  OR: [VoteRevealedEventWhereInput!]
  NOT: [VoteRevealedEventWhereInput!]
}

input ReferendumStageVotingWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  startedAtBlock_eq: BigInt
  startedAtBlock_gt: BigInt
  startedAtBlock_gte: BigInt
  startedAtBlock_lt: BigInt
  startedAtBlock_lte: BigInt
  startedAtBlock_in: [BigInt!]
  winningTargetCount_eq: BigInt
  winningTargetCount_gt: BigInt
  winningTargetCount_gte: BigInt
  winningTargetCount_lt: BigInt
  winningTargetCount_lte: BigInt
  winningTargetCount_in: [BigInt!]
  electionRound: ElectionRoundWhereInput
  AND: [ReferendumStageVotingWhereInput!]
  OR: [ReferendumStageVotingWhereInput!]
  NOT: [ReferendumStageVotingWhereInput!]
}

input ReferendumStageRevealingWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  startedAtBlock_eq: BigInt
  startedAtBlock_gt: BigInt
  startedAtBlock_gte: BigInt
  startedAtBlock_lt: BigInt
  startedAtBlock_lte: BigInt
  startedAtBlock_in: [BigInt!]
  winningTargetCount_eq: BigInt
  winningTargetCount_gt: BigInt
  winningTargetCount_gte: BigInt
  winningTargetCount_lt: BigInt
  winningTargetCount_lte: BigInt
  winningTargetCount_in: [BigInt!]
  electionRound: ElectionRoundWhereInput
  AND: [ReferendumStageRevealingWhereInput!]
  OR: [ReferendumStageRevealingWhereInput!]
  NOT: [ReferendumStageRevealingWhereInput!]
}

input ElectedCouncilWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  electedAtBlock_eq: Int
  electedAtBlock_gt: Int
  electedAtBlock_gte: Int
  electedAtBlock_lt: Int
  electedAtBlock_lte: Int
  electedAtBlock_in: [Int!]
  endedAtBlock_eq: Int
  endedAtBlock_gt: Int
  endedAtBlock_gte: Int
  endedAtBlock_lt: Int
  endedAtBlock_lte: Int
  endedAtBlock_in: [Int!]
  electedAtTime_eq: DateTime
  electedAtTime_lt: DateTime
  electedAtTime_lte: DateTime
  electedAtTime_gt: DateTime
  electedAtTime_gte: DateTime
  endedAtTime_eq: DateTime
  endedAtTime_lt: DateTime
  endedAtTime_lte: DateTime
  endedAtTime_gt: DateTime
  endedAtTime_gte: DateTime
  electedAtNetwork_eq: Network
  electedAtNetwork_in: [Network!]
  endedAtNetwork_eq: Network
  endedAtNetwork_in: [Network!]
  isResigned_eq: Boolean
  isResigned_in: [Boolean!]
  councilMembers_none: CouncilMemberWhereInput
  councilMembers_some: CouncilMemberWhereInput
  councilMembers_every: CouncilMemberWhereInput
  updates_none: CouncilStageUpdateWhereInput
  updates_some: CouncilStageUpdateWhereInput
  updates_every: CouncilStageUpdateWhereInput
  councilElections_none: ElectionRoundWhereInput
  councilElections_some: ElectionRoundWhereInput
  councilElections_every: ElectionRoundWhereInput
  nextCouncilElections_none: ElectionRoundWhereInput
  nextCouncilElections_some: ElectionRoundWhereInput
  nextCouncilElections_every: ElectionRoundWhereInput
  newcouncilelectedeventelectedCouncil_none: NewCouncilElectedEventWhereInput
  newcouncilelectedeventelectedCouncil_some: NewCouncilElectedEventWhereInput
  newcouncilelectedeventelectedCouncil_every: NewCouncilElectedEventWhereInput
  AND: [ElectedCouncilWhereInput!]
  OR: [ElectedCouncilWhereInput!]
  NOT: [ElectedCouncilWhereInput!]
}

input CouncilMemberWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  stakingAccountId_eq: String
  stakingAccountId_contains: String
  stakingAccountId_startsWith: String
  stakingAccountId_endsWith: String
  stakingAccountId_in: [String!]
  rewardAccountId_eq: String
  rewardAccountId_contains: String
  rewardAccountId_startsWith: String
  rewardAccountId_endsWith: String
  rewardAccountId_in: [String!]
  stake_eq: BigInt
  stake_gt: BigInt
  stake_gte: BigInt
  stake_lt: BigInt
  stake_lte: BigInt
  stake_in: [BigInt!]
  lastPaymentBlock_eq: BigInt
  lastPaymentBlock_gt: BigInt
  lastPaymentBlock_gte: BigInt
  lastPaymentBlock_lt: BigInt
  lastPaymentBlock_lte: BigInt
  lastPaymentBlock_in: [BigInt!]
  unpaidReward_eq: BigInt
  unpaidReward_gt: BigInt
  unpaidReward_gte: BigInt
  unpaidReward_lt: BigInt
  unpaidReward_lte: BigInt
  unpaidReward_in: [BigInt!]
  accumulatedReward_eq: BigInt
  accumulatedReward_gt: BigInt
  accumulatedReward_gte: BigInt
  accumulatedReward_lt: BigInt
  accumulatedReward_lte: BigInt
  accumulatedReward_in: [BigInt!]
  member: MembershipWhereInput
  electedInCouncil: ElectedCouncilWhereInput
  rewardpaymenteventcouncilMember_none: RewardPaymentEventWhereInput
  rewardpaymenteventcouncilMember_some: RewardPaymentEventWhereInput
  rewardpaymenteventcouncilMember_every: RewardPaymentEventWhereInput
  AND: [CouncilMemberWhereInput!]
  OR: [CouncilMemberWhereInput!]
  NOT: [CouncilMemberWhereInput!]
}

input RewardPaymentEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  rewardAccount_eq: String
  rewardAccount_contains: String
  rewardAccount_startsWith: String
  rewardAccount_endsWith: String
  rewardAccount_in: [String!]
  paidBalance_eq: BigInt
  paidBalance_gt: BigInt
  paidBalance_gte: BigInt
  paidBalance_lt: BigInt
  paidBalance_lte: BigInt
  paidBalance_in: [BigInt!]
  missingBalance_eq: BigInt
  missingBalance_gt: BigInt
  missingBalance_gte: BigInt
  missingBalance_lt: BigInt
  missingBalance_lte: BigInt
  missingBalance_in: [BigInt!]
  councilMember: CouncilMemberWhereInput
  AND: [RewardPaymentEventWhereInput!]
  OR: [RewardPaymentEventWhereInput!]
  NOT: [RewardPaymentEventWhereInput!]
}

input CouncilStageUpdateWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  stage_json: JSONObject
  changedAt_eq: BigInt
  changedAt_gt: BigInt
  changedAt_gte: BigInt
  changedAt_lt: BigInt
  changedAt_lte: BigInt
  changedAt_in: [BigInt!]
  electionProblem_eq: ElectionProblem
  electionProblem_in: [ElectionProblem!]
  electedCouncil: ElectedCouncilWhereInput
  AND: [CouncilStageUpdateWhereInput!]
  OR: [CouncilStageUpdateWhereInput!]
  NOT: [CouncilStageUpdateWhereInput!]
}

enum ElectionProblem {
  NOT_ENOUGH_CANDIDATES
  NEW_COUNCIL_NOT_ELECTED
}

input NewCouncilElectedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  electedCouncil: ElectedCouncilWhereInput
  AND: [NewCouncilElectedEventWhereInput!]
  OR: [NewCouncilElectedEventWhereInput!]
  NOT: [NewCouncilElectedEventWhereInput!]
}

input NewCandidateEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  stakingAccount_eq: String
  stakingAccount_contains: String
  stakingAccount_startsWith: String
  stakingAccount_endsWith: String
  stakingAccount_in: [String!]
  rewardAccount_eq: String
  rewardAccount_contains: String
  rewardAccount_startsWith: String
  rewardAccount_endsWith: String
  rewardAccount_in: [String!]
  balance_eq: BigInt
  balance_gt: BigInt
  balance_gte: BigInt
  balance_lt: BigInt
  balance_lte: BigInt
  balance_in: [BigInt!]
  candidate: CandidateWhereInput
  electionRound: ElectionRoundWhereInput
  AND: [NewCandidateEventWhereInput!]
  OR: [NewCandidateEventWhereInput!]
  NOT: [NewCandidateEventWhereInput!]
}

input CandidacyNoteMetadataWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  header_eq: String
  header_contains: String
  header_startsWith: String
  header_endsWith: String
  header_in: [String!]
  bulletPoints_containsAll: [String!]
  bulletPoints_containsNone: [String!]
  bulletPoints_containsAny: [String!]
  bannerImageUri_eq: String
  bannerImageUri_contains: String
  bannerImageUri_startsWith: String
  bannerImageUri_endsWith: String
  bannerImageUri_in: [String!]
  description_eq: String
  description_contains: String
  description_startsWith: String
  description_endsWith: String
  description_in: [String!]
  candidacynoteseteventnoteMetadata_none: CandidacyNoteSetEventWhereInput
  candidacynoteseteventnoteMetadata_some: CandidacyNoteSetEventWhereInput
  candidacynoteseteventnoteMetadata_every: CandidacyNoteSetEventWhereInput
  candidatenoteMetadata_none: CandidateWhereInput
  candidatenoteMetadata_some: CandidateWhereInput
  candidatenoteMetadata_every: CandidateWhereInput
  AND: [CandidacyNoteMetadataWhereInput!]
  OR: [CandidacyNoteMetadataWhereInput!]
  NOT: [CandidacyNoteMetadataWhereInput!]
}

input CandidacyNoteSetEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  candidate: CandidateWhereInput
  noteMetadata: CandidacyNoteMetadataWhereInput
  AND: [CandidacyNoteSetEventWhereInput!]
  OR: [CandidacyNoteSetEventWhereInput!]
  NOT: [CandidacyNoteSetEventWhereInput!]
}

input CandidacyStakeReleaseEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  candidate: CandidateWhereInput
  AND: [CandidacyStakeReleaseEventWhereInput!]
  OR: [CandidacyStakeReleaseEventWhereInput!]
  NOT: [CandidacyStakeReleaseEventWhereInput!]
}

input CandidacyWithdrawEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  candidate: CandidateWhereInput
  AND: [CandidacyWithdrawEventWhereInput!]
  OR: [CandidacyWithdrawEventWhereInput!]
  NOT: [CandidacyWithdrawEventWhereInput!]
}

input InvitesTransferredEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  numberOfInvites_eq: Int
  numberOfInvites_gt: Int
  numberOfInvites_gte: Int
  numberOfInvites_lt: Int
  numberOfInvites_lte: Int
  numberOfInvites_in: [Int!]
  sourceMember: MembershipWhereInput
  targetMember: MembershipWhereInput
  AND: [InvitesTransferredEventWhereInput!]
  OR: [InvitesTransferredEventWhereInput!]
  NOT: [InvitesTransferredEventWhereInput!]
}

input MemberAccountsUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newRootAccount_eq: String
  newRootAccount_contains: String
  newRootAccount_startsWith: String
  newRootAccount_endsWith: String
  newRootAccount_in: [String!]
  newControllerAccount_eq: String
  newControllerAccount_contains: String
  newControllerAccount_startsWith: String
  newControllerAccount_endsWith: String
  newControllerAccount_in: [String!]
  member: MembershipWhereInput
  AND: [MemberAccountsUpdatedEventWhereInput!]
  OR: [MemberAccountsUpdatedEventWhereInput!]
  NOT: [MemberAccountsUpdatedEventWhereInput!]
}

input MemberVerificationStatusUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  isVerified_eq: Boolean
  isVerified_in: [Boolean!]
  member: MembershipWhereInput
  worker: WorkerWhereInput
  AND: [MemberVerificationStatusUpdatedEventWhereInput!]
  OR: [MemberVerificationStatusUpdatedEventWhereInput!]
  NOT: [MemberVerificationStatusUpdatedEventWhereInput!]
}

input ProposalWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  title_eq: String
  title_contains: String
  title_startsWith: String
  title_endsWith: String
  title_in: [String!]
  description_eq: String
  description_contains: String
  description_startsWith: String
  description_endsWith: String
  description_in: [String!]
  details_json: JSONObject
  stakingAccount_eq: String
  stakingAccount_contains: String
  stakingAccount_startsWith: String
  stakingAccount_endsWith: String
  stakingAccount_in: [String!]
  exactExecutionBlock_eq: Int
  exactExecutionBlock_gt: Int
  exactExecutionBlock_gte: Int
  exactExecutionBlock_lt: Int
  exactExecutionBlock_lte: Int
  exactExecutionBlock_in: [Int!]
  councilApprovals_eq: Int
  councilApprovals_gt: Int
  councilApprovals_gte: Int
  councilApprovals_lt: Int
  councilApprovals_lte: Int
  councilApprovals_in: [Int!]
  status_json: JSONObject
  isFinalized_eq: Boolean
  isFinalized_in: [Boolean!]
  statusSetAtBlock_eq: Int
  statusSetAtBlock_gt: Int
  statusSetAtBlock_gte: Int
  statusSetAtBlock_lt: Int
  statusSetAtBlock_lte: Int
  statusSetAtBlock_in: [Int!]
  statusSetAtTime_eq: DateTime
  statusSetAtTime_lt: DateTime
  statusSetAtTime_lte: DateTime
  statusSetAtTime_gt: DateTime
  statusSetAtTime_gte: DateTime
  creator: MembershipWhereInput
  createdInEvent: ProposalCreatedEventWhereInput
  discussionThread: ProposalDiscussionThreadWhereInput
  proposalStatusUpdates_none: ProposalStatusUpdatedEventWhereInput
  proposalStatusUpdates_some: ProposalStatusUpdatedEventWhereInput
  proposalStatusUpdates_every: ProposalStatusUpdatedEventWhereInput
  votes_none: ProposalVotedEventWhereInput
  votes_some: ProposalVotedEventWhereInput
  votes_every: ProposalVotedEventWhereInput
  proposalcancelledeventproposal_none: ProposalCancelledEventWhereInput
  proposalcancelledeventproposal_some: ProposalCancelledEventWhereInput
  proposalcancelledeventproposal_every: ProposalCancelledEventWhereInput
  proposaldecisionmadeeventproposal_none: ProposalDecisionMadeEventWhereInput
  proposaldecisionmadeeventproposal_some: ProposalDecisionMadeEventWhereInput
  proposaldecisionmadeeventproposal_every: ProposalDecisionMadeEventWhereInput
  proposalexecutedeventproposal_none: ProposalExecutedEventWhereInput
  proposalexecutedeventproposal_some: ProposalExecutedEventWhereInput
  proposalexecutedeventproposal_every: ProposalExecutedEventWhereInput
  AND: [ProposalWhereInput!]
  OR: [ProposalWhereInput!]
  NOT: [ProposalWhereInput!]
}

input ProposalCreatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  proposal: ProposalWhereInput
  AND: [ProposalCreatedEventWhereInput!]
  OR: [ProposalCreatedEventWhereInput!]
  NOT: [ProposalCreatedEventWhereInput!]
}

input ProposalDiscussionThreadWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  mode_json: JSONObject
  proposal: ProposalWhereInput
  posts_none: ProposalDiscussionPostWhereInput
  posts_some: ProposalDiscussionPostWhereInput
  posts_every: ProposalDiscussionPostWhereInput
  modeChanges_none: ProposalDiscussionThreadModeChangedEventWhereInput
  modeChanges_some: ProposalDiscussionThreadModeChangedEventWhereInput
  modeChanges_every: ProposalDiscussionThreadModeChangedEventWhereInput
  AND: [ProposalDiscussionThreadWhereInput!]
  OR: [ProposalDiscussionThreadWhereInput!]
  NOT: [ProposalDiscussionThreadWhereInput!]
}

input ProposalDiscussionPostWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  status_json: JSONObject
  isVisible_eq: Boolean
  isVisible_in: [Boolean!]
  text_eq: String
  text_contains: String
  text_startsWith: String
  text_endsWith: String
  text_in: [String!]
  discussionThread: ProposalDiscussionThreadWhereInput
  author: MembershipWhereInput
  repliesTo: ProposalDiscussionPostWhereInput
  updates_none: ProposalDiscussionPostUpdatedEventWhereInput
  updates_some: ProposalDiscussionPostUpdatedEventWhereInput
  updates_every: ProposalDiscussionPostUpdatedEventWhereInput
  createdInEvent: ProposalDiscussionPostCreatedEventWhereInput
  proposaldiscussionpostrepliesTo_none: ProposalDiscussionPostWhereInput
  proposaldiscussionpostrepliesTo_some: ProposalDiscussionPostWhereInput
  proposaldiscussionpostrepliesTo_every: ProposalDiscussionPostWhereInput
  proposaldiscussionpostdeletedeventpost_none: ProposalDiscussionPostDeletedEventWhereInput
  proposaldiscussionpostdeletedeventpost_some: ProposalDiscussionPostDeletedEventWhereInput
  proposaldiscussionpostdeletedeventpost_every: ProposalDiscussionPostDeletedEventWhereInput
  AND: [ProposalDiscussionPostWhereInput!]
  OR: [ProposalDiscussionPostWhereInput!]
  NOT: [ProposalDiscussionPostWhereInput!]
}

input ProposalDiscussionPostUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  text_eq: String
  text_contains: String
  text_startsWith: String
  text_endsWith: String
  text_in: [String!]
  post: ProposalDiscussionPostWhereInput
  AND: [ProposalDiscussionPostUpdatedEventWhereInput!]
  OR: [ProposalDiscussionPostUpdatedEventWhereInput!]
  NOT: [ProposalDiscussionPostUpdatedEventWhereInput!]
}

input ProposalDiscussionPostCreatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  text_eq: String
  text_contains: String
  text_startsWith: String
  text_endsWith: String
  text_in: [String!]
  post: ProposalDiscussionPostWhereInput
  AND: [ProposalDiscussionPostCreatedEventWhereInput!]
  OR: [ProposalDiscussionPostCreatedEventWhereInput!]
  NOT: [ProposalDiscussionPostCreatedEventWhereInput!]
}

input ProposalDiscussionPostDeletedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  post: ProposalDiscussionPostWhereInput
  actor: MembershipWhereInput
  AND: [ProposalDiscussionPostDeletedEventWhereInput!]
  OR: [ProposalDiscussionPostDeletedEventWhereInput!]
  NOT: [ProposalDiscussionPostDeletedEventWhereInput!]
}

input ProposalDiscussionThreadModeChangedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newMode_json: JSONObject
  thread: ProposalDiscussionThreadWhereInput
  actor: MembershipWhereInput
  AND: [ProposalDiscussionThreadModeChangedEventWhereInput!]
  OR: [ProposalDiscussionThreadModeChangedEventWhereInput!]
  NOT: [ProposalDiscussionThreadModeChangedEventWhereInput!]
}

input ProposalStatusUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newStatus_json: JSONObject
  proposal: ProposalWhereInput
  AND: [ProposalStatusUpdatedEventWhereInput!]
  OR: [ProposalStatusUpdatedEventWhereInput!]
  NOT: [ProposalStatusUpdatedEventWhereInput!]
}

input ProposalVotedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  voteKind_eq: ProposalVoteKind
  voteKind_in: [ProposalVoteKind!]
  rationale_eq: String
  rationale_contains: String
  rationale_startsWith: String
  rationale_endsWith: String
  rationale_in: [String!]
  votingRound_eq: Int
  votingRound_gt: Int
  votingRound_gte: Int
  votingRound_lt: Int
  votingRound_lte: Int
  votingRound_in: [Int!]
  voter: MembershipWhereInput
  proposal: ProposalWhereInput
  AND: [ProposalVotedEventWhereInput!]
  OR: [ProposalVotedEventWhereInput!]
  NOT: [ProposalVotedEventWhereInput!]
}

enum ProposalVoteKind {
  APPROVE
  REJECT
  SLASH
  ABSTAIN
}

input ProposalCancelledEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  proposal: ProposalWhereInput
  AND: [ProposalCancelledEventWhereInput!]
  OR: [ProposalCancelledEventWhereInput!]
  NOT: [ProposalCancelledEventWhereInput!]
}

input ProposalDecisionMadeEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  decisionStatus_json: JSONObject
  proposal: ProposalWhereInput
  AND: [ProposalDecisionMadeEventWhereInput!]
  OR: [ProposalDecisionMadeEventWhereInput!]
  NOT: [ProposalDecisionMadeEventWhereInput!]
}

input ProposalExecutedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  executionStatus_json: JSONObject
  proposal: ProposalWhereInput
  AND: [ProposalExecutedEventWhereInput!]
  OR: [ProposalExecutedEventWhereInput!]
  NOT: [ProposalExecutedEventWhereInput!]
}

input StakingAccountAddedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  account_eq: String
  account_contains: String
  account_startsWith: String
  account_endsWith: String
  account_in: [String!]
  member: MembershipWhereInput
  AND: [StakingAccountAddedEventWhereInput!]
  OR: [StakingAccountAddedEventWhereInput!]
  NOT: [StakingAccountAddedEventWhereInput!]
}

input StakingAccountConfirmedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  account_eq: String
  account_contains: String
  account_startsWith: String
  account_endsWith: String
  account_in: [String!]
  member: MembershipWhereInput
  AND: [StakingAccountConfirmedEventWhereInput!]
  OR: [StakingAccountConfirmedEventWhereInput!]
  NOT: [StakingAccountConfirmedEventWhereInput!]
}

input StakingAccountRemovedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  account_eq: String
  account_contains: String
  account_startsWith: String
  account_endsWith: String
  account_in: [String!]
  member: MembershipWhereInput
  AND: [StakingAccountRemovedEventWhereInput!]
  OR: [StakingAccountRemovedEventWhereInput!]
  NOT: [StakingAccountRemovedEventWhereInput!]
}

input RewardPaidEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  rewardAccount_eq: String
  rewardAccount_contains: String
  rewardAccount_startsWith: String
  rewardAccount_endsWith: String
  rewardAccount_in: [String!]
  amount_eq: BigInt
  amount_gt: BigInt
  amount_gte: BigInt
  amount_lt: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  paymentType_eq: RewardPaymentType
  paymentType_in: [RewardPaymentType!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [RewardPaidEventWhereInput!]
  OR: [RewardPaidEventWhereInput!]
  NOT: [RewardPaidEventWhereInput!]
}

enum RewardPaymentType {
  REGULAR
  MISSED
}

input StakeSlashedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  requestedAmount_eq: BigInt
  requestedAmount_gt: BigInt
  requestedAmount_gte: BigInt
  requestedAmount_lt: BigInt
  requestedAmount_lte: BigInt
  requestedAmount_in: [BigInt!]
  slashedAmount_eq: BigInt
  slashedAmount_gt: BigInt
  slashedAmount_gte: BigInt
  slashedAmount_lt: BigInt
  slashedAmount_lte: BigInt
  slashedAmount_in: [BigInt!]
  rationale_eq: String
  rationale_contains: String
  rationale_startsWith: String
  rationale_endsWith: String
  rationale_in: [String!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [StakeSlashedEventWhereInput!]
  OR: [StakeSlashedEventWhereInput!]
  NOT: [StakeSlashedEventWhereInput!]
}

input OpeningFilledEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  group: WorkingGroupWhereInput
  opening: WorkingGroupOpeningWhereInput
  workersHired_none: WorkerWhereInput
  workersHired_some: WorkerWhereInput
  workersHired_every: WorkerWhereInput
  AND: [OpeningFilledEventWhereInput!]
  OR: [OpeningFilledEventWhereInput!]
  NOT: [OpeningFilledEventWhereInput!]
}

input LeaderSetEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [LeaderSetEventWhereInput!]
  OR: [LeaderSetEventWhereInput!]
  NOT: [LeaderSetEventWhereInput!]
}

input LeaderUnsetEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  group: WorkingGroupWhereInput
  leader: WorkerWhereInput
  AND: [LeaderUnsetEventWhereInput!]
  OR: [LeaderUnsetEventWhereInput!]
  NOT: [LeaderUnsetEventWhereInput!]
}

input NewMissedRewardLevelReachedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newMissedRewardAmount_eq: BigInt
  newMissedRewardAmount_gt: BigInt
  newMissedRewardAmount_gte: BigInt
  newMissedRewardAmount_lt: BigInt
  newMissedRewardAmount_lte: BigInt
  newMissedRewardAmount_in: [BigInt!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [NewMissedRewardLevelReachedEventWhereInput!]
  OR: [NewMissedRewardLevelReachedEventWhereInput!]
  NOT: [NewMissedRewardLevelReachedEventWhereInput!]
}

input StakeDecreasedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  amount_eq: BigInt
  amount_gt: BigInt
  amount_gte: BigInt
  amount_lt: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [StakeDecreasedEventWhereInput!]
  OR: [StakeDecreasedEventWhereInput!]
  NOT: [StakeDecreasedEventWhereInput!]
}

input StakeIncreasedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  amount_eq: BigInt
  amount_gt: BigInt
  amount_gte: BigInt
  amount_lt: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [StakeIncreasedEventWhereInput!]
  OR: [StakeIncreasedEventWhereInput!]
  NOT: [StakeIncreasedEventWhereInput!]
}

input TerminatedLeaderEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  penalty_eq: BigInt
  penalty_gt: BigInt
  penalty_gte: BigInt
  penalty_lt: BigInt
  penalty_lte: BigInt
  penalty_in: [BigInt!]
  rationale_eq: String
  rationale_contains: String
  rationale_startsWith: String
  rationale_endsWith: String
  rationale_in: [String!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [TerminatedLeaderEventWhereInput!]
  OR: [TerminatedLeaderEventWhereInput!]
  NOT: [TerminatedLeaderEventWhereInput!]
}

input TerminatedWorkerEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  penalty_eq: BigInt
  penalty_gt: BigInt
  penalty_gte: BigInt
  penalty_lt: BigInt
  penalty_lte: BigInt
  penalty_in: [BigInt!]
  rationale_eq: String
  rationale_contains: String
  rationale_startsWith: String
  rationale_endsWith: String
  rationale_in: [String!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [TerminatedWorkerEventWhereInput!]
  OR: [TerminatedWorkerEventWhereInput!]
  NOT: [TerminatedWorkerEventWhereInput!]
}

input WorkerExitedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [WorkerExitedEventWhereInput!]
  OR: [WorkerExitedEventWhereInput!]
  NOT: [WorkerExitedEventWhereInput!]
}

input WorkerRewardAccountUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newRewardAccount_eq: String
  newRewardAccount_contains: String
  newRewardAccount_startsWith: String
  newRewardAccount_endsWith: String
  newRewardAccount_in: [String!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [WorkerRewardAccountUpdatedEventWhereInput!]
  OR: [WorkerRewardAccountUpdatedEventWhereInput!]
  NOT: [WorkerRewardAccountUpdatedEventWhereInput!]
}

input WorkerRewardAmountUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newRewardPerBlock_eq: BigInt
  newRewardPerBlock_gt: BigInt
  newRewardPerBlock_gte: BigInt
  newRewardPerBlock_lt: BigInt
  newRewardPerBlock_lte: BigInt
  newRewardPerBlock_in: [BigInt!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [WorkerRewardAmountUpdatedEventWhereInput!]
  OR: [WorkerRewardAmountUpdatedEventWhereInput!]
  NOT: [WorkerRewardAmountUpdatedEventWhereInput!]
}

input WorkerRoleAccountUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newRoleAccount_eq: String
  newRoleAccount_contains: String
  newRoleAccount_startsWith: String
  newRoleAccount_endsWith: String
  newRoleAccount_in: [String!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [WorkerRoleAccountUpdatedEventWhereInput!]
  OR: [WorkerRoleAccountUpdatedEventWhereInput!]
  NOT: [WorkerRoleAccountUpdatedEventWhereInput!]
}

input WorkerStartedLeavingEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  rationale_eq: String
  rationale_contains: String
  rationale_startsWith: String
  rationale_endsWith: String
  rationale_in: [String!]
  group: WorkingGroupWhereInput
  worker: WorkerWhereInput
  AND: [WorkerStartedLeavingEventWhereInput!]
  OR: [WorkerStartedLeavingEventWhereInput!]
  NOT: [WorkerStartedLeavingEventWhereInput!]
}

input ApplicationWithdrawnEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  group: WorkingGroupWhereInput
  application: WorkingGroupApplicationWhereInput
  AND: [ApplicationWithdrawnEventWhereInput!]
  OR: [ApplicationWithdrawnEventWhereInput!]
  NOT: [ApplicationWithdrawnEventWhereInput!]
}

input AppliedOnOpeningEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  group: WorkingGroupWhereInput
  opening: WorkingGroupOpeningWhereInput
  application: WorkingGroupApplicationWhereInput
  AND: [AppliedOnOpeningEventWhereInput!]
  OR: [AppliedOnOpeningEventWhereInput!]
  NOT: [AppliedOnOpeningEventWhereInput!]
}

input BudgetSetEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newBudget_eq: BigInt
  newBudget_gt: BigInt
  newBudget_gte: BigInt
  newBudget_lt: BigInt
  newBudget_lte: BigInt
  newBudget_in: [BigInt!]
  group: WorkingGroupWhereInput
  AND: [BudgetSetEventWhereInput!]
  OR: [BudgetSetEventWhereInput!]
  NOT: [BudgetSetEventWhereInput!]
}

input BudgetSpendingEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  reciever_eq: String
  reciever_contains: String
  reciever_startsWith: String
  reciever_endsWith: String
  reciever_in: [String!]
  amount_eq: BigInt
  amount_gt: BigInt
  amount_gte: BigInt
  amount_lt: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  rationale_eq: String
  rationale_contains: String
  rationale_startsWith: String
  rationale_endsWith: String
  rationale_in: [String!]
  group: WorkingGroupWhereInput
  AND: [BudgetSpendingEventWhereInput!]
  OR: [BudgetSpendingEventWhereInput!]
  NOT: [BudgetSpendingEventWhereInput!]
}

input BudgetUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  budgetChangeAmount_eq: BigInt
  budgetChangeAmount_gt: BigInt
  budgetChangeAmount_gte: BigInt
  budgetChangeAmount_lt: BigInt
  budgetChangeAmount_lte: BigInt
  budgetChangeAmount_in: [BigInt!]
  group: WorkingGroupWhereInput
  AND: [BudgetUpdatedEventWhereInput!]
  OR: [BudgetUpdatedEventWhereInput!]
  NOT: [BudgetUpdatedEventWhereInput!]
}

input OpeningAddedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  group: WorkingGroupWhereInput
  opening: WorkingGroupOpeningWhereInput
  AND: [OpeningAddedEventWhereInput!]
  OR: [OpeningAddedEventWhereInput!]
  NOT: [OpeningAddedEventWhereInput!]
}

input OpeningCanceledEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  group: WorkingGroupWhereInput
  opening: WorkingGroupOpeningWhereInput
  AND: [OpeningCanceledEventWhereInput!]
  OR: [OpeningCanceledEventWhereInput!]
  NOT: [OpeningCanceledEventWhereInput!]
}

enum ApplicationFormQuestionAnswerOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  application_ASC
  application_DESC
  question_ASC
  question_DESC
  answer_ASC
  answer_DESC
}

type ApplicationFormQuestionAnswer implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  application: WorkingGroupApplication!
  applicationId: String!
  question: ApplicationFormQuestion!
  questionId: String!

  # Applicant's answer
  answer: String!
}

type WorkingGroupApplication implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # ApplicationId in specific working group module
  runtimeId: Int!
  opening: WorkingGroupOpening!
  openingId: String!
  applicant: Membership!
  applicantId: String!

  # Application stake
  stake: BigInt!

  # Applicant's initial role account
  roleAccount: String!

  # Applicant's initial reward account
  rewardAccount: String!

  # Applicant's initial staking account
  stakingAccount: String!
  answers: [ApplicationFormQuestionAnswer!]!

  # Current application status
  status: WorkingGroupApplicationStatus!
  createdInEvent: AppliedOnOpeningEvent!
  applicationwithdrawneventapplication: [ApplicationWithdrawnEvent!]
  workerapplication: [Worker!]
}

type WorkingGroupOpening implements BaseGraphQLObject {
  id: ID!

  # Time of opening creation
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # OpeningId in specific working group module
  runtimeId: Int!
  group: WorkingGroup!
  groupId: String!
  applications: [WorkingGroupApplication!]!

  # Type of the opening (Leader/Regular)
  type: WorkingGroupOpeningType!

  # Current opening status
  status: WorkingGroupOpeningStatus!
  metadata: WorkingGroupOpeningMetadata!
  metadataId: String!

  # Min. application/role stake amount
  stakeAmount: BigInt!

  # Role stake unstaking period in blocks
  unstakingPeriod: Int!

  # Initial workers' reward per block
  rewardPerBlock: BigInt!
  createdInEvent: OpeningAddedEvent!
  appliedonopeningeventopening: [AppliedOnOpeningEvent!]
  openingcanceledeventopening: [OpeningCanceledEvent!]
  openingfilledeventopening: [OpeningFilledEvent!]
}

type WorkingGroup implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Working group name
  name: String!
  metadata: WorkingGroupMetadata
  metadataId: String
  leader: Worker
  leaderId: String
  workers: [Worker!]!
  openings: [WorkingGroupOpening!]!

  # Current working group budget (JOY)
  budget: BigInt!
  applicationwithdrawneventgroup: [ApplicationWithdrawnEvent!]
  appliedonopeningeventgroup: [AppliedOnOpeningEvent!]
  budgetseteventgroup: [BudgetSetEvent!]
  budgetspendingeventgroup: [BudgetSpendingEvent!]
  budgetupdatedeventgroup: [BudgetUpdatedEvent!]
  leaderseteventgroup: [LeaderSetEvent!]
  leaderunseteventgroup: [LeaderUnsetEvent!]
  newmissedrewardlevelreachedeventgroup: [NewMissedRewardLevelReachedEvent!]
  openingaddedeventgroup: [OpeningAddedEvent!]
  openingcanceledeventgroup: [OpeningCanceledEvent!]
  openingfilledeventgroup: [OpeningFilledEvent!]
  rewardpaideventgroup: [RewardPaidEvent!]
  stakedecreasedeventgroup: [StakeDecreasedEvent!]
  stakeincreasedeventgroup: [StakeIncreasedEvent!]
  stakeslashedeventgroup: [StakeSlashedEvent!]
  statustextchangedeventgroup: [StatusTextChangedEvent!]
  terminatedleadereventgroup: [TerminatedLeaderEvent!]
  terminatedworkereventgroup: [TerminatedWorkerEvent!]
  upcomingworkinggroupopeninggroup: [UpcomingWorkingGroupOpening!]
  workerexitedeventgroup: [WorkerExitedEvent!]
  workerrewardaccountupdatedeventgroup: [WorkerRewardAccountUpdatedEvent!]
  workerrewardamountupdatedeventgroup: [WorkerRewardAmountUpdatedEvent!]
  workerroleaccountupdatedeventgroup: [WorkerRoleAccountUpdatedEvent!]
  workerstartedleavingeventgroup: [WorkerStartedLeavingEvent!]
  workinggroupmetadatagroup: [WorkingGroupMetadata!]
}

type WorkingGroupMetadata implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Working group status
  status: String

  # Working group status message
  statusMessage: String

  # Working group about text
  about: String

  # Working group description text
  description: String
  setInEvent: StatusTextChangedEvent!
  setInEventId: String!
  group: WorkingGroup!
  groupId: String!
  workinggroupmetadata: [WorkingGroup!]
}

type StatusTextChangedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!

  # Original action metadata as hex string
  metadata: String

  # Event result depeding on the metadata action type
  result: WorkingGroupMetadataActionResult!
  upcomingworkinggroupopeningcreatedInEvent: [UpcomingWorkingGroupOpening!]
  workinggroupmetadatasetInEvent: [WorkingGroupMetadata!]
}

union WorkingGroupMetadataActionResult =
    UpcomingOpeningAdded
  | UpcomingOpeningRemoved
  | WorkingGroupMetadataSet
  | InvalidActionMetadata

type UpcomingOpeningAdded {
  upcomingOpeningId: String!
}

type UpcomingOpeningRemoved {
  upcomingOpeningId: String!
}

type WorkingGroupMetadataSet {
  # The new metadata snapshot resulting from the update
  metadata: WorkingGroupMetadata
}

type InvalidActionMetadata {
  # Reason why the action metadata was considered invalid
  reason: String!
}

type UpcomingWorkingGroupOpening implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  createdInEvent: StatusTextChangedEvent!
  createdInEventId: String!
  group: WorkingGroup!
  groupId: String!

  # Expected opening start time
  expectedStart: DateTime

  # Expected min. application/role stake amount
  stakeAmount: BigInt

  # Expected reward per block
  rewardPerBlock: BigInt
  metadata: WorkingGroupOpeningMetadata!
  metadataId: String!
}

type WorkingGroupOpeningMetadata implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Whether the originally provided metadata was valid
  originallyValid: Boolean!

  # Opening title
  title: String

  # Opening short description
  shortDescription: String

  # Opening description (md-formatted)
  description: String

  # Expected max. number of applicants that will be hired
  hiringLimit: Int

  # Expected time when the opening will close
  expectedEnding: DateTime

  # Md-formatted text explaining the application process
  applicationDetails: String
  applicationFormQuestions: [ApplicationFormQuestion!]!
  upcomingworkinggroupopeningmetadata: [UpcomingWorkingGroupOpening!]
  workinggroupopeningmetadata: [WorkingGroupOpening!]
}

type ApplicationFormQuestion implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  openingMetadata: WorkingGroupOpeningMetadata!
  openingMetadataId: String!

  # The question itself
  question: String

  # Type of the question (UI answer input type)
  type: ApplicationFormQuestionType!

  # Index of the question
  index: Int!
  applicationformquestionanswerquestion: [ApplicationFormQuestionAnswer!]
}

type Worker implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # WorkerId in specific working group module
  runtimeId: Int!
  group: WorkingGroup!

  # The id the group that the worker belongs to
  groupId: String!
  membership: Membership!
  membershipId: String!

  # Worker's role account
  roleAccount: String!

  # Worker's reward account
  rewardAccount: String!

  # Worker's staking account
  stakeAccount: String!

  # Current worker status
  status: WorkerStatus!

  # Whether the worker is also the working group lead
  isLead: Boolean!

  # Whether the worker is currently active
  isActive: Boolean!

  # Current role stake (in JOY)
  stake: BigInt!

  # Current reward per block
  rewardPerBlock: BigInt!

  # The reward amount the worker is currently missing (due to empty working group budget)
  missingRewardAmount: BigInt
  payouts: [RewardPaidEvent!]!
  slashes: [StakeSlashedEvent!]!
  entry: OpeningFilledEvent!
  entryId: String!
  application: WorkingGroupApplication!
  applicationId: String!

  # Worker's storage data
  storage: String
  managedForumCategories: [ForumCategory!]!
  categoryarchivalstatusupdatedeventactor: [CategoryArchivalStatusUpdatedEvent!]
  categorydeletedeventactor: [CategoryDeletedEvent!]
  categorymembershipofmoderatorupdatedeventmoderator: [CategoryMembershipOfModeratorUpdatedEvent!]
  categorystickythreadupdateeventactor: [CategoryStickyThreadUpdateEvent!]
  leaderseteventworker: [LeaderSetEvent!]
  leaderunseteventleader: [LeaderUnsetEvent!]
  memberverificationstatusupdatedeventworker: [MemberVerificationStatusUpdatedEvent!]
  newmissedrewardlevelreachedeventworker: [NewMissedRewardLevelReachedEvent!]
  postmoderatedeventactor: [PostModeratedEvent!]
  stakedecreasedeventworker: [StakeDecreasedEvent!]
  stakeincreasedeventworker: [StakeIncreasedEvent!]
  terminatedleadereventworker: [TerminatedLeaderEvent!]
  terminatedworkereventworker: [TerminatedWorkerEvent!]
  threadmoderatedeventactor: [ThreadModeratedEvent!]
  threadmovedeventactor: [ThreadMovedEvent!]
  workerexitedeventworker: [WorkerExitedEvent!]
  workerrewardaccountupdatedeventworker: [WorkerRewardAccountUpdatedEvent!]
  workerrewardamountupdatedeventworker: [WorkerRewardAmountUpdatedEvent!]
  workerroleaccountupdatedeventworker: [WorkerRoleAccountUpdatedEvent!]
  workerstartedleavingeventworker: [WorkerStartedLeavingEvent!]
  workinggroupleader: [WorkingGroup!]
}

# Stored information about a registered user
type Membership implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # The unique handle chosen by member
  handle: String!
  metadata: MemberMetadata!
  metadataId: String!

  # Member's controller account id
  controllerAccount: String!

  # Member's root account id
  rootAccount: String!

  # How the member was registered
  entry: MembershipEntryMethod!

  # Whether member has been verified by membership working group.
  isVerified: Boolean!

  # Staking accounts bounded to membership.
  boundAccounts: [String!]!

  # Current count of invites left to send.
  inviteCount: Int!
  invitees: [Membership!]!
  invitedBy: Membership
  invitedById: String
  referredMembers: [Membership!]!
  referredBy: Membership
  referredById: String

  # Whether member is founding member.
  isFoundingMember: Boolean!

  # Whether member is elected in the current council.
  isCouncilMember: Boolean!
  roles: [Worker!]!
  whitelistedIn: [ProposalDiscussionWhitelist!]!
  whitelistedInBounties: [BountyEntrantWhitelist!]!
  channels: [Channel!]!
  collaboratorInChannels: [Channel!]!
  memberBannedFromChannels: [Channel!]!
  councilCandidacies: [Candidate!]!
  councilMembers: [CouncilMember!]!
  whitelistedInAuctions: [Auction!]!
  ownedNfts: [OwnedNft!]!
  nftCollectorInChannels: [ChannelNftCollectors!]!
  memberEnglishAuctionSettledEvents: [EnglishAuctionSettledEvent!]!
  memberOpenAuctionAcceptedBidEvents: [OpenAuctionBidAcceptedEvent!]!
  memberBidMadeCompletingAuctionEvents: [BidMadeCompletingAuctionEvent!]!
  auctioninitialOwner: [Auction!]
  auctionwinningMember: [Auction!]
  auctionbidcanceledeventmember: [AuctionBidCanceledEvent!]
  auctionbidcanceledeventownerMember: [AuctionBidCanceledEvent!]
  auctionbidmadeeventmember: [AuctionBidMadeEvent!]
  auctionbidmadeeventownerMember: [AuctionBidMadeEvent!]
  auctionbidmadeeventpreviousTopBidder: [AuctionBidMadeEvent!]
  auctioncanceledeventownerMember: [AuctionCanceledEvent!]
  bidbidder: [Bid!]
  bidmadecompletingauctioneventmember: [BidMadeCompletingAuctionEvent!]
  bidmadecompletingauctioneventownerMember: [BidMadeCompletingAuctionEvent!]
  bidmadecompletingauctioneventpreviousTopBidder: [BidMadeCompletingAuctionEvent!]
  bountycreator: [Bounty!]
  bountyoracle: [Bounty!]
  bountycontributioncontributor: [BountyContribution!]
  bountyentryworker: [BountyEntry!]
  buynowcanceledeventownerMember: [BuyNowCanceledEvent!]
  buynowpriceupdatedeventownerMember: [BuyNowPriceUpdatedEvent!]
  commentauthor: [Comment!]
  commentcreatedeventparentCommentAuthor: [CommentCreatedEvent!]
  commentreactedeventreactingMember: [CommentReactedEvent!]
  commentreactionmember: [CommentReaction!]
  englishauctionsettledeventwinner: [EnglishAuctionSettledEvent!]
  englishauctionsettledeventownerMember: [EnglishAuctionSettledEvent!]
  englishauctionstartedeventownerMember: [EnglishAuctionStartedEvent!]
  forumpostauthor: [ForumPost!]
  forumpostreactionmember: [ForumPostReaction!]
  forumthreadauthor: [ForumThread!]
  invitestransferredeventsourceMember: [InvitesTransferredEvent!]
  invitestransferredeventtargetMember: [InvitesTransferredEvent!]
  memberaccountsupdatedeventmember: [MemberAccountsUpdatedEvent!]
  memberbannedfromchanneleventmember: [MemberBannedFromChannelEvent!]
  memberinvitedeventinvitingMember: [MemberInvitedEvent!]
  memberinvitedeventnewMember: [MemberInvitedEvent!]
  memberprofileupdatedeventmember: [MemberProfileUpdatedEvent!]
  memberverificationstatusupdatedeventmember: [MemberVerificationStatusUpdatedEvent!]
  membershipboughteventnewMember: [MembershipBoughtEvent!]
  membershipboughteventreferrer: [MembershipBoughtEvent!]
  nftboughteventmember: [NftBoughtEvent!]
  nftboughteventownerMember: [NftBoughtEvent!]
  nftissuedeventownerMember: [NftIssuedEvent!]
  nftsellordermadeeventownerMember: [NftSellOrderMadeEvent!]
  nftslingedbacktotheoriginalartisteventownerMember: [NftSlingedBackToTheOriginalArtistEvent!]
  offeracceptedeventownerMember: [OfferAcceptedEvent!]
  offercanceledeventownerMember: [OfferCanceledEvent!]
  offerstartedeventmember: [OfferStartedEvent!]
  offerstartedeventownerMember: [OfferStartedEvent!]
  openauctionbidacceptedeventownerMember: [OpenAuctionBidAcceptedEvent!]
  openauctionbidacceptedeventwinningBidder: [OpenAuctionBidAcceptedEvent!]
  openauctionstartedeventownerMember: [OpenAuctionStartedEvent!]
  postdeletedeventactor: [PostDeletedEvent!]
  postreactedeventreactingMember: [PostReactedEvent!]
  proposalcreator: [Proposal!]
  proposaldiscussionpostauthor: [ProposalDiscussionPost!]
  proposaldiscussionpostdeletedeventactor: [ProposalDiscussionPostDeletedEvent!]
  proposaldiscussionthreadmodechangedeventactor: [ProposalDiscussionThreadModeChangedEvent!]
  proposalvotedeventvoter: [ProposalVotedEvent!]
  stakingaccountaddedeventmember: [StakingAccountAddedEvent!]
  stakingaccountconfirmedeventmember: [StakingAccountConfirmedEvent!]
  stakingaccountremovedeventmember: [StakingAccountRemovedEvent!]
  videoreactedeventreactingMember: [VideoReactedEvent!]
  videoreactionmember: [VideoReaction!]
  voteonpolleventvotingMember: [VoteOnPollEvent!]
  workinggroupapplicationapplicant: [WorkingGroupApplication!]
}

type MemberMetadata implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Member's name
  name: String

  # Avatar data object
  avatar: Avatar

  # Short text chosen by member to share information about themselves
  about: String
  externalResources: [MembershipExternalResource!]
  memberinvitedeventmetadata: [MemberInvitedEvent!]
  memberprofileupdatedeventnewMetadata: [MemberProfileUpdatedEvent!]
  membershipmetadata: [Membership!]
  membershipboughteventmetadata: [MembershipBoughtEvent!]
}

union Avatar = AvatarObject | AvatarUri

type AvatarObject {
  # The avatar data object
  avatarObject: StorageDataObject
}

type StorageDataObject implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Whether the data object was uploaded and accepted by the storage provider
  isAccepted: Boolean!

  # Data object size in bytes
  size: BigInt!
  storageBag: StorageBag!
  storageBagId: String!

  # IPFS content hash
  ipfsHash: String!

  # The type of the asset that the data object represents (if known)
  type: DataObjectType!

  # Prize for removing the data object
  deletionPrize: BigInt!

  # If the object is no longer used as an asset - the time at which it was unset (if known)
  unsetAt: DateTime
  videoThumbnail: Video
  videoMedia: Video
  channelcoverPhoto: [Channel!]
  channelavatarPhoto: [Channel!]
}

type StorageBag implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  objects: [StorageDataObject!]!
  storageBuckets: [StorageBucket!]!
  distributionBuckets: [DistributionBucket!]!

  # Owner of the storage bag
  owner: StorageBagOwner!
}

type StorageBucket implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Current bucket operator status
  operatorStatus: StorageBucketOperatorStatus!
  operatorMetadata: StorageBucketOperatorMetadata
  operatorMetadataId: String

  # Whether the bucket is accepting any new storage bags
  acceptingNewBags: Boolean!
  bags: [StorageBag!]!

  # Bucket's data object size limit in bytes
  dataObjectsSizeLimit: BigInt!

  # Bucket's data object count limit
  dataObjectCountLimit: BigInt!

  # Number of assigned data objects
  dataObjectsCount: BigInt!

  # Total size of assigned data objects
  dataObjectsSize: BigInt!
}

union StorageBucketOperatorStatus =
    StorageBucketOperatorStatusMissing
  | StorageBucketOperatorStatusInvited
  | StorageBucketOperatorStatusActive

type StorageBucketOperatorStatusMissing {
  phantom: Int
}

type StorageBucketOperatorStatusInvited {
  workerId: Int!
}

type StorageBucketOperatorStatusActive {
  workerId: Int!
  transactorAccountId: String!
}

type StorageBucketOperatorMetadata implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Root node endpoint
  nodeEndpoint: String
  nodeLocation: NodeLocationMetadata
  nodeLocationId: String

  # Additional information about the node/operator
  extra: String
  storagebucketoperatorMetadata: [StorageBucket!]
}

type NodeLocationMetadata implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # ISO 3166-1 alpha-2 country code (2 letters)
  countryCode: String

  # City name
  city: String
  coordinates: GeoCoordinates
  coordinatesId: String
  distributionbucketoperatormetadatanodeLocation: [DistributionBucketOperatorMetadata!]
  storagebucketoperatormetadatanodeLocation: [StorageBucketOperatorMetadata!]
}

type GeoCoordinates implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  latitude: Float!
  longitude: Float!
  nodelocationmetadatacoordinates: [NodeLocationMetadata!]
}

type DistributionBucketOperatorMetadata implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Root distributor node api endpoint
  nodeEndpoint: String
  nodeLocation: NodeLocationMetadata
  nodeLocationId: String

  # Additional information about the node/operator
  extra: String
  distributionbucketoperatormetadata: [DistributionBucketOperator!]
}

type DistributionBucketOperator implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  distributionBucket: DistributionBucket!
  distributionBucketId: String!

  # ID of the distribution group worker
  workerId: Int!

  # Current operator status
  status: DistributionBucketOperatorStatus!
  metadata: DistributionBucketOperatorMetadata
  metadataId: String
}

type DistributionBucket implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  family: DistributionBucketFamily!
  familyId: String!

  # Bucket index within the family
  bucketIndex: Int!
  operators: [DistributionBucketOperator!]!

  # Whether the bucket is accepting any new bags
  acceptingNewBags: Boolean!

  # Whether the bucket is currently distributing content
  distributing: Boolean!
  bags: [StorageBag!]!
}

type DistributionBucketFamily implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  metadata: DistributionBucketFamilyMetadata
  metadataId: String
  buckets: [DistributionBucket!]!
}

type DistributionBucketFamilyMetadata implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Name of the geographical region covered by the family (ie.: us-east-1)
  region: String

  # Optional, more specific description of the region covered by the family
  description: String
  areas: [DistributionBucketFamilyGeographicArea!]!

  # List of targets (hosts/ips) best suited latency measurements for the family
  latencyTestTargets: [String!]
  distributionbucketfamilymetadata: [DistributionBucketFamily!]
}

type DistributionBucketFamilyGeographicArea implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Geographical area (continent / country / subdivision)
  area: GeographicalArea!
  distributionBucketFamilyMetadata: DistributionBucketFamilyMetadata!
  distributionBucketFamilyMetadataId: String!
}

union GeographicalArea =
    GeographicalAreaContinent
  | GeographicalAreaCountry
  | GeographicalAreaSubdivistion

type GeographicalAreaContinent {
  code: Continent
}

enum Continent {
  AF
  NA
  OC
  AN
  AS
  EU
  SA
}

type GeographicalAreaCountry {
  # ISO 3166-1 alpha-2 country code
  code: String
}

type GeographicalAreaSubdivistion {
  # ISO 3166-2 subdivision code
  code: String
}

union StorageBagOwner =
    StorageBagOwnerCouncil
  | StorageBagOwnerWorkingGroup
  | StorageBagOwnerMember
  | StorageBagOwnerChannel
  | StorageBagOwnerDAO

type StorageBagOwnerCouncil {
  phantom: Int
}

type StorageBagOwnerWorkingGroup {
  workingGroupId: String
}

type StorageBagOwnerMember {
  memberId: Int
}

type StorageBagOwnerChannel {
  channelId: Int
}

type StorageBagOwnerDAO {
  daoId: Int
}

union DataObjectType =
    DataObjectTypeChannelAvatar
  | DataObjectTypeChannelCoverPhoto
  | DataObjectTypeVideoMedia
  | DataObjectTypeVideoThumbnail
  | DataObjectTypeUnknown

type DataObjectTypeChannelAvatar {
  # Related channel entity
  channel: Channel
}

type Channel implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  ownerMember: Membership
  ownerMemberId: String
  ownerCuratorGroup: CuratorGroup
  ownerCuratorGroupId: String
  category: ChannelCategory
  categoryId: String

  # Reward account where revenue is sent if set.
  rewardAccount: String

  # The title of the Channel
  title: String

  # The description of a Channel
  description: String

  # Count of channel's videos with an uploaded asset that are public and not censored.
  activeVideosCounter: Int!
  coverPhoto: StorageDataObject
  coverPhotoId: String
  avatarPhoto: StorageDataObject
  avatarPhotoId: String

  # Flag signaling whether a channel is public.
  isPublic: Boolean

  # Flag signaling whether a channel is censored.
  isCensored: Boolean!
  language: Language
  languageId: String
  videos: [Video!]!

  # Number of the block the channel was created in
  createdInBlock: Int!
  collaborators: [Membership!]!
  bannedMembers: [Membership!]!
  channelNftCollectors: [ChannelNftCollectors!]!
  commentcreatedeventvideoChannel: [CommentCreatedEvent!]
  commentdeletedeventvideoChannel: [CommentDeletedEvent!]
  commentmoderatedeventvideoChannel: [CommentModeratedEvent!]
  commentpinnedeventvideoChannel: [CommentPinnedEvent!]
  commentreactedeventvideoChannel: [CommentReactedEvent!]
  commenttextupdatedeventvideoChannel: [CommentTextUpdatedEvent!]
  memberbannedfromchanneleventchannel: [MemberBannedFromChannelEvent!]
  ownednftcreatorChannel: [OwnedNft!]
  videoreactedeventvideoChannel: [VideoReactedEvent!]
}

type CuratorGroup implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Is group active or not
  isActive: Boolean!
  curators: [Curator!]!
  channels: [Channel!]!
  nftCollectorInChannels: [ChannelNftCollectors!]!
  auctionbidcanceledeventownerCuratorGroup: [AuctionBidCanceledEvent!]
  auctionbidmadeeventownerCuratorGroup: [AuctionBidMadeEvent!]
  auctioncanceledeventownerCuratorGroup: [AuctionCanceledEvent!]
  bidmadecompletingauctioneventownerCuratorGroup: [BidMadeCompletingAuctionEvent!]
  buynowcanceledeventownerCuratorGroup: [BuyNowCanceledEvent!]
  buynowpriceupdatedeventownerCuratorGroup: [BuyNowPriceUpdatedEvent!]
  englishauctionsettledeventownerCuratorGroup: [EnglishAuctionSettledEvent!]
  englishauctionstartedeventownerCuratorGroup: [EnglishAuctionStartedEvent!]
  nftboughteventownerCuratorGroup: [NftBoughtEvent!]
  nftissuedeventownerCuratorGroup: [NftIssuedEvent!]
  nftsellordermadeeventownerCuratorGroup: [NftSellOrderMadeEvent!]
  nftslingedbacktotheoriginalartisteventownerCuratorGroup: [NftSlingedBackToTheOriginalArtistEvent!]
  offeracceptedeventownerCuratorGroup: [OfferAcceptedEvent!]
  offercanceledeventownerCuratorGroup: [OfferCanceledEvent!]
  offerstartedeventownerCuratorGroup: [OfferStartedEvent!]
  openauctionbidacceptedeventownerCuratorGroup: [OpenAuctionBidAcceptedEvent!]
  openauctionstartedeventownerCuratorGroup: [OpenAuctionStartedEvent!]
  ownednftownerCuratorGroup: [OwnedNft!]
}

type Curator implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Type needs to have at least one non-relation entity. This value is not used.
  dummy: Int
  curatorGroups: [CuratorGroup!]!
}

type ChannelNftCollectors implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  channel: Channel!
  channelId: String!
  member: Membership
  memberId: String
  curatorGroup: CuratorGroup
  curatorGroupId: String

  # Amount of NFTs owned in the channel
  amount: Int!

  # Time of last NFT amount increase
  lastIncreaseAt: DateTime!
}

type AuctionBidCanceledEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted.
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in.
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  member: Membership!
  memberId: String!
  video: Video!
  videoId: String!
  ownerMember: Membership
  ownerMemberId: String
  ownerCuratorGroup: CuratorGroup
  ownerCuratorGroupId: String
}

type Video implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  channel: Channel!
  channelId: String!
  category: VideoCategory
  categoryId: String

  # The title of the video
  title: String

  # The description of the Video
  description: String

  # Video duration in seconds
  duration: Int
  thumbnailPhoto: StorageDataObject
  thumbnailPhotoId: String
  language: Language
  languageId: String

  # Whether or not Video contains marketing
  hasMarketing: Boolean

  # If the Video was published on other platform before beeing published on Joystream - the original publication date
  publishedBeforeJoystream: DateTime

  # Whether the Video is supposed to be publically displayed
  isPublic: Boolean

  # Flag signaling whether a video is censored.
  isCensored: Boolean!
  nft: OwnedNft
  nftId: String

  # Whether the Video contains explicit material.
  isExplicit: Boolean
  license: License
  licenseId: String
  media: StorageDataObject
  mediaId: String
  mediaMetadata: VideoMediaMetadata
  mediaMetadataId: String
  createdInBlock: Int!

  # Is video featured or not
  isFeatured: Boolean!

  # Is comment section enabled (true if enabled)
  isCommentSectionEnabled: Boolean!
  pinnedComment: Comment
  comments: [Comment!]!

  # Comments count
  commentsCount: Int!

  # Is reactions feature enabled on video (true if enabled i.e. video can be reacted)
  isReactionFeatureEnabled: Boolean!
  reactions: [VideoReaction!]!
  reactionsCountByReactionId: [VideoReactionsCountByReactionType!]!

  # Reactions count
  reactionsCount: Int!
  auctionbidcanceledeventvideo: [AuctionBidCanceledEvent!]
  auctionbidmadeeventvideo: [AuctionBidMadeEvent!]
  auctioncanceledeventvideo: [AuctionCanceledEvent!]
  bidmadecompletingauctioneventvideo: [BidMadeCompletingAuctionEvent!]
  buynowcanceledeventvideo: [BuyNowCanceledEvent!]
  buynowpriceupdatedeventvideo: [BuyNowPriceUpdatedEvent!]
  commentcreatedeventvideo: [CommentCreatedEvent!]
  commentdeletedeventvideo: [CommentDeletedEvent!]
  commentmoderatedeventvideo: [CommentModeratedEvent!]
  commentpinnedeventvideo: [CommentPinnedEvent!]
  commentreactedeventvideo: [CommentReactedEvent!]
  commentreactionvideo: [CommentReaction!]
  commentreactionscountbyreactionidvideo: [CommentReactionsCountByReactionId!]
  commenttextupdatedeventvideo: [CommentTextUpdatedEvent!]
  englishauctionsettledeventvideo: [EnglishAuctionSettledEvent!]
  englishauctionstartedeventvideo: [EnglishAuctionStartedEvent!]
  nftboughteventvideo: [NftBoughtEvent!]
  nftissuedeventvideo: [NftIssuedEvent!]
  nftsellordermadeeventvideo: [NftSellOrderMadeEvent!]
  nftslingedbacktotheoriginalartisteventvideo: [NftSlingedBackToTheOriginalArtistEvent!]
  offeracceptedeventvideo: [OfferAcceptedEvent!]
  offercanceledeventvideo: [OfferCanceledEvent!]
  offerstartedeventvideo: [OfferStartedEvent!]
  openauctionbidacceptedeventvideo: [OpenAuctionBidAcceptedEvent!]
  openauctionstartedeventvideo: [OpenAuctionStartedEvent!]
  videoreactedeventvideo: [VideoReactedEvent!]
  videoreactionspreferenceeventvideo: [VideoReactionsPreferenceEvent!]
}

type VideoCategory implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # The name of the category
  name: String

  # Count of channel's videos with an uploaded asset that are public and not censored.
  activeVideosCounter: Int!
  videos: [Video!]!
  createdInBlock: Int!
}

type Language implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Language identifier ISO 639-1
  iso: String!
  createdInBlock: Int!
  channellanguage: [Channel!]
  videolanguage: [Video!]
}

# Represents NFT details
type OwnedNft implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  video: Video!
  auctions: [Auction!]!
  ownerMember: Membership
  ownerMemberId: String

  # NFT's metadata
  metadata: String!

  # NFT's non-auction transactional status (if any)
  transactionalStatus: TransactionalStatus
  transactionalStatusAuction: Auction
  transactionalStatusAuctionId: String
  transactionalStatusUpdates: [TransactionalStatusUpdate!]!

  # Creator royalty
  creatorRoyalty: Float
  ownerCuratorGroup: CuratorGroup
  ownerCuratorGroupId: String

  # Is NFT owned by channel
  isOwnedByChannel: Boolean!
  creatorChannel: Channel!
  creatorChannelId: String!

  # NFT's last sale price (if any)
  lastSalePrice: BigInt

  # NFT's last sale date (if any)
  lastSaleDate: DateTime
  bids: [Bid!]!
}

# Represents NFT auction
type Auction implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  nft: OwnedNft!
  nftId: String!
  initialOwner: Membership
  initialOwnerId: String
  winningMember: Membership
  winningMemberId: String

  # Auction starting price
  startingPrice: BigInt!

  # Whether auction can be completed instantly
  buyNowPrice: BigInt

  # The type of auction
  auctionType: AuctionType!
  topBid: Bid
  topBidId: String
  bids: [Bid!]!

  # Block when auction starts
  startsAtBlock: Int!

  # Block when auction ended
  endedAtBlock: Int

  # Is auction canceled
  isCanceled: Boolean!

  # Is auction completed
  isCompleted: Boolean!
  whitelistedMembers: [Membership!]!
  englishauctionstartedeventauction: [EnglishAuctionStartedEvent!]
  openauctionstartedeventauction: [OpenAuctionStartedEvent!]
  ownednfttransactionalStatusAuction: [OwnedNft!]
  transactionalstatusupdatetransactionalStatusAuction: [TransactionalStatusUpdate!]
}

union AuctionType = AuctionTypeEnglish | AuctionTypeOpen

type AuctionTypeEnglish {
  # English auction duration
  duration: Int!

  # Auction extension time
  extensionPeriod: Int!

  # Block when auction is supposed to end
  plannedEndAtBlock: Int!

  # Minimal step between auction bids
  minimalBidStep: Float!
}

type AuctionTypeOpen {
  # Auction bid lock duration
  bidLockDuration: Int!
}

# Represents bid in NFT auction
type Bid implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  auction: Auction!
  auctionId: String!
  nft: OwnedNft!
  nftId: String!
  auctionTopBid: Auction
  bidder: Membership!
  bidderId: String!

  # Amount bidded
  amount: BigInt!

  # Sign for canceled bid
  isCanceled: Boolean!

  # Block in which the bid was placed
  createdInBlock: Int!

  # Index of event in block where bid was made.
  indexInBlock: Int!
  auctionbidmadeeventpreviousTopBid: [AuctionBidMadeEvent!]
  bidmadecompletingauctioneventwinningBid: [BidMadeCompletingAuctionEvent!]
  bidmadecompletingauctioneventpreviousTopBid: [BidMadeCompletingAuctionEvent!]
  englishauctionsettledeventwinningBid: [EnglishAuctionSettledEvent!]
  openauctionbidacceptedeventwinningBid: [OpenAuctionBidAcceptedEvent!]
}

type AuctionBidMadeEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted.
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in.
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  member: Membership!
  memberId: String!
  video: Video!
  videoId: String!

  # Bid made.
  bidAmount: BigInt!
  ownerMember: Membership
  ownerMemberId: String
  ownerCuratorGroup: CuratorGroup
  ownerCuratorGroupId: String
  previousTopBid: Bid
  previousTopBidId: String
  previousTopBidder: Membership
  previousTopBidderId: String
}

type BidMadeCompletingAuctionEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted.
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in.
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  member: Membership!
  memberId: String!
  video: Video!
  videoId: String!
  ownerMember: Membership
  ownerMemberId: String
  ownerCuratorGroup: CuratorGroup
  ownerCuratorGroupId: String

  # Price for which the NFT was bought
  price: BigInt!
  winningBid: Bid!
  winningBidId: String!
  previousTopBid: Bid
  previousTopBidId: String
  previousTopBidder: Membership
  previousTopBidderId: String
  bidders: [Membership!]!
}

type EnglishAuctionSettledEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted.
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in.
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  winner: Membership!
  winnerId: String!
  winningBid: Bid!
  winningBidId: String!
  video: Video!
  videoId: String!
  bidders: [Membership!]!
  ownerMember: Membership
  ownerMemberId: String
  ownerCuratorGroup: CuratorGroup
  ownerCuratorGroupId: String
}

type OpenAuctionBidAcceptedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted.
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in.
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Content actor that accepted the bid.
  contentActor: ContentActor!
  video: Video!
  videoId: String!
  ownerMember: Membership
  ownerMemberId: String
  ownerCuratorGroup: CuratorGroup
  ownerCuratorGroupId: String
  winningBid: Bid
  winningBidId: String
  winningBidder: Membership
  winningBidderId: String
  bidders: [Membership!]!
}

union ContentActor =
    ContentActorCurator
  | ContentActorMember
  | ContentActorLead
  | ContentActorCollaborator

type ContentActorCurator {
  # Type needs to have at least one non-relation entity. This value is not used.
  dummy: Int
  curator: Curator
}

type ContentActorMember {
  # Type needs to have at least one non-relation entity. This value is not used.
  dummy: Int
  member: Membership
}

type ContentActorLead {
  # Type needs to have at least one non-relation entity. This value is not used.
  dummy: Int
}

type ContentActorCollaborator {
  # Type needs to have at least one non-relation entity. This value is not used.
  dummy: Int
  member: Membership
}

type EnglishAuctionStartedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted.
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in.
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Actor that started this auction.
  actor: ContentActor!
  video: Video!
  videoId: String!
  auction: Auction!
  auctionId: String!
  ownerMember: Membership
  ownerMemberId: String
  ownerCuratorGroup: CuratorGroup
  ownerCuratorGroupId: String
}

type OpenAuctionStartedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted.
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in.
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Actor that started this auction.
  actor: ContentActor!
  video: Video!
  videoId: String!
  auction: Auction!
  auctionId: String!
  ownerMember: Membership
  ownerMemberId: String
  ownerCuratorGroup: CuratorGroup
  ownerCuratorGroupId: String
}

type TransactionalStatusUpdate implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  nft: OwnedNft!
  nftId: String!

  # NFT's non-auction transactional status (if any)
  transactionalStatus: TransactionalStatus
  transactionalStatusAuction: Auction
  transactionalStatusAuctionId: String

  # Block number at which change happened
  changedAt: Int!
}

union TransactionalStatus =
    TransactionalStatusIdle
  | TransactionalStatusInitiatedOfferToMember
  | TransactionalStatusBuyNow

type TransactionalStatusIdle {
  # Type needs to have at least one non-relation entity. This value is not used.
  dummy: Int
}

type TransactionalStatusInitiatedOfferToMember {
  # Member identifier
  memberId: Int!

  # Whether member should pay to accept offer (optional)
  price: Float
}

type TransactionalStatusBuyNow {
  price: Float!
}

type License implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # License code defined by Joystream
  code: Int

  # Attribution (if required by the license)
  attribution: String

  # Custom license content
  customText: String
  videolicense: [Video!]
}

type VideoMediaMetadata implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  encoding: VideoMediaEncoding
  encodingId: String

  # Video media width in pixels
  pixelWidth: Int

  # Video media height in pixels
  pixelHeight: Int

  # Video media size in bytes
  size: BigInt
  video: Video
  createdInBlock: Int!
}

type VideoMediaEncoding implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Encoding of the video media object
  codecName: String

  # Media container format
  container: String

  # Content MIME type
  mimeMediaType: String
  videomediametadataencoding: [VideoMediaMetadata!]
}

type Comment implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  author: Membership!
  authorId: String!

  # Comment text
  text: String!
  video: Video!
  videoId: String!

  # Status of the comment; either it is visible, deleted, or moderated (deleted by moderator)
  status: CommentStatus!
  reactions: [CommentReaction!]!
  reactionsCountByReactionId: [CommentReactionsCountByReactionId!]!
  parentComment: Comment
  parentCommentId: String

  # How many comments has replied to this comment
  repliesCount: Int!

  # Total number of reactions to this comment
  reactionsCount: Int!

  # Sum of replies and reactions
  reactionsAndRepliesCount: Int!

  # Whether comment has been edited or not
  isEdited: Boolean!
  edits: [CommentTextUpdatedEvent!]!
  deletedInEvent: CommentDeletedEvent
  moderatedInEvent: CommentModeratedEvent
  commentparentComment: [Comment!]
  commentcreatedeventcomment: [CommentCreatedEvent!]
  commentpinnedeventcomment: [CommentPinnedEvent!]
  commentreactedeventcomment: [CommentReactedEvent!]
}

type CommentReaction implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # The Reaction id
  reactionId: Int!
  member: Membership!

  # ID of the member that reacted
  memberId: String!
  comment: Comment!
  commentId: String!
  video: Video!
  videoId: String!
}

type CommentReactionsCountByReactionId implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # The reaction id
  reactionId: Int!

  # No of times the comment has been reacted with given reaction Id
  count: Int!
  comment: Comment!
  commentId: String!
  video: Video!
  videoId: String!
}

type CommentTextUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  comment: Comment!
  commentId: String!
  video: Video!
  videoId: String!
  videoChannel: Channel!
  videoChannelId: String!

  # New comment text
  newText: String!
}

type CommentDeletedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  comment: Comment!
  commentId: String!
  video: Video!
  videoId: String!
  videoChannel: Channel!
  videoChannelId: String!
}

type CommentModeratedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  comment: Comment!
  commentId: String!
  video: Video!
  videoId: String!
  videoChannel: Channel!
  videoChannelId: String!

  # The actor responsible for the removal of comment
  actor: ContentActor!

  # Comment deletion rationale
  rationale: String!
}

type CommentCreatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  comment: Comment!
  commentId: String!
  parentCommentAuthor: Membership
  parentCommentAuthorId: String
  video: Video!
  videoId: String!
  videoChannel: Channel!
  videoChannelId: String!

  # Comment's original text
  text: String!
}

type CommentPinnedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  comment: Comment!
  commentId: String!
  video: Video!
  videoId: String!
  videoChannel: Channel!
  videoChannelId: String!

  # The action performed. true if comment is pinned, otherwise false.
  action: Boolean!
}

type CommentReactedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  comment: Comment!
  commentId: String!
  video: Video!
  videoId: String!
  videoChannel: Channel!
  videoChannelId: String!

  # The reaction id
  reactionResult: Int!
  reactingMember: Membership!
  reactingMemberId: String!
}

type VideoReaction implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # The Reaction
  reaction: VideoReactionOptions!
  member: Membership!

  # ID of the member that reacted
  memberId: String!
  video: Video!
  videoId: String!
}

type VideoReactionsCountByReactionType implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # The reaction option
  reaction: VideoReactionOptions!

  # No of times the video has been reacted with given reaction
  count: Int!
  video: Video!
  videoId: String!
}

type AuctionCanceledEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted.
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in.
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Content actor canceling the event.
  contentActor: ContentActor!
  video: Video!
  videoId: String!
  ownerMember: Membership
  ownerMemberId: String
  ownerCuratorGroup: CuratorGroup
  ownerCuratorGroupId: String
}

type BuyNowCanceledEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted.
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in.
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  video: Video!
  videoId: String!

  # Content actor acting as NFT owner.
  contentActor: ContentActor!
  ownerMember: Membership
  ownerMemberId: String
  ownerCuratorGroup: CuratorGroup
  ownerCuratorGroupId: String
}

type BuyNowPriceUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted.
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in.
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  video: Video!
  videoId: String!

  # Content actor acting as NFT owner.
  contentActor: ContentActor!

  # New buy-now price.
  newPrice: BigInt!
  ownerMember: Membership
  ownerMemberId: String
  ownerCuratorGroup: CuratorGroup
  ownerCuratorGroupId: String
}

type NftBoughtEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted.
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in.
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  video: Video!
  videoId: String!
  member: Membership!
  memberId: String!
  ownerMember: Membership
  ownerMemberId: String
  ownerCuratorGroup: CuratorGroup
  ownerCuratorGroupId: String

  # Price for which NFT was bought
  price: BigInt!
}

type NftIssuedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted.
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in.
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Content actor that issued the NFT.
  contentActor: ContentActor!
  video: Video!
  videoId: String!

  # Royalty for the NFT/video.
  royalty: Float

  # NFT's metadata.
  metadata: String!
  ownerMember: Membership
  ownerMemberId: String
  ownerCuratorGroup: CuratorGroup
  ownerCuratorGroupId: String
}

type NftSellOrderMadeEvent implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Hash of the extrinsic which caused the event to be emitted.
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in.
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!
  video: Video!
  videoId: String!

  # Content actor acting as NFT owner.
  contentActor: ContentActor!
  ownerMember: Membership
  ownerMemberId: String
  ownerCuratorGroup: CuratorGroup
  ownerCuratorGroupId: String

  # Offer's price.
  price: BigInt!
}

type NftSlingedBackToTheOriginalArtistEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted.
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in.
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  video: Video!
  videoId: String!

  # Content actor who slung back the NFT.
  contentActor: ContentActor!
  ownerMember: Membership
  ownerMemberId: String
  ownerCuratorGroup: CuratorGroup
  ownerCuratorGroupId: String
}

type OfferAcceptedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted.
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in.
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  video: Video!
  videoId: String!
  ownerMember: Membership
  ownerMemberId: String
  ownerCuratorGroup: CuratorGroup
  ownerCuratorGroupId: String

  # Price for which the NFT was bought
  price: BigInt
}

type OfferCanceledEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted.
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in.
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  video: Video!
  videoId: String!

  # Content actor acting as NFT owner.
  contentActor: ContentActor!
  ownerMember: Membership
  ownerMemberId: String
  ownerCuratorGroup: CuratorGroup
  ownerCuratorGroupId: String
}

type OfferStartedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted.
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in.
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  video: Video!
  videoId: String!

  # Content actor acting as NFT owner.
  contentActor: ContentActor!
  member: Membership!
  memberId: String!

  # Offer's price.
  price: BigInt
  ownerMember: Membership
  ownerMemberId: String
  ownerCuratorGroup: CuratorGroup
  ownerCuratorGroupId: String
}

type VideoReactedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  video: Video!
  videoId: String!
  videoChannel: Channel!
  videoChannelId: String!

  # The reaction result
  reactionResult: VideoReactionOptions!
  reactingMember: Membership!
  reactingMemberId: String!
}

type VideoReactionsPreferenceEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  video: Video!
  videoId: String!

  # Is comment section enabled (true if enabled)
  reactionsStatus: Boolean!
}

# Category of media channel
type ChannelCategory implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # The name of the category
  name: String

  # Count of channel's videos with an uploaded asset that are public and not censored.
  activeVideosCounter: Int!
  channels: [Channel!]!
  createdInBlock: Int!
}

type MemberBannedFromChannelEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  channel: Channel!
  channelId: String!
  member: Membership!
  memberId: String!

  # The action performed. true if member is banned, false if member is unbanned
  action: Boolean!
}

type DataObjectTypeChannelCoverPhoto {
  # Related channel entity
  channel: Channel
}

type DataObjectTypeVideoMedia {
  # Related video entity
  video: Video
}

type DataObjectTypeVideoThumbnail {
  # Related video entity
  video: Video
}

type DataObjectTypeUnknown {
  phantom: Int
}

type AvatarUri {
  # The avatar URL
  avatarUri: String!
}

type MembershipExternalResource implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  type: MembershipExternalResourceType!
  value: String!
  memberMetadata: MemberMetadata!
  memberMetadataId: String!
}

type MemberInvitedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  invitingMember: Membership!
  invitingMemberId: String!
  newMember: Membership!
  newMemberId: String!

  # New member root account in SS58 encoding.
  rootAccount: String!

  # New member controller in SS58 encoding.
  controllerAccount: String!

  # New member handle.
  handle: String!
  metadata: MemberMetadata!
  metadataId: String!
}

type MemberProfileUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  member: Membership!
  memberId: String!

  # New member handle. Null means no new value was provided.
  newHandle: String
  newMetadata: MemberMetadata!
  newMetadataId: String!
}

type MembershipBoughtEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  newMember: Membership!
  newMemberId: String!

  # New member root account in SS58 encoding.
  rootAccount: String!

  # New member controller in SS58 encoding.
  controllerAccount: String!

  # New member handle.
  handle: String!
  metadata: MemberMetadata!
  metadataId: String!
  referrer: Membership
  referrerId: String
}

union MembershipEntryMethod =
    MembershipEntryPaid
  | MembershipEntryInvited
  | MembershipEntryGenesis

type MembershipEntryPaid {
  # The event the membership was bought in
  membershipBoughtEvent: MembershipBoughtEvent
}

type MembershipEntryInvited {
  # The event the member was invited in
  memberInvitedEvent: MemberInvitedEvent
}

type MembershipEntryGenesis {
  phantom: Int
}

type ProposalDiscussionWhitelist implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  phantom: Int
  members: [Membership!]!
}

type BountyEntrantWhitelist implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  phantom: Int
  members: [Membership!]!
  bountyentrantWhitelist: [Bounty!]
}

type Bounty implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Bounty title
  title: String

  # Bounty description
  description: String

  # Bounty image uri
  bannerImageUri: String

  # Amount of funding provided by the creator
  cherry: BigInt!

  # Stake minimum amount required to submit work entry to the bounty
  entrantStake: BigInt!
  creator: Membership
  creatorId: String
  oracle: Membership
  oracleId: String

  # Bounty funding type
  fundingType: BountyFundingType!
  entrantWhitelist: BountyEntrantWhitelist
  entrantWhitelistId: String

  # Number of blocks from end of funding period until people can no longer submit bounty submissions
  workPeriod: Int!

  # Number of block from end of work period until oracle can no longer decide winners
  judgingPeriod: Int!

  # Current bounty stage
  stage: BountyStage!

  # Total amount once contributed to the bounty (excluding the cherry)
  totalFunding: BigInt!
  discussionThread: ForumThread
  discussionThreadId: String
  contributions: [BountyContribution!]
  entries: [BountyEntry!]

  # If true the bounty lifecycle ended and its state will not change anymore
  isTerminated: Boolean!
  createdInEvent: BountyCreatedEvent!
  canceledEvent: BountyCanceledEvent
  vetoedEvent: BountyVetoedEvent
  maxFundingReachedEvent: BountyMaxFundingReachedEvent
  removedInEvent: BountyRemovedEvent
  judgment: OracleJudgmentSubmittedEvent
  bountycreatorcherrywithdrawaleventbounty: [BountyCreatorCherryWithdrawalEvent!]
  worksubmittedeventbounty: [WorkSubmittedEvent!]
}

union BountyFundingType = BountyFundingPerpetual | BountyFundingLimited

type BountyFundingPerpetual {
  # Desired funding
  target: Float!
}

type BountyFundingLimited {
  # Minimum amount of funds for a successful bounty
  minFundingAmount: Float!

  # Upper boundary for a bounty funding
  maxFundingAmount: Float!

  # Maximum allowed funding period
  fundingPeriod: Int!
}

type ForumThread implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  author: Membership!
  authorId: String!
  category: ForumCategory!
  categoryId: String!

  # Thread title
  title: String!
  posts: [ForumPost!]!
  initialPost: ForumPost
  initialPostId: String

  # Number of non-deleted posts in the thread
  visiblePostsCount: Int!
  poll: ForumPoll

  # Whether the thread is sticky in the category
  isSticky: Boolean!
  createdInEvent: ThreadCreatedEvent!

  # Current thread status
  status: ThreadStatus!

  # True if the thread is either Active or Locked
  isVisible: Boolean!
  metadataUpdates: [ThreadMetadataUpdatedEvent!]!
  madeStickyInEvents: [CategoryStickyThreadUpdateEvent!]!
  movedInEvents: [ThreadMovedEvent!]!
  tags: [ForumThreadTag!]!
  bountydiscussionThread: [Bounty!]
  threaddeletedeventthread: [ThreadDeletedEvent!]
  threadmoderatedeventthread: [ThreadModeratedEvent!]
}

type ForumCategory implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  parent: ForumCategory
  parentId: String

  # Category title
  title: String!

  # Category description
  description: String!
  threads: [ForumThread!]!
  moderators: [Worker!]!
  createdInEvent: CategoryCreatedEvent!

  # Current category status
  status: CategoryStatus!
  categoryarchivalstatusupdatedeventcategory: [CategoryArchivalStatusUpdatedEvent!]
  categorydeletedeventcategory: [CategoryDeletedEvent!]
  categorymembershipofmoderatorupdatedeventcategory: [CategoryMembershipOfModeratorUpdatedEvent!]
  categorystickythreadupdateeventcategory: [CategoryStickyThreadUpdateEvent!]
  forumcategoryparent: [ForumCategory!]
  threadmovedeventoldCategory: [ThreadMovedEvent!]
  threadmovedeventnewCategory: [ThreadMovedEvent!]
}

type CategoryCreatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  category: ForumCategory!
  categoryId: String!
}

union CategoryStatus =
    CategoryStatusActive
  | CategoryStatusArchived
  | CategoryStatusRemoved

type CategoryStatusActive {
  phantom: Int
}

type CategoryStatusArchived {
  # Event the category was archived in
  categoryArchivalStatusUpdatedEvent: CategoryArchivalStatusUpdatedEvent
}

type CategoryArchivalStatusUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  category: ForumCategory!
  categoryId: String!

  # The new archival status of the category (true = archived)
  newArchivalStatus: Boolean!
  actor: Worker!
  actorId: String!
}

type CategoryStatusRemoved {
  # Event the category was deleted in
  categoryDeletedEvent: CategoryDeletedEvent
}

type CategoryDeletedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  category: ForumCategory!
  categoryId: String!
  actor: Worker!
  actorId: String!
}

type CategoryMembershipOfModeratorUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  moderator: Worker!
  moderatorId: String!
  category: ForumCategory!
  categoryId: String!

  # The flag indicating whether the permissions to moderate the category are granted or revoked
  newCanModerateValue: Boolean!
}

type CategoryStickyThreadUpdateEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  category: ForumCategory!
  categoryId: String!
  newStickyThreads: [ForumThread!]!
  actor: Worker!
  actorId: String!
}

type ThreadMovedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  thread: ForumThread!
  threadId: String!
  oldCategory: ForumCategory!
  oldCategoryId: String!
  newCategory: ForumCategory!
  newCategoryId: String!
  actor: Worker!
  actorId: String!
}

type ForumPost implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  author: Membership!
  authorId: String!
  thread: ForumThread!
  threadId: String!

  # Content of the post (md-formatted)
  text: String!
  repliesTo: ForumPost
  repliesToId: String

  # Current post status
  status: PostStatus!

  # True if the post is either Active or Locked
  isVisible: Boolean!

  # The origin of the post (either thread creation event or regular PostAdded event)
  origin: PostOrigin!
  edits: [PostTextUpdatedEvent!]!
  reactions: [ForumPostReaction!]!
  deletedInEvent: PostDeletedEvent
  deletedInEventId: String
  forumpostrepliesTo: [ForumPost!]
  forumthreadinitialPost: [ForumThread!]
  postaddedeventpost: [PostAddedEvent!]
  postmoderatedeventpost: [PostModeratedEvent!]
  postreactedeventpost: [PostReactedEvent!]
}

union PostStatus =
    PostStatusActive
  | PostStatusLocked
  | PostStatusModerated
  | PostStatusRemoved

type PostStatusActive {
  phantom: Int
}

type PostStatusLocked {
  # Post deleted event in case the post became locked through runtime removal
  postDeletedEvent: PostDeletedEvent
}

type PostDeletedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  posts: [ForumPost!]!
  actor: Membership!
  actorId: String!

  # Posts deletion rationale
  rationale: String!
}

type PostStatusModerated {
  # Event the post was moderated in
  postModeratedEvent: PostModeratedEvent
}

type PostModeratedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  post: ForumPost!
  postId: String!

  # The rationale behind the moderation
  rationale: String!
  actor: Worker!
  actorId: String!
}

type PostStatusRemoved {
  # Event the post was removed in
  postDeletedEvent: PostDeletedEvent
}

union PostOrigin = PostOriginThreadInitial | PostOriginThreadReply

type PostOriginThreadInitial {
  # Thread creation event
  threadCreatedEvent: ThreadCreatedEvent
}

type ThreadCreatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  thread: ForumThread!
  threadId: String!

  # Thread's original title
  title: String!

  # Thread's original text
  text: String!
}

type PostOriginThreadReply {
  # Related PostAdded event
  postAddedEvent: PostAddedEvent
}

type PostAddedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  post: ForumPost!
  postId: String!

  # Whether the added post is editable
  isEditable: Boolean

  # Post's original text
  text: String!
}

type PostTextUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  post: ForumPost!
  postId: String!

  # New post text
  newText: String!
}

type ForumPostReaction implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  member: Membership!
  memberId: String!
  post: ForumPost!
  postId: String!

  # The reaction
  reaction: PostReaction!
}

type PostReactedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  post: ForumPost!
  postId: String!

  # The reaction result - new valid reaction, cancelation of previous reaction or invalid reaction (which also cancels the previous one)
  reactionResult: PostReactionResult!
  reactingMember: Membership!
  reactingMemberId: String!
}

union PostReactionResult =
    PostReactionResultCancel
  | PostReactionResultValid
  | PostReactionResultInvalid

type PostReactionResultCancel {
  phantom: Int
}

type PostReactionResultValid {
  reaction: PostReaction!
  reactionId: Int!
}

type PostReactionResultInvalid {
  reactionId: String!
}

type ForumPoll implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  thread: ForumThread!
  threadId: String!

  # Poll description
  description: String!

  # The time at which the poll ends
  endTime: DateTime!
  pollAlternatives: [ForumPollAlternative!]!
}

type ForumPollAlternative implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Index uniquely identifying the alternative in given poll
  index: Int!
  poll: ForumPoll!
  pollId: String!

  # The alternative text
  text: String!
  votes: [VoteOnPollEvent!]!
}

type VoteOnPollEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  pollAlternative: ForumPollAlternative!
  pollAlternativeId: String!
  votingMember: Membership!
  votingMemberId: String!
}

union ThreadStatus =
    ThreadStatusActive
  | ThreadStatusLocked
  | ThreadStatusModerated
  | ThreadStatusRemoved

type ThreadStatusActive {
  phantom: Int
}

type ThreadStatusLocked {
  # Event the thread was deleted (locked) in
  threadDeletedEvent: ThreadDeletedEvent
}

type ThreadDeletedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  thread: ForumThread!
  threadId: String!
}

type ThreadStatusModerated {
  # Event the thread was moderated in
  threadModeratedEvent: ThreadModeratedEvent
}

type ThreadModeratedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  thread: ForumThread!
  threadId: String!

  # Rationale behind the moderation
  rationale: String!
  actor: Worker!
  actorId: String!
}

type ThreadStatusRemoved {
  # Event the thread was removed in
  threadDeletedEvent: ThreadDeletedEvent
}

type ThreadMetadataUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  thread: ForumThread!
  threadId: String!

  # New title of the thread
  newTitle: String
}

type ForumThreadTag implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  threads: [ForumThread!]!

  # Number of non-removed threads currently assigned to the tag
  visibleThreadsCount: Int!
}

type BountyContribution implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  bounty: Bounty!
  bountyId: String!
  contributor: Membership

  # The id of the contributor
  contributorId: String

  # Amount of the contribution
  amount: BigInt!
  bountyFundedEvents: [BountyFundedEvent!]!
  withdrawnInEvent: BountyFundingWithdrawalEvent
}

type BountyFundedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  contribution: BountyContribution!
  contributionId: String!
}

type BountyFundingWithdrawalEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  contribution: BountyContribution!
  contributionId: String!
}

type BountyEntry implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  bounty: Bounty!
  bountyId: String!
  worker: Membership!
  workerId: String!

  # Staking account with the work entry stake
  stakingAccount: String

  # Whether at least one work has been submitted
  workSubmitted: Boolean!

  # Work entry status
  status: BountyEntryStatus!
  announcedInEvent: WorkEntryAnnouncedEvent!
  withdrawnInEvent: WorkEntryWithdrawnEvent
  slashedInEvent: WorkEntrySlashedEvent
  works: [WorkSubmittedEvent!]
  cashedOutInEvent: WorkEntrantFundsWithdrawnEvent
}

union BountyEntryStatus =
    BountyEntryStatusWorking
  | BountyEntryStatusWithdrawn
  | BountyEntryStatusWinner
  | BountyEntryStatusPassed
  | BountyEntryStatusRejected

type BountyEntryStatusWorking {
  dummy: Int
}

type BountyEntryStatusWithdrawn {
  dummy: Int
}

type BountyEntryStatusWinner {
  reward: Float!
}

type BountyEntryStatusPassed {
  dummy: Int
}

type BountyEntryStatusRejected {
  dummy: Int
}

type WorkEntryAnnouncedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  entry: BountyEntry!
  entryId: String!
}

type WorkEntryWithdrawnEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  entry: BountyEntry!
  entryId: String!
}

type WorkEntrySlashedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  entry: BountyEntry!
  entryId: String!
}

type WorkSubmittedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  bounty: Bounty!
  bountyId: String!
  entry: BountyEntry!
  entryId: String!

  # Title of the work
  title: String

  # Description which contains the work itself as a URL, a BLOB, or just text
  description: String
}

type WorkEntrantFundsWithdrawnEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  entry: BountyEntry!
  entryId: String!
}

type BountyCreatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  bounty: Bounty!
  bountyId: String!
}

type BountyCanceledEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  bounty: Bounty!
  bountyId: String!
}

type BountyVetoedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  bounty: Bounty!
  bountyId: String!
}

type BountyMaxFundingReachedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  bounty: Bounty!
  bountyId: String!
}

type BountyRemovedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  bounty: Bounty!
  bountyId: String!
}

type OracleJudgmentSubmittedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  bounty: Bounty!
  bountyId: String!

  # Rationale of the judgment
  rationale: String
}

type BountyCreatorCherryWithdrawalEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  bounty: Bounty!
  bountyId: String!
}

type Candidate implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Account used for staking currency needed for the candidacy.
  stakingAccountId: String!

  # Account that will receive rewards if candidate's elected to the council.
  rewardAccountId: String!
  member: Membership!
  memberId: String!
  electionRound: ElectionRound!
  electionRoundId: String!

  # Stake locked for the candidacy.
  stake: BigInt!

  # Reflects if the stake is still locked for candidacy or has been already released by the member.
  stakeLocked: Boolean!

  # Current candidate status
  status: CandidacyStatus!

  # Sum of power of all votes received.
  votePower: BigInt!

  # Block in which the last vote was received.
  lastVoteReceivedAtBlock: BigInt

  # Event number in block in which the last vote was received.
  lastVoteReceivedAtEventNumber: Int
  noteMetadata: CandidacyNoteMetadata!
  noteMetadataId: String!
  votesReceived: [CastVote!]!
  candidacynoteseteventcandidate: [CandidacyNoteSetEvent!]
  candidacystakereleaseeventcandidate: [CandidacyStakeReleaseEvent!]
  candidacywithdraweventcandidate: [CandidacyWithdrawEvent!]
  newcandidateeventcandidate: [NewCandidateEvent!]
}

type ElectionRound implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Election cycle ID.
  cycleId: Int!

  # Sign if election has already finished.
  isFinished: Boolean!

  # Block number at which the election ended.
  endedAtBlock: Int

  # Time at which the election ended.
  endedAtTime: DateTime

  # Network running at the time the election ended.
  endedAtNetwork: Network
  castVotes: [CastVote!]!
  referendumStageVoting: ReferendumStageVoting
  referendumStageRevealing: ReferendumStageRevealing
  electedCouncil: ElectedCouncil!
  electedCouncilId: String!
  nextElectedCouncil: ElectedCouncil
  nextElectedCouncilId: String
  candidates: [Candidate!]!
  newcandidateeventelectionRound: [NewCandidateEvent!]
}

type CastVote implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Hashed vote that was casted before being revealed. Hex format.
  commitment: String!
  electionRound: ElectionRound!
  electionRoundId: String!

  # Stake used to back up the vote.
  stake: BigInt!

  # Reflects if the stake is still locked for candidacy or has been already released by the member.
  stakeLocked: Boolean!

  # Account that cast the vote.
  castBy: String!
  voteFor: Candidate
  voteForId: String

  # Vote's power.
  votePower: BigInt!
  votecasteventcastVote: [VoteCastEvent!]
  voterevealedeventcastVote: [VoteRevealedEvent!]
}

type VoteCastEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  castVote: CastVote!
  castVoteId: String!
}

type VoteRevealedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  castVote: CastVote!
  castVoteId: String!
}

type ReferendumStageVoting implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Block in which referendum started.
  startedAtBlock: BigInt!

  # Target number of winners.
  winningTargetCount: BigInt!
  electionRound: ElectionRound!
  electionRoundId: String!
}

type ReferendumStageRevealing implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Block in which referendum started
  startedAtBlock: BigInt!

  # Target number of winners
  winningTargetCount: BigInt!
  electionRound: ElectionRound!
  electionRoundId: String!
}

type ElectedCouncil implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  councilMembers: [CouncilMember!]!
  updates: [CouncilStageUpdate!]!

  # Block number at which the council was elected.
  electedAtBlock: Int!

  # Block number at which the council reign ended and a new council was elected.
  endedAtBlock: Int

  # Time at which the council was elected.
  electedAtTime: DateTime!

  # Time at which the council reign ended and a new council was elected.
  endedAtTime: DateTime

  # Network running at the time of election.
  electedAtNetwork: Network!

  # Network running at the time of resignation.
  endedAtNetwork: Network
  councilElections: [ElectionRound!]!
  nextCouncilElections: [ElectionRound!]!

  # Sign if council is already resigned.
  isResigned: Boolean!
  newcouncilelectedeventelectedCouncil: [NewCouncilElectedEvent!]
}

type CouncilMember implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Account used for staking currency for council membership.
  stakingAccountId: String!

  # Account that will receive used for reward currency for council membership.
  rewardAccountId: String!
  member: Membership!
  memberId: String!

  # Stake used for the council membership.
  stake: BigInt!

  # Block number in which council member received the last reward payment.
  lastPaymentBlock: BigInt!

  # Reward amount that should have been paid but couldn't be paid off due to insufficient budget.
  unpaidReward: BigInt!

  # Amount of reward collected by this council member so far.
  accumulatedReward: BigInt!
  electedInCouncil: ElectedCouncil!
  electedInCouncilId: String!
  rewardpaymenteventcouncilMember: [RewardPaymentEvent!]
}

type RewardPaymentEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  councilMember: CouncilMember!
  councilMemberId: String!

  # Candidate's account that will be recieving rewards if candidate's elected.
  rewardAccount: String!

  # Amount paid to the council member
  paidBalance: BigInt!

  # Amount that couldn't be paid and will be paid the next time.
  missingBalance: BigInt!
}

type CouncilStageUpdate implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # The new stage council got into.
  stage: CouncilStage!

  # Block number at which change happened.
  changedAt: BigInt!
  electedCouncil: ElectedCouncil
  electedCouncilId: String

  # Election not completed due to insufficient candidates or winners.
  electionProblem: ElectionProblem
}

union CouncilStage =
    CouncilStageAnnouncing
  | CouncilStageElection
  | CouncilStageIdle
  | VariantNone

type CouncilStageAnnouncing {
  # Number of candidates aspiring to be elected as council members.
  candidatesCount: Float!
}

type CouncilStageElection {
  # Number of candidates aspiring to be elected as council members.
  candidatesCount: Float!
}

type CouncilStageIdle {
  dummy: Int
}

type VariantNone {
  phantom: Int
}

type NewCouncilElectedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  electedCouncil: ElectedCouncil!
  electedCouncilId: String!
}

type NewCandidateEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  candidate: Candidate!
  candidateId: String!
  electionRound: ElectionRound!
  electionRoundId: String!

  # Candidate's account used to stake currency.
  stakingAccount: String!

  # Candidate's account that will be recieving rewards if candidate's elected.
  rewardAccount: String!

  # Amount of currency to be staked for the candidacy.
  balance: BigInt!
}

type CandidacyNoteMetadata implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Candidacy header text.
  header: String

  # Candidate program in form of bullet points. Takes array with one empty string [''] as deletion request.
  bulletPoints: [String!]!

  # Image uri of candidate's banner.
  bannerImageUri: String

  # Candidacy description (Markdown-formatted).
  description: String
  candidacynoteseteventnoteMetadata: [CandidacyNoteSetEvent!]
  candidatenoteMetadata: [Candidate!]
}

type CandidacyNoteSetEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  candidate: Candidate!
  candidateId: String!
  noteMetadata: CandidacyNoteMetadata!
  noteMetadataId: String!
}

type CandidacyStakeReleaseEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  candidate: Candidate!
  candidateId: String!
}

type CandidacyWithdrawEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  candidate: Candidate!
  candidateId: String!
}

type InvitesTransferredEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  sourceMember: Membership!
  sourceMemberId: String!
  targetMember: Membership!
  targetMemberId: String!

  # Number of invites transferred.
  numberOfInvites: Int!
}

type MemberAccountsUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  member: Membership!
  memberId: String!

  # New member root account in SS58 encoding. Null means no new value was provided.
  newRootAccount: String

  # New member controller in SS58 encoding. Null means no new value was provided.
  newControllerAccount: String
}

type MemberVerificationStatusUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  member: Membership!
  memberId: String!
  worker: Worker!
  workerId: String!

  # New status.
  isVerified: Boolean!
}

type Proposal implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Proposal title
  title: String!

  # Proposal description
  description: String!

  # Proposal details depending on proposal type
  details: ProposalDetails!

  # Staking account with proposal stake (in case a stake is required)
  stakingAccount: String
  creator: Membership!
  creatorId: String!
  createdInEvent: ProposalCreatedEvent!

  # Exact block number the proposal is supposed to be executed at (if specified)
  exactExecutionBlock: Int
  discussionThread: ProposalDiscussionThread!

  # How many prior councils have already approved the proposal (starts with 0)
  councilApprovals: Int!
  proposalStatusUpdates: [ProposalStatusUpdatedEvent!]!
  votes: [ProposalVotedEvent!]!

  # Current proposal status
  status: ProposalStatus!

  # If true then the proposal status is final and will not change form this point
  isFinalized: Boolean

  # Number of the block the current status was set at
  statusSetAtBlock: Int!

  # Time the current status was set at (based on block timestamp)
  statusSetAtTime: DateTime!
  proposalcancelledeventproposal: [ProposalCancelledEvent!]
  proposaldecisionmadeeventproposal: [ProposalDecisionMadeEvent!]
  proposalexecutedeventproposal: [ProposalExecutedEvent!]
}

union ProposalDetails =
    SignalProposalDetails
  | RuntimeUpgradeProposalDetails
  | FundingRequestProposalDetails
  | SetMaxValidatorCountProposalDetails
  | CreateWorkingGroupLeadOpeningProposalDetails
  | FillWorkingGroupLeadOpeningProposalDetails
  | UpdateWorkingGroupBudgetProposalDetails
  | DecreaseWorkingGroupLeadStakeProposalDetails
  | SlashWorkingGroupLeadProposalDetails
  | SetWorkingGroupLeadRewardProposalDetails
  | TerminateWorkingGroupLeadProposalDetails
  | AmendConstitutionProposalDetails
  | CancelWorkingGroupLeadOpeningProposalDetails
  | SetMembershipPriceProposalDetails
  | SetCouncilBudgetIncrementProposalDetails
  | SetCouncilorRewardProposalDetails
  | SetInitialInvitationBalanceProposalDetails
  | SetInitialInvitationCountProposalDetails
  | SetMembershipLeadInvitationQuotaProposalDetails
  | SetReferralCutProposalDetails
  | CreateBlogPostProposalDetails
  | EditBlogPostProposalDetails
  | LockBlogPostProposalDetails
  | UnlockBlogPostProposalDetails
  | VetoProposalDetails

type SignalProposalDetails {
  # Signal proposal content
  text: String!
}

type RuntimeUpgradeProposalDetails {
  # Runtime upgrade WASM bytecode
  newRuntimeBytecode: RuntimeWasmBytecode
}

type RuntimeWasmBytecode implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # The bytecode itself
  bytecode: Bytes!
}

# GraphQL representation of Bytes
scalar Bytes

type FundingRequestProposalDetails {
  # Related list of funding request destinations
  destinationsList: FundingRequestDestinationsList
}

type FundingRequestDestinationsList implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  phantom: Int
  destinations: [FundingRequestDestination!]!
}

type FundingRequestDestination implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Amount of funds requested
  amount: BigInt!

  # Destination account
  account: String!
  list: FundingRequestDestinationsList!
  listId: String!
}

type SetMaxValidatorCountProposalDetails {
  # The new (propsed) max. number of active validators
  newMaxValidatorCount: Int!
}

type CreateWorkingGroupLeadOpeningProposalDetails {
  # The opening metadata
  metadata: WorkingGroupOpeningMetadata

  # Min. application / role stake amount
  stakeAmount: Float!

  # Role stake unstaking period in blocks
  unstakingPeriod: Int!

  # Initial workers' reward per block
  rewardPerBlock: Float!

  # Related working group
  group: WorkingGroup
}

type FillWorkingGroupLeadOpeningProposalDetails {
  # Lead opening to to be filled
  opening: WorkingGroupOpening

  # Selected successful application
  application: WorkingGroupApplication
}

type UpdateWorkingGroupBudgetProposalDetails {
  # Amount to increase / decrease the working group budget by (will be decudted from / appended to council budget accordingly)
  amount: Float!

  # Related working group
  group: WorkingGroup
}

type DecreaseWorkingGroupLeadStakeProposalDetails {
  # The lead that should be affected
  lead: Worker

  # Amount to decrease the stake by
  amount: Float!
}

type SlashWorkingGroupLeadProposalDetails {
  # The lead that should be affected
  lead: Worker

  # Amount to slash the stake by
  amount: Float!
}

type SetWorkingGroupLeadRewardProposalDetails {
  # The lead that should be affected
  lead: Worker

  # Lead's new (proposed) reward per block
  newRewardPerBlock: Float!
}

type TerminateWorkingGroupLeadProposalDetails {
  # Lead that's supposed to be terminated
  lead: Worker

  # Optionally - the amount to slash the lead's stake by
  slashingAmount: Float
}

type AmendConstitutionProposalDetails {
  # New (proposed) constitution text (md-formatted)
  text: String!
}

type CancelWorkingGroupLeadOpeningProposalDetails {
  # Opening to be cancelled
  opening: WorkingGroupOpening
}

type SetMembershipPriceProposalDetails {
  # New (proposed) membership price
  newPrice: Float!
}

type SetCouncilBudgetIncrementProposalDetails {
  # New (proposed) amount the council budget should be increased by per each budget period
  newAmount: Float!
}

type SetCouncilorRewardProposalDetails {
  # New (proposed) council members' reward per block
  newRewardPerBlock: Float!
}

type SetInitialInvitationBalanceProposalDetails {
  # The new (proposed) initial balance credited to controller account of an invitee (locked for transaction fee payments only)
  newInitialInvitationBalance: Float!
}

type SetInitialInvitationCountProposalDetails {
  # The new (proposed) initial invitations count for paid memberships
  newInitialInvitationsCount: Int!
}

type SetMembershipLeadInvitationQuotaProposalDetails {
  # The new (proposed) membership working group lead invitation quota
  newLeadInvitationQuota: Int!
}

type SetReferralCutProposalDetails {
  # The new (proposed) percentage of tokens diverted to referrer (from referred member's membership price).
  newReferralCut: Int!
}

type CreateBlogPostProposalDetails {
  # Blog post title
  title: String!

  # Blog post content (md-formatted)
  body: String!
}

type EditBlogPostProposalDetails {
  # The related blog post
  blogPost: String!

  # The new blog post title (if should be updated)
  newTitle: String

  # The new blog post body (if should be updated)
  newBody: String
}

type LockBlogPostProposalDetails {
  # The blog post that should be locked
  blogPost: String!
}

type UnlockBlogPostProposalDetails {
  # The blog post that should be unlocked
  blogPost: String!
}

type VetoProposalDetails {
  # Proposal to be vetoed
  proposal: Proposal
}

type ProposalCreatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  proposal: Proposal!
  proposalId: String!
}

type ProposalDiscussionThread implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  proposal: Proposal!
  proposalId: String!
  posts: [ProposalDiscussionPost!]!

  # Current thread mode
  mode: ProposalDiscussionThreadMode!
  modeChanges: [ProposalDiscussionThreadModeChangedEvent!]!
}

type ProposalDiscussionPost implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  discussionThread: ProposalDiscussionThread!
  discussionThreadId: String!
  author: Membership!
  authorId: String!

  # Current post status
  status: ProposalDiscussionPostStatus!

  # True if the post is either Active or Locked
  isVisible: Boolean!

  # Post's md-formatted text
  text: String!
  repliesTo: ProposalDiscussionPost
  repliesToId: String
  updates: [ProposalDiscussionPostUpdatedEvent!]!
  createdInEvent: ProposalDiscussionPostCreatedEvent!
  proposaldiscussionpostrepliesTo: [ProposalDiscussionPost!]
  proposaldiscussionpostdeletedeventpost: [ProposalDiscussionPostDeletedEvent!]
}

union ProposalDiscussionPostStatus =
    ProposalDiscussionPostStatusActive
  | ProposalDiscussionPostStatusLocked
  | ProposalDiscussionPostStatusRemoved

type ProposalDiscussionPostStatusActive {
  phantom: Int
}

type ProposalDiscussionPostStatusLocked {
  # ProposalDiscussionPostDeletedEvent in case the post became locked through runtime removal
  deletedInEvent: ProposalDiscussionPostDeletedEvent
}

type ProposalDiscussionPostDeletedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  post: ProposalDiscussionPost!
  postId: String!
  actor: Membership!
  actorId: String!
}

type ProposalDiscussionPostStatusRemoved {
  # The event the post was removed in
  deletedInEvent: ProposalDiscussionPostDeletedEvent
}

type ProposalDiscussionPostUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  post: ProposalDiscussionPost!
  postId: String!

  # New post text
  text: String!
}

type ProposalDiscussionPostCreatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  post: ProposalDiscussionPost!
  postId: String!

  # Initial post text
  text: String!
}

union ProposalDiscussionThreadMode =
    ProposalDiscussionThreadModeOpen
  | ProposalDiscussionThreadModeClosed

type ProposalDiscussionThreadModeOpen {
  phantom: Int
}

type ProposalDiscussionThreadModeClosed {
  # Whitelist containing members allowed to participate in the discussion
  whitelist: ProposalDiscussionWhitelist
}

type ProposalDiscussionThreadModeChangedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  thread: ProposalDiscussionThread!
  threadId: String!

  # The new thread mode
  newMode: ProposalDiscussionThreadMode!
  actor: Membership!
  actorId: String!
}

type ProposalStatusUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  proposal: Proposal!
  proposalId: String!

  # The new proposal intermediate status (Deciding/Gracing/Dormant)
  newStatus: ProposalIntermediateStatus!
}

union ProposalIntermediateStatus =
    ProposalStatusDeciding
  | ProposalStatusGracing
  | ProposalStatusDormant

type ProposalStatusDeciding {
  # Related ProposalStatusUpdatedEvent
  proposalStatusUpdatedEvent: ProposalStatusUpdatedEvent
}

type ProposalStatusGracing {
  # Related ProposalStatusUpdatedEvent
  proposalStatusUpdatedEvent: ProposalStatusUpdatedEvent
}

type ProposalStatusDormant {
  # Related ProposalStatusUpdatedEvent
  proposalStatusUpdatedEvent: ProposalStatusUpdatedEvent
}

type ProposalVotedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  voter: Membership!
  voterId: String!

  # The kind of the vote that was casted
  voteKind: ProposalVoteKind!
  proposal: Proposal!
  proposalId: String!

  # The rationale behind the vote
  rationale: String!

  # The voting round - number representing which Deciding period the vote was casted in (starting with 1), useful when the proposal must be approved during multiple council terms (constitution > 1)
  votingRound: Int!
}

union ProposalStatus =
    ProposalStatusDeciding
  | ProposalStatusGracing
  | ProposalStatusDormant
  | ProposalStatusVetoed
  | ProposalStatusExecuted
  | ProposalStatusExecutionFailed
  | ProposalStatusSlashed
  | ProposalStatusRejected
  | ProposalStatusExpired
  | ProposalStatusCancelled
  | ProposalStatusCanceledByRuntime

type ProposalStatusVetoed {
  # Related ProposalDecisionMadeEvent event
  proposalDecisionMadeEvent: ProposalDecisionMadeEvent
}

type ProposalDecisionMadeEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  proposal: Proposal!
  proposalId: String!

  # The voting decision status
  decisionStatus: ProposalDecisionStatus!
}

union ProposalDecisionStatus =
    ProposalStatusDormant
  | ProposalStatusGracing
  | ProposalStatusVetoed
  | ProposalStatusSlashed
  | ProposalStatusRejected
  | ProposalStatusExpired
  | ProposalStatusCancelled
  | ProposalStatusCanceledByRuntime

type ProposalStatusSlashed {
  # Related ProposalDecisionMadeEvent
  proposalDecisionMadeEvent: ProposalDecisionMadeEvent
}

type ProposalStatusRejected {
  # Related ProposalDecisionMadeEvent
  proposalDecisionMadeEvent: ProposalDecisionMadeEvent
}

type ProposalStatusExpired {
  # Related ProposalDecisionMadeEvent
  proposalDecisionMadeEvent: ProposalDecisionMadeEvent
}

type ProposalStatusCancelled {
  # The related ProposalCancelledEvent
  cancelledInEvent: ProposalCancelledEvent
}

type ProposalCancelledEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  proposal: Proposal!
  proposalId: String!
}

type ProposalStatusCanceledByRuntime {
  # Related ProposalDecisionMadeEvent
  proposalDecisionMadeEvent: ProposalDecisionMadeEvent
}

type ProposalStatusExecuted {
  # Related ProposalExecutedEvent
  proposalExecutedEvent: ProposalExecutedEvent
}

type ProposalExecutedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  proposal: Proposal!
  proposalId: String!

  # The execution status
  executionStatus: ProposalExecutionStatus!
}

union ProposalExecutionStatus =
    ProposalStatusExecuted
  | ProposalStatusExecutionFailed

type ProposalStatusExecutionFailed {
  # Related ProposalExecutedEvent
  proposalExecutedEvent: ProposalExecutedEvent

  # The runtime execution error message
  errorMessage: String!
}

type StakingAccountAddedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  member: Membership!
  memberId: String!

  # New staking account in SS58 encoding.
  account: String!
}

type StakingAccountConfirmedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  member: Membership!
  memberId: String!

  # New staking account in SS58 encoding.
  account: String!
}

type StakingAccountRemovedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  member: Membership!
  memberId: String!

  # New staking account in SS58 encoding.
  account: String!
}

union WorkerStatus =
    WorkerStatusActive
  | WorkerStatusLeaving
  | WorkerStatusLeft
  | WorkerStatusTerminated

type WorkerStatusActive {
  phantom: Int
}

type WorkerStatusLeaving {
  # Related event emitted on leaving initialization
  workerStartedLeavingEvent: WorkerStartedLeavingEvent
}

type WorkerStartedLeavingEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # Optional rationale
  rationale: String
}

type WorkerStatusLeft {
  # Related event emitted on leaving initialization
  workerStartedLeavingEvent: WorkerStartedLeavingEvent

  # Related event emitted once the worker has exited the role (after the unstaking period)
  workerExitedEvent: WorkerExitedEvent
}

type WorkerExitedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!
}

type WorkerStatusTerminated {
  # Related event emitted on worker termination
  terminatedWorkerEvent: TerminatedWorkerEvent
}

type TerminatedWorkerEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # Slash amount (if any)
  penalty: BigInt

  # Optional rationale
  rationale: String
}

type RewardPaidEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # The account that recieved the reward
  rewardAccount: String!

  # Amount recieved
  amount: BigInt!

  # Type of the payment (REGULAR/MISSED)
  paymentType: RewardPaymentType!
}

type StakeSlashedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # Balance that was requested to be slashed
  requestedAmount: BigInt!

  # Balance that was actually slashed
  slashedAmount: BigInt!

  # Optional rationale
  rationale: String
}

type OpeningFilledEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!
  opening: WorkingGroupOpening!
  openingId: String!
  workersHired: [Worker!]!
}

type LeaderSetEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker
  workerId: String
}

type LeaderUnsetEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!
  leader: Worker!
  leaderId: String!
}

type NewMissedRewardLevelReachedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # New missed reward amount
  newMissedRewardAmount: BigInt!
}

type StakeDecreasedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # The amount of JOY the stake was decreased by
  amount: BigInt!
}

type StakeIncreasedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # The amount of JOY the stake was increased by
  amount: BigInt!
}

type TerminatedLeaderEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # Slash amount (if any)
  penalty: BigInt

  # Optional rationale
  rationale: String
}

type WorkerRewardAccountUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # New reward account
  newRewardAccount: String!
}

type WorkerRewardAmountUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # New worker reward per block
  newRewardPerBlock: BigInt!
}

type WorkerRoleAccountUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!
  worker: Worker!
  workerId: String!

  # New role account
  newRoleAccount: String!
}

type ApplicationWithdrawnEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!
  application: WorkingGroupApplication!
  applicationId: String!
}

type AppliedOnOpeningEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!
  opening: WorkingGroupOpening!
  openingId: String!
  application: WorkingGroupApplication!
  applicationId: String!
}

type BudgetSetEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!

  # New working group budget
  newBudget: BigInt!
}

type BudgetSpendingEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!

  # Reciever account address
  reciever: String!

  # Amount beeing spent
  amount: BigInt!

  # Optional rationale
  rationale: String
}

type BudgetUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!

  # Amount substracted from / added to the current budget
  budgetChangeAmount: BigInt!
}

type OpeningAddedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!
  opening: WorkingGroupOpening!
  openingId: String!
}

type OpeningCanceledEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  group: WorkingGroup!
  groupId: String!
  opening: WorkingGroupOpening!
  openingId: String!
}

union WorkingGroupOpeningStatus =
    OpeningStatusOpen
  | OpeningStatusFilled
  | OpeningStatusCancelled

type OpeningStatusOpen {
  phantom: Int
}

type OpeningStatusFilled {
  # Related event emitted after filling the opening
  openingFilledEvent: OpeningFilledEvent
}

type OpeningStatusCancelled {
  # Related event emitted on opening cancellation
  openingCanceledEvent: OpeningCanceledEvent
}

union WorkingGroupApplicationStatus =
    ApplicationStatusPending
  | ApplicationStatusAccepted
  | ApplicationStatusRejected
  | ApplicationStatusWithdrawn
  | ApplicationStatusCancelled

type ApplicationStatusPending {
  phantom: Int
}

type ApplicationStatusAccepted {
  # Related OpeningFilled event
  openingFilledEvent: OpeningFilledEvent
}

type ApplicationStatusRejected {
  # Related OpeningFilled event
  openingFilledEvent: OpeningFilledEvent
}

type ApplicationStatusWithdrawn {
  # Related ApplicationWithdrawn event
  applicationWithdrawnEvent: ApplicationWithdrawnEvent
}

type ApplicationStatusCancelled {
  # Related OpeningCanceled event
  openingCanceledEvent: OpeningCanceledEvent
}

input ApplicationFormQuestionAnswerWhereUniqueInput {
  id: ID!
}

type ApplicationFormQuestionAnswerConnection {
  totalCount: Int!
  edges: [ApplicationFormQuestionAnswerEdge!]!
  pageInfo: PageInfo!
}

type ApplicationFormQuestionAnswerEdge {
  node: ApplicationFormQuestionAnswer!
  cursor: String!
}

enum ApplicationFormQuestionOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  openingMetadata_ASC
  openingMetadata_DESC
  question_ASC
  question_DESC
  type_ASC
  type_DESC
  index_ASC
  index_DESC
}

input ApplicationFormQuestionWhereUniqueInput {
  id: ID!
}

type ApplicationFormQuestionConnection {
  totalCount: Int!
  edges: [ApplicationFormQuestionEdge!]!
  pageInfo: PageInfo!
}

type ApplicationFormQuestionEdge {
  node: ApplicationFormQuestion!
  cursor: String!
}

enum ApplicationWithdrawnEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  application_ASC
  application_DESC
}

input ApplicationWithdrawnEventWhereUniqueInput {
  id: ID!
}

type ApplicationWithdrawnEventConnection {
  totalCount: Int!
  edges: [ApplicationWithdrawnEventEdge!]!
  pageInfo: PageInfo!
}

type ApplicationWithdrawnEventEdge {
  node: ApplicationWithdrawnEvent!
  cursor: String!
}

enum AppliedOnOpeningEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  opening_ASC
  opening_DESC
  application_ASC
  application_DESC
}

input AppliedOnOpeningEventWhereUniqueInput {
  id: ID!
}

type AppliedOnOpeningEventConnection {
  totalCount: Int!
  edges: [AppliedOnOpeningEventEdge!]!
  pageInfo: PageInfo!
}

type AppliedOnOpeningEventEdge {
  node: AppliedOnOpeningEvent!
  cursor: String!
}

enum AuctionBidCanceledEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  member_ASC
  member_DESC
  video_ASC
  video_DESC
  ownerMember_ASC
  ownerMember_DESC
  ownerCuratorGroup_ASC
  ownerCuratorGroup_DESC
}

input AuctionBidCanceledEventWhereUniqueInput {
  id: ID!
}

type AuctionBidCanceledEventConnection {
  totalCount: Int!
  edges: [AuctionBidCanceledEventEdge!]!
  pageInfo: PageInfo!
}

type AuctionBidCanceledEventEdge {
  node: AuctionBidCanceledEvent!
  cursor: String!
}

enum AuctionBidMadeEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  member_ASC
  member_DESC
  video_ASC
  video_DESC
  bidAmount_ASC
  bidAmount_DESC
  ownerMember_ASC
  ownerMember_DESC
  ownerCuratorGroup_ASC
  ownerCuratorGroup_DESC
  previousTopBid_ASC
  previousTopBid_DESC
  previousTopBidder_ASC
  previousTopBidder_DESC
}

input AuctionBidMadeEventWhereUniqueInput {
  id: ID!
}

type AuctionBidMadeEventConnection {
  totalCount: Int!
  edges: [AuctionBidMadeEventEdge!]!
  pageInfo: PageInfo!
}

type AuctionBidMadeEventEdge {
  node: AuctionBidMadeEvent!
  cursor: String!
}

enum AuctionCanceledEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  video_ASC
  video_DESC
  ownerMember_ASC
  ownerMember_DESC
  ownerCuratorGroup_ASC
  ownerCuratorGroup_DESC
}

input AuctionCanceledEventWhereUniqueInput {
  id: ID!
}

type AuctionCanceledEventConnection {
  totalCount: Int!
  edges: [AuctionCanceledEventEdge!]!
  pageInfo: PageInfo!
}

type AuctionCanceledEventEdge {
  node: AuctionCanceledEvent!
  cursor: String!
}

enum AuctionOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  nft_ASC
  nft_DESC
  initialOwner_ASC
  initialOwner_DESC
  winningMember_ASC
  winningMember_DESC
  startingPrice_ASC
  startingPrice_DESC
  buyNowPrice_ASC
  buyNowPrice_DESC
  topBid_ASC
  topBid_DESC
  startsAtBlock_ASC
  startsAtBlock_DESC
  endedAtBlock_ASC
  endedAtBlock_DESC
  isCanceled_ASC
  isCanceled_DESC
  isCompleted_ASC
  isCompleted_DESC
}

input AuctionWhereUniqueInput {
  id: ID!
}

type AuctionConnection {
  totalCount: Int!
  edges: [AuctionEdge!]!
  pageInfo: PageInfo!
}

type AuctionEdge {
  node: Auction!
  cursor: String!
}

enum BidMadeCompletingAuctionEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  member_ASC
  member_DESC
  video_ASC
  video_DESC
  ownerMember_ASC
  ownerMember_DESC
  ownerCuratorGroup_ASC
  ownerCuratorGroup_DESC
  price_ASC
  price_DESC
  winningBid_ASC
  winningBid_DESC
  previousTopBid_ASC
  previousTopBid_DESC
  previousTopBidder_ASC
  previousTopBidder_DESC
}

input BidMadeCompletingAuctionEventWhereUniqueInput {
  id: ID!
}

type BidMadeCompletingAuctionEventConnection {
  totalCount: Int!
  edges: [BidMadeCompletingAuctionEventEdge!]!
  pageInfo: PageInfo!
}

type BidMadeCompletingAuctionEventEdge {
  node: BidMadeCompletingAuctionEvent!
  cursor: String!
}

enum BidOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  auction_ASC
  auction_DESC
  nft_ASC
  nft_DESC
  bidder_ASC
  bidder_DESC
  amount_ASC
  amount_DESC
  isCanceled_ASC
  isCanceled_DESC
  createdInBlock_ASC
  createdInBlock_DESC
  indexInBlock_ASC
  indexInBlock_DESC
}

input BidWhereUniqueInput {
  id: ID!
}

type BidConnection {
  totalCount: Int!
  edges: [BidEdge!]!
  pageInfo: PageInfo!
}

type BidEdge {
  node: Bid!
  cursor: String!
}

enum BountyCanceledEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  bounty_ASC
  bounty_DESC
}

input BountyCanceledEventWhereUniqueInput {
  id: ID!
}

type BountyCanceledEventConnection {
  totalCount: Int!
  edges: [BountyCanceledEventEdge!]!
  pageInfo: PageInfo!
}

type BountyCanceledEventEdge {
  node: BountyCanceledEvent!
  cursor: String!
}

enum BountyContributionOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  bounty_ASC
  bounty_DESC
  contributor_ASC
  contributor_DESC
  contributorId_ASC
  contributorId_DESC
  amount_ASC
  amount_DESC
}

input BountyContributionWhereUniqueInput {
  id: ID!
}

type BountyContributionConnection {
  totalCount: Int!
  edges: [BountyContributionEdge!]!
  pageInfo: PageInfo!
}

type BountyContributionEdge {
  node: BountyContribution!
  cursor: String!
}

enum BountyCreatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  bounty_ASC
  bounty_DESC
}

input BountyCreatedEventWhereUniqueInput {
  id: ID!
}

type BountyCreatedEventConnection {
  totalCount: Int!
  edges: [BountyCreatedEventEdge!]!
  pageInfo: PageInfo!
}

type BountyCreatedEventEdge {
  node: BountyCreatedEvent!
  cursor: String!
}

enum BountyCreatorCherryWithdrawalEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  bounty_ASC
  bounty_DESC
}

input BountyCreatorCherryWithdrawalEventWhereUniqueInput {
  id: ID!
}

type BountyCreatorCherryWithdrawalEventConnection {
  totalCount: Int!
  edges: [BountyCreatorCherryWithdrawalEventEdge!]!
  pageInfo: PageInfo!
}

type BountyCreatorCherryWithdrawalEventEdge {
  node: BountyCreatorCherryWithdrawalEvent!
  cursor: String!
}

enum BountyEntrantWhitelistOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  phantom_ASC
  phantom_DESC
}

input BountyEntrantWhitelistWhereUniqueInput {
  id: ID!
}

type BountyEntrantWhitelistConnection {
  totalCount: Int!
  edges: [BountyEntrantWhitelistEdge!]!
  pageInfo: PageInfo!
}

type BountyEntrantWhitelistEdge {
  node: BountyEntrantWhitelist!
  cursor: String!
}

enum BountyEntryOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  bounty_ASC
  bounty_DESC
  worker_ASC
  worker_DESC
  stakingAccount_ASC
  stakingAccount_DESC
  workSubmitted_ASC
  workSubmitted_DESC
}

input BountyEntryWhereUniqueInput {
  id: ID!
}

type BountyEntryConnection {
  totalCount: Int!
  edges: [BountyEntryEdge!]!
  pageInfo: PageInfo!
}

type BountyEntryEdge {
  node: BountyEntry!
  cursor: String!
}

enum BountyFundedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  contribution_ASC
  contribution_DESC
}

input BountyFundedEventWhereUniqueInput {
  id: ID!
}

type BountyFundedEventConnection {
  totalCount: Int!
  edges: [BountyFundedEventEdge!]!
  pageInfo: PageInfo!
}

type BountyFundedEventEdge {
  node: BountyFundedEvent!
  cursor: String!
}

enum BountyFundingWithdrawalEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  contribution_ASC
  contribution_DESC
}

input BountyFundingWithdrawalEventWhereUniqueInput {
  id: ID!
}

type BountyFundingWithdrawalEventConnection {
  totalCount: Int!
  edges: [BountyFundingWithdrawalEventEdge!]!
  pageInfo: PageInfo!
}

type BountyFundingWithdrawalEventEdge {
  node: BountyFundingWithdrawalEvent!
  cursor: String!
}

enum BountyMaxFundingReachedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  bounty_ASC
  bounty_DESC
}

input BountyMaxFundingReachedEventWhereUniqueInput {
  id: ID!
}

type BountyMaxFundingReachedEventConnection {
  totalCount: Int!
  edges: [BountyMaxFundingReachedEventEdge!]!
  pageInfo: PageInfo!
}

type BountyMaxFundingReachedEventEdge {
  node: BountyMaxFundingReachedEvent!
  cursor: String!
}

enum BountyRemovedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  bounty_ASC
  bounty_DESC
}

input BountyRemovedEventWhereUniqueInput {
  id: ID!
}

type BountyRemovedEventConnection {
  totalCount: Int!
  edges: [BountyRemovedEventEdge!]!
  pageInfo: PageInfo!
}

type BountyRemovedEventEdge {
  node: BountyRemovedEvent!
  cursor: String!
}

enum BountyVetoedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  bounty_ASC
  bounty_DESC
}

input BountyVetoedEventWhereUniqueInput {
  id: ID!
}

type BountyVetoedEventConnection {
  totalCount: Int!
  edges: [BountyVetoedEventEdge!]!
  pageInfo: PageInfo!
}

type BountyVetoedEventEdge {
  node: BountyVetoedEvent!
  cursor: String!
}

enum BountyOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  bannerImageUri_ASC
  bannerImageUri_DESC
  cherry_ASC
  cherry_DESC
  entrantStake_ASC
  entrantStake_DESC
  creator_ASC
  creator_DESC
  oracle_ASC
  oracle_DESC
  entrantWhitelist_ASC
  entrantWhitelist_DESC
  workPeriod_ASC
  workPeriod_DESC
  judgingPeriod_ASC
  judgingPeriod_DESC
  stage_ASC
  stage_DESC
  totalFunding_ASC
  totalFunding_DESC
  discussionThread_ASC
  discussionThread_DESC
  isTerminated_ASC
  isTerminated_DESC
}

input BountyWhereUniqueInput {
  id: ID!
}

type BountyConnection {
  totalCount: Int!
  edges: [BountyEdge!]!
  pageInfo: PageInfo!
}

type BountyEdge {
  node: Bounty!
  cursor: String!
}

input BudgetBalanceSetEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  balance_eq: BigInt
  balance_gt: BigInt
  balance_gte: BigInt
  balance_lt: BigInt
  balance_lte: BigInt
  balance_in: [BigInt!]
  AND: [BudgetBalanceSetEventWhereInput!]
  OR: [BudgetBalanceSetEventWhereInput!]
  NOT: [BudgetBalanceSetEventWhereInput!]
}

enum BudgetBalanceSetEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  balance_ASC
  balance_DESC
}

type BudgetBalanceSetEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Budget balance that has been set.
  balance: BigInt!
}

input BudgetBalanceSetEventWhereUniqueInput {
  id: ID!
}

type BudgetBalanceSetEventConnection {
  totalCount: Int!
  edges: [BudgetBalanceSetEventEdge!]!
  pageInfo: PageInfo!
}

type BudgetBalanceSetEventEdge {
  node: BudgetBalanceSetEvent!
  cursor: String!
}

input BudgetIncrementUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  amount_eq: BigInt
  amount_gt: BigInt
  amount_gte: BigInt
  amount_lt: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  AND: [BudgetIncrementUpdatedEventWhereInput!]
  OR: [BudgetIncrementUpdatedEventWhereInput!]
  NOT: [BudgetIncrementUpdatedEventWhereInput!]
}

enum BudgetIncrementUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  amount_ASC
  amount_DESC
}

type BudgetIncrementUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Amount that is added to the budget each time it's refilled.
  amount: BigInt!
}

input BudgetIncrementUpdatedEventWhereUniqueInput {
  id: ID!
}

type BudgetIncrementUpdatedEventConnection {
  totalCount: Int!
  edges: [BudgetIncrementUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type BudgetIncrementUpdatedEventEdge {
  node: BudgetIncrementUpdatedEvent!
  cursor: String!
}

input BudgetRefillEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  balance_eq: BigInt
  balance_gt: BigInt
  balance_gte: BigInt
  balance_lt: BigInt
  balance_lte: BigInt
  balance_in: [BigInt!]
  AND: [BudgetRefillEventWhereInput!]
  OR: [BudgetRefillEventWhereInput!]
  NOT: [BudgetRefillEventWhereInput!]
}

enum BudgetRefillEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  balance_ASC
  balance_DESC
}

type BudgetRefillEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Balance that has been refilled.
  balance: BigInt!
}

input BudgetRefillEventWhereUniqueInput {
  id: ID!
}

type BudgetRefillEventConnection {
  totalCount: Int!
  edges: [BudgetRefillEventEdge!]!
  pageInfo: PageInfo!
}

type BudgetRefillEventEdge {
  node: BudgetRefillEvent!
  cursor: String!
}

input BudgetRefillPlannedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  nextRefillInBlock_eq: Int
  nextRefillInBlock_gt: Int
  nextRefillInBlock_gte: Int
  nextRefillInBlock_lt: Int
  nextRefillInBlock_lte: Int
  nextRefillInBlock_in: [Int!]
  AND: [BudgetRefillPlannedEventWhereInput!]
  OR: [BudgetRefillPlannedEventWhereInput!]
  NOT: [BudgetRefillPlannedEventWhereInput!]
}

enum BudgetRefillPlannedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  nextRefillInBlock_ASC
  nextRefillInBlock_DESC
}

type BudgetRefillPlannedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
  nextRefillInBlock: Int!
}

input BudgetRefillPlannedEventWhereUniqueInput {
  id: ID!
}

type BudgetRefillPlannedEventConnection {
  totalCount: Int!
  edges: [BudgetRefillPlannedEventEdge!]!
  pageInfo: PageInfo!
}

type BudgetRefillPlannedEventEdge {
  node: BudgetRefillPlannedEvent!
  cursor: String!
}

enum BudgetSetEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  newBudget_ASC
  newBudget_DESC
}

input BudgetSetEventWhereUniqueInput {
  id: ID!
}

type BudgetSetEventConnection {
  totalCount: Int!
  edges: [BudgetSetEventEdge!]!
  pageInfo: PageInfo!
}

type BudgetSetEventEdge {
  node: BudgetSetEvent!
  cursor: String!
}

enum BudgetSpendingEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  reciever_ASC
  reciever_DESC
  amount_ASC
  amount_DESC
  rationale_ASC
  rationale_DESC
}

input BudgetSpendingEventWhereUniqueInput {
  id: ID!
}

type BudgetSpendingEventConnection {
  totalCount: Int!
  edges: [BudgetSpendingEventEdge!]!
  pageInfo: PageInfo!
}

type BudgetSpendingEventEdge {
  node: BudgetSpendingEvent!
  cursor: String!
}

enum BudgetUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  budgetChangeAmount_ASC
  budgetChangeAmount_DESC
}

input BudgetUpdatedEventWhereUniqueInput {
  id: ID!
}

type BudgetUpdatedEventConnection {
  totalCount: Int!
  edges: [BudgetUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type BudgetUpdatedEventEdge {
  node: BudgetUpdatedEvent!
  cursor: String!
}

enum BuyNowCanceledEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  video_ASC
  video_DESC
  ownerMember_ASC
  ownerMember_DESC
  ownerCuratorGroup_ASC
  ownerCuratorGroup_DESC
}

input BuyNowCanceledEventWhereUniqueInput {
  id: ID!
}

type BuyNowCanceledEventConnection {
  totalCount: Int!
  edges: [BuyNowCanceledEventEdge!]!
  pageInfo: PageInfo!
}

type BuyNowCanceledEventEdge {
  node: BuyNowCanceledEvent!
  cursor: String!
}

enum BuyNowPriceUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  video_ASC
  video_DESC
  newPrice_ASC
  newPrice_DESC
  ownerMember_ASC
  ownerMember_DESC
  ownerCuratorGroup_ASC
  ownerCuratorGroup_DESC
}

input BuyNowPriceUpdatedEventWhereUniqueInput {
  id: ID!
}

type BuyNowPriceUpdatedEventConnection {
  totalCount: Int!
  edges: [BuyNowPriceUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type BuyNowPriceUpdatedEventEdge {
  node: BuyNowPriceUpdatedEvent!
  cursor: String!
}

enum CandidacyNoteMetadataOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  header_ASC
  header_DESC
  bannerImageUri_ASC
  bannerImageUri_DESC
  description_ASC
  description_DESC
}

input CandidacyNoteMetadataWhereUniqueInput {
  id: ID!
}

type CandidacyNoteMetadataConnection {
  totalCount: Int!
  edges: [CandidacyNoteMetadataEdge!]!
  pageInfo: PageInfo!
}

type CandidacyNoteMetadataEdge {
  node: CandidacyNoteMetadata!
  cursor: String!
}

enum CandidacyNoteSetEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  candidate_ASC
  candidate_DESC
  noteMetadata_ASC
  noteMetadata_DESC
}

input CandidacyNoteSetEventWhereUniqueInput {
  id: ID!
}

type CandidacyNoteSetEventConnection {
  totalCount: Int!
  edges: [CandidacyNoteSetEventEdge!]!
  pageInfo: PageInfo!
}

type CandidacyNoteSetEventEdge {
  node: CandidacyNoteSetEvent!
  cursor: String!
}

enum CandidacyStakeReleaseEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  candidate_ASC
  candidate_DESC
}

input CandidacyStakeReleaseEventWhereUniqueInput {
  id: ID!
}

type CandidacyStakeReleaseEventConnection {
  totalCount: Int!
  edges: [CandidacyStakeReleaseEventEdge!]!
  pageInfo: PageInfo!
}

type CandidacyStakeReleaseEventEdge {
  node: CandidacyStakeReleaseEvent!
  cursor: String!
}

enum CandidacyWithdrawEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  candidate_ASC
  candidate_DESC
}

input CandidacyWithdrawEventWhereUniqueInput {
  id: ID!
}

type CandidacyWithdrawEventConnection {
  totalCount: Int!
  edges: [CandidacyWithdrawEventEdge!]!
  pageInfo: PageInfo!
}

type CandidacyWithdrawEventEdge {
  node: CandidacyWithdrawEvent!
  cursor: String!
}

enum CandidateOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  stakingAccountId_ASC
  stakingAccountId_DESC
  rewardAccountId_ASC
  rewardAccountId_DESC
  member_ASC
  member_DESC
  electionRound_ASC
  electionRound_DESC
  stake_ASC
  stake_DESC
  stakeLocked_ASC
  stakeLocked_DESC
  status_ASC
  status_DESC
  votePower_ASC
  votePower_DESC
  lastVoteReceivedAtBlock_ASC
  lastVoteReceivedAtBlock_DESC
  lastVoteReceivedAtEventNumber_ASC
  lastVoteReceivedAtEventNumber_DESC
  noteMetadata_ASC
  noteMetadata_DESC
}

input CandidateWhereUniqueInput {
  id: ID!
}

type CandidateConnection {
  totalCount: Int!
  edges: [CandidateEdge!]!
  pageInfo: PageInfo!
}

type CandidateEdge {
  node: Candidate!
  cursor: String!
}

enum CastVoteOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  commitment_ASC
  commitment_DESC
  electionRound_ASC
  electionRound_DESC
  stake_ASC
  stake_DESC
  stakeLocked_ASC
  stakeLocked_DESC
  castBy_ASC
  castBy_DESC
  voteFor_ASC
  voteFor_DESC
  votePower_ASC
  votePower_DESC
}

input CastVoteWhereUniqueInput {
  id: ID!
}

type CastVoteConnection {
  totalCount: Int!
  edges: [CastVoteEdge!]!
  pageInfo: PageInfo!
}

type CastVoteEdge {
  node: CastVote!
  cursor: String!
}

enum CategoryArchivalStatusUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  category_ASC
  category_DESC
  newArchivalStatus_ASC
  newArchivalStatus_DESC
  actor_ASC
  actor_DESC
}

input CategoryArchivalStatusUpdatedEventWhereUniqueInput {
  id: ID!
}

type CategoryArchivalStatusUpdatedEventConnection {
  totalCount: Int!
  edges: [CategoryArchivalStatusUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type CategoryArchivalStatusUpdatedEventEdge {
  node: CategoryArchivalStatusUpdatedEvent!
  cursor: String!
}

enum CategoryCreatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  category_ASC
  category_DESC
}

input CategoryCreatedEventWhereUniqueInput {
  id: ID!
}

type CategoryCreatedEventConnection {
  totalCount: Int!
  edges: [CategoryCreatedEventEdge!]!
  pageInfo: PageInfo!
}

type CategoryCreatedEventEdge {
  node: CategoryCreatedEvent!
  cursor: String!
}

enum CategoryDeletedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  category_ASC
  category_DESC
  actor_ASC
  actor_DESC
}

input CategoryDeletedEventWhereUniqueInput {
  id: ID!
}

type CategoryDeletedEventConnection {
  totalCount: Int!
  edges: [CategoryDeletedEventEdge!]!
  pageInfo: PageInfo!
}

type CategoryDeletedEventEdge {
  node: CategoryDeletedEvent!
  cursor: String!
}

enum CategoryMembershipOfModeratorUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  moderator_ASC
  moderator_DESC
  category_ASC
  category_DESC
  newCanModerateValue_ASC
  newCanModerateValue_DESC
}

input CategoryMembershipOfModeratorUpdatedEventWhereUniqueInput {
  id: ID!
}

type CategoryMembershipOfModeratorUpdatedEventConnection {
  totalCount: Int!
  edges: [CategoryMembershipOfModeratorUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type CategoryMembershipOfModeratorUpdatedEventEdge {
  node: CategoryMembershipOfModeratorUpdatedEvent!
  cursor: String!
}

enum CategoryStickyThreadUpdateEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  category_ASC
  category_DESC
  actor_ASC
  actor_DESC
}

input CategoryStickyThreadUpdateEventWhereUniqueInput {
  id: ID!
}

type CategoryStickyThreadUpdateEventConnection {
  totalCount: Int!
  edges: [CategoryStickyThreadUpdateEventEdge!]!
  pageInfo: PageInfo!
}

type CategoryStickyThreadUpdateEventEdge {
  node: CategoryStickyThreadUpdateEvent!
  cursor: String!
}

enum ChannelCategoryOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  name_ASC
  name_DESC
  activeVideosCounter_ASC
  activeVideosCounter_DESC
  createdInBlock_ASC
  createdInBlock_DESC
}

input ChannelCategoryWhereUniqueInput {
  id: ID!
}

type ChannelCategoryConnection {
  totalCount: Int!
  edges: [ChannelCategoryEdge!]!
  pageInfo: PageInfo!
}

type ChannelCategoryEdge {
  node: ChannelCategory!
  cursor: String!
}

enum ChannelNftCollectorsOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  channel_ASC
  channel_DESC
  member_ASC
  member_DESC
  curatorGroup_ASC
  curatorGroup_DESC
  amount_ASC
  amount_DESC
  lastIncreaseAt_ASC
  lastIncreaseAt_DESC
}

input ChannelNftCollectorsWhereUniqueInput {
  id: ID!
}

type ChannelNftCollectorsConnection {
  totalCount: Int!
  edges: [ChannelNftCollectorsEdge!]!
  pageInfo: PageInfo!
}

type ChannelNftCollectorsEdge {
  node: ChannelNftCollectors!
  cursor: String!
}

enum ChannelOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  ownerMember_ASC
  ownerMember_DESC
  ownerCuratorGroup_ASC
  ownerCuratorGroup_DESC
  category_ASC
  category_DESC
  rewardAccount_ASC
  rewardAccount_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  activeVideosCounter_ASC
  activeVideosCounter_DESC
  coverPhoto_ASC
  coverPhoto_DESC
  avatarPhoto_ASC
  avatarPhoto_DESC
  isPublic_ASC
  isPublic_DESC
  isCensored_ASC
  isCensored_DESC
  language_ASC
  language_DESC
  createdInBlock_ASC
  createdInBlock_DESC
}

input ChannelWhereUniqueInput {
  id: ID!
}

type ChannelConnection {
  totalCount: Int!
  edges: [ChannelEdge!]!
  pageInfo: PageInfo!
}

type ChannelEdge {
  node: Channel!
  cursor: String!
}

enum CommentCreatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  comment_ASC
  comment_DESC
  parentCommentAuthor_ASC
  parentCommentAuthor_DESC
  video_ASC
  video_DESC
  videoChannel_ASC
  videoChannel_DESC
  text_ASC
  text_DESC
}

input CommentCreatedEventWhereUniqueInput {
  id: ID!
}

type CommentCreatedEventConnection {
  totalCount: Int!
  edges: [CommentCreatedEventEdge!]!
  pageInfo: PageInfo!
}

type CommentCreatedEventEdge {
  node: CommentCreatedEvent!
  cursor: String!
}

enum CommentDeletedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  comment_ASC
  comment_DESC
  video_ASC
  video_DESC
  videoChannel_ASC
  videoChannel_DESC
}

input CommentDeletedEventWhereUniqueInput {
  id: ID!
}

type CommentDeletedEventConnection {
  totalCount: Int!
  edges: [CommentDeletedEventEdge!]!
  pageInfo: PageInfo!
}

type CommentDeletedEventEdge {
  node: CommentDeletedEvent!
  cursor: String!
}

enum CommentModeratedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  comment_ASC
  comment_DESC
  video_ASC
  video_DESC
  videoChannel_ASC
  videoChannel_DESC
  rationale_ASC
  rationale_DESC
}

input CommentModeratedEventWhereUniqueInput {
  id: ID!
}

type CommentModeratedEventConnection {
  totalCount: Int!
  edges: [CommentModeratedEventEdge!]!
  pageInfo: PageInfo!
}

type CommentModeratedEventEdge {
  node: CommentModeratedEvent!
  cursor: String!
}

enum CommentPinnedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  comment_ASC
  comment_DESC
  video_ASC
  video_DESC
  videoChannel_ASC
  videoChannel_DESC
  action_ASC
  action_DESC
}

input CommentPinnedEventWhereUniqueInput {
  id: ID!
}

type CommentPinnedEventConnection {
  totalCount: Int!
  edges: [CommentPinnedEventEdge!]!
  pageInfo: PageInfo!
}

type CommentPinnedEventEdge {
  node: CommentPinnedEvent!
  cursor: String!
}

enum CommentReactedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  comment_ASC
  comment_DESC
  video_ASC
  video_DESC
  videoChannel_ASC
  videoChannel_DESC
  reactionResult_ASC
  reactionResult_DESC
  reactingMember_ASC
  reactingMember_DESC
}

input CommentReactedEventWhereUniqueInput {
  id: ID!
}

type CommentReactedEventConnection {
  totalCount: Int!
  edges: [CommentReactedEventEdge!]!
  pageInfo: PageInfo!
}

type CommentReactedEventEdge {
  node: CommentReactedEvent!
  cursor: String!
}

enum CommentReactionOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  reactionId_ASC
  reactionId_DESC
  member_ASC
  member_DESC
  memberId_ASC
  memberId_DESC
  comment_ASC
  comment_DESC
  video_ASC
  video_DESC
}

input CommentReactionWhereUniqueInput {
  id: ID!
}

type CommentReactionConnection {
  totalCount: Int!
  edges: [CommentReactionEdge!]!
  pageInfo: PageInfo!
}

type CommentReactionEdge {
  node: CommentReaction!
  cursor: String!
}

enum CommentReactionsCountByReactionIdOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  reactionId_ASC
  reactionId_DESC
  count_ASC
  count_DESC
  comment_ASC
  comment_DESC
  video_ASC
  video_DESC
}

input CommentReactionsCountByReactionIdWhereUniqueInput {
  id: ID!
}

type CommentReactionsCountByReactionIdConnection {
  totalCount: Int!
  edges: [CommentReactionsCountByReactionIdEdge!]!
  pageInfo: PageInfo!
}

type CommentReactionsCountByReactionIdEdge {
  node: CommentReactionsCountByReactionId!
  cursor: String!
}

enum CommentTextUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  comment_ASC
  comment_DESC
  video_ASC
  video_DESC
  videoChannel_ASC
  videoChannel_DESC
  newText_ASC
  newText_DESC
}

input CommentTextUpdatedEventWhereUniqueInput {
  id: ID!
}

type CommentTextUpdatedEventConnection {
  totalCount: Int!
  edges: [CommentTextUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type CommentTextUpdatedEventEdge {
  node: CommentTextUpdatedEvent!
  cursor: String!
}

enum CommentOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  author_ASC
  author_DESC
  text_ASC
  text_DESC
  video_ASC
  video_DESC
  status_ASC
  status_DESC
  parentComment_ASC
  parentComment_DESC
  repliesCount_ASC
  repliesCount_DESC
  reactionsCount_ASC
  reactionsCount_DESC
  reactionsAndRepliesCount_ASC
  reactionsAndRepliesCount_DESC
  isEdited_ASC
  isEdited_DESC
}

input CommentWhereUniqueInput {
  id: ID!
}

type CommentConnection {
  totalCount: Int!
  edges: [CommentEdge!]!
  pageInfo: PageInfo!
}

type CommentEdge {
  node: Comment!
  cursor: String!
}

enum CouncilMemberOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  stakingAccountId_ASC
  stakingAccountId_DESC
  rewardAccountId_ASC
  rewardAccountId_DESC
  member_ASC
  member_DESC
  stake_ASC
  stake_DESC
  lastPaymentBlock_ASC
  lastPaymentBlock_DESC
  unpaidReward_ASC
  unpaidReward_DESC
  accumulatedReward_ASC
  accumulatedReward_DESC
  electedInCouncil_ASC
  electedInCouncil_DESC
}

input CouncilMemberWhereUniqueInput {
  id: ID!
}

type CouncilMemberConnection {
  totalCount: Int!
  edges: [CouncilMemberEdge!]!
  pageInfo: PageInfo!
}

type CouncilMemberEdge {
  node: CouncilMember!
  cursor: String!
}

enum CouncilStageUpdateOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  changedAt_ASC
  changedAt_DESC
  electedCouncil_ASC
  electedCouncil_DESC
  electionProblem_ASC
  electionProblem_DESC
}

input CouncilStageUpdateWhereUniqueInput {
  id: ID!
}

type CouncilStageUpdateConnection {
  totalCount: Int!
  edges: [CouncilStageUpdateEdge!]!
  pageInfo: PageInfo!
}

type CouncilStageUpdateEdge {
  node: CouncilStageUpdate!
  cursor: String!
}

input CouncilorRewardUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  rewardAmount_eq: BigInt
  rewardAmount_gt: BigInt
  rewardAmount_gte: BigInt
  rewardAmount_lt: BigInt
  rewardAmount_lte: BigInt
  rewardAmount_in: [BigInt!]
  AND: [CouncilorRewardUpdatedEventWhereInput!]
  OR: [CouncilorRewardUpdatedEventWhereInput!]
  NOT: [CouncilorRewardUpdatedEventWhereInput!]
}

enum CouncilorRewardUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  rewardAmount_ASC
  rewardAmount_DESC
}

type CouncilorRewardUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # New reward amount paid each reward period.
  rewardAmount: BigInt!
}

input CouncilorRewardUpdatedEventWhereUniqueInput {
  id: ID!
}

type CouncilorRewardUpdatedEventConnection {
  totalCount: Int!
  edges: [CouncilorRewardUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type CouncilorRewardUpdatedEventEdge {
  node: CouncilorRewardUpdatedEvent!
  cursor: String!
}

enum CuratorGroupOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  isActive_ASC
  isActive_DESC
}

input CuratorGroupWhereUniqueInput {
  id: ID!
}

type CuratorGroupConnection {
  totalCount: Int!
  edges: [CuratorGroupEdge!]!
  pageInfo: PageInfo!
}

type CuratorGroupEdge {
  node: CuratorGroup!
  cursor: String!
}

enum CuratorOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  dummy_ASC
  dummy_DESC
}

input CuratorWhereUniqueInput {
  id: ID!
}

type CuratorConnection {
  totalCount: Int!
  edges: [CuratorEdge!]!
  pageInfo: PageInfo!
}

type CuratorEdge {
  node: Curator!
  cursor: String!
}

enum DistributionBucketFamilyGeographicAreaOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  distributionBucketFamilyMetadata_ASC
  distributionBucketFamilyMetadata_DESC
}

input DistributionBucketFamilyGeographicAreaWhereUniqueInput {
  id: ID!
}

type DistributionBucketFamilyGeographicAreaConnection {
  totalCount: Int!
  edges: [DistributionBucketFamilyGeographicAreaEdge!]!
  pageInfo: PageInfo!
}

type DistributionBucketFamilyGeographicAreaEdge {
  node: DistributionBucketFamilyGeographicArea!
  cursor: String!
}

enum DistributionBucketFamilyMetadataOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  region_ASC
  region_DESC
  description_ASC
  description_DESC
}

input DistributionBucketFamilyMetadataWhereUniqueInput {
  id: ID!
}

type DistributionBucketFamilyMetadataConnection {
  totalCount: Int!
  edges: [DistributionBucketFamilyMetadataEdge!]!
  pageInfo: PageInfo!
}

type DistributionBucketFamilyMetadataEdge {
  node: DistributionBucketFamilyMetadata!
  cursor: String!
}

enum DistributionBucketFamilyOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  metadata_ASC
  metadata_DESC
}

input DistributionBucketFamilyWhereUniqueInput {
  id: ID!
}

type DistributionBucketFamilyConnection {
  totalCount: Int!
  edges: [DistributionBucketFamilyEdge!]!
  pageInfo: PageInfo!
}

type DistributionBucketFamilyEdge {
  node: DistributionBucketFamily!
  cursor: String!
}

enum DistributionBucketOperatorMetadataOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  nodeEndpoint_ASC
  nodeEndpoint_DESC
  nodeLocation_ASC
  nodeLocation_DESC
  extra_ASC
  extra_DESC
}

input DistributionBucketOperatorMetadataWhereUniqueInput {
  id: ID!
}

type DistributionBucketOperatorMetadataConnection {
  totalCount: Int!
  edges: [DistributionBucketOperatorMetadataEdge!]!
  pageInfo: PageInfo!
}

type DistributionBucketOperatorMetadataEdge {
  node: DistributionBucketOperatorMetadata!
  cursor: String!
}

enum DistributionBucketOperatorOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  distributionBucket_ASC
  distributionBucket_DESC
  workerId_ASC
  workerId_DESC
  status_ASC
  status_DESC
  metadata_ASC
  metadata_DESC
}

input DistributionBucketOperatorWhereUniqueInput {
  id: ID!
}

type DistributionBucketOperatorConnection {
  totalCount: Int!
  edges: [DistributionBucketOperatorEdge!]!
  pageInfo: PageInfo!
}

type DistributionBucketOperatorEdge {
  node: DistributionBucketOperator!
  cursor: String!
}

enum DistributionBucketOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  family_ASC
  family_DESC
  bucketIndex_ASC
  bucketIndex_DESC
  acceptingNewBags_ASC
  acceptingNewBags_DESC
  distributing_ASC
  distributing_DESC
}

input DistributionBucketWhereUniqueInput {
  id: ID!
}

type DistributionBucketConnection {
  totalCount: Int!
  edges: [DistributionBucketEdge!]!
  pageInfo: PageInfo!
}

type DistributionBucketEdge {
  node: DistributionBucket!
  cursor: String!
}

enum ElectedCouncilOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  electedAtBlock_ASC
  electedAtBlock_DESC
  endedAtBlock_ASC
  endedAtBlock_DESC
  electedAtTime_ASC
  electedAtTime_DESC
  endedAtTime_ASC
  endedAtTime_DESC
  electedAtNetwork_ASC
  electedAtNetwork_DESC
  endedAtNetwork_ASC
  endedAtNetwork_DESC
  isResigned_ASC
  isResigned_DESC
}

input ElectedCouncilWhereUniqueInput {
  id: ID!
}

type ElectedCouncilConnection {
  totalCount: Int!
  edges: [ElectedCouncilEdge!]!
  pageInfo: PageInfo!
}

type ElectedCouncilEdge {
  node: ElectedCouncil!
  cursor: String!
}

enum ElectionRoundOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  cycleId_ASC
  cycleId_DESC
  isFinished_ASC
  isFinished_DESC
  endedAtBlock_ASC
  endedAtBlock_DESC
  endedAtTime_ASC
  endedAtTime_DESC
  endedAtNetwork_ASC
  endedAtNetwork_DESC
  electedCouncil_ASC
  electedCouncil_DESC
  nextElectedCouncil_ASC
  nextElectedCouncil_DESC
}

input ElectionRoundWhereUniqueInput {
  id: ID!
}

type ElectionRoundConnection {
  totalCount: Int!
  edges: [ElectionRoundEdge!]!
  pageInfo: PageInfo!
}

type ElectionRoundEdge {
  node: ElectionRound!
  cursor: String!
}

enum EnglishAuctionSettledEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  winner_ASC
  winner_DESC
  winningBid_ASC
  winningBid_DESC
  video_ASC
  video_DESC
  ownerMember_ASC
  ownerMember_DESC
  ownerCuratorGroup_ASC
  ownerCuratorGroup_DESC
}

input EnglishAuctionSettledEventWhereUniqueInput {
  id: ID!
}

type EnglishAuctionSettledEventConnection {
  totalCount: Int!
  edges: [EnglishAuctionSettledEventEdge!]!
  pageInfo: PageInfo!
}

type EnglishAuctionSettledEventEdge {
  node: EnglishAuctionSettledEvent!
  cursor: String!
}

enum EnglishAuctionStartedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  video_ASC
  video_DESC
  auction_ASC
  auction_DESC
  ownerMember_ASC
  ownerMember_DESC
  ownerCuratorGroup_ASC
  ownerCuratorGroup_DESC
}

input EnglishAuctionStartedEventWhereUniqueInput {
  id: ID!
}

type EnglishAuctionStartedEventConnection {
  totalCount: Int!
  edges: [EnglishAuctionStartedEventEdge!]!
  pageInfo: PageInfo!
}

type EnglishAuctionStartedEventEdge {
  node: EnglishAuctionStartedEvent!
  cursor: String!
}

input EventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  type_eq: EventTypeOptions
  type_in: [EventTypeOptions!]
  AND: [EventWhereInput!]
  OR: [EventWhereInput!]
  NOT: [EventWhereInput!]
}

enum EventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  type_ASC
  type_DESC
}

enum ForumCategoryOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  parent_ASC
  parent_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
}

input ForumCategoryWhereUniqueInput {
  id: ID!
}

type ForumCategoryConnection {
  totalCount: Int!
  edges: [ForumCategoryEdge!]!
  pageInfo: PageInfo!
}

type ForumCategoryEdge {
  node: ForumCategory!
  cursor: String!
}

enum ForumPollAlternativeOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  index_ASC
  index_DESC
  poll_ASC
  poll_DESC
  text_ASC
  text_DESC
}

input ForumPollAlternativeWhereUniqueInput {
  id: ID!
}

type ForumPollAlternativeConnection {
  totalCount: Int!
  edges: [ForumPollAlternativeEdge!]!
  pageInfo: PageInfo!
}

type ForumPollAlternativeEdge {
  node: ForumPollAlternative!
  cursor: String!
}

enum ForumPollOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  thread_ASC
  thread_DESC
  description_ASC
  description_DESC
  endTime_ASC
  endTime_DESC
}

input ForumPollWhereUniqueInput {
  id: ID!
}

type ForumPollConnection {
  totalCount: Int!
  edges: [ForumPollEdge!]!
  pageInfo: PageInfo!
}

type ForumPollEdge {
  node: ForumPoll!
  cursor: String!
}

enum ForumPostReactionOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  member_ASC
  member_DESC
  post_ASC
  post_DESC
  reaction_ASC
  reaction_DESC
}

input ForumPostReactionWhereUniqueInput {
  id: ID!
}

type ForumPostReactionConnection {
  totalCount: Int!
  edges: [ForumPostReactionEdge!]!
  pageInfo: PageInfo!
}

type ForumPostReactionEdge {
  node: ForumPostReaction!
  cursor: String!
}

enum ForumPostOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  author_ASC
  author_DESC
  thread_ASC
  thread_DESC
  text_ASC
  text_DESC
  repliesTo_ASC
  repliesTo_DESC
  isVisible_ASC
  isVisible_DESC
  deletedInEvent_ASC
  deletedInEvent_DESC
}

input ForumPostWhereUniqueInput {
  id: ID!
}

type ForumPostConnection {
  totalCount: Int!
  edges: [ForumPostEdge!]!
  pageInfo: PageInfo!
}

type ForumPostEdge {
  node: ForumPost!
  cursor: String!
}

enum ForumThreadTagOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  visibleThreadsCount_ASC
  visibleThreadsCount_DESC
}

input ForumThreadTagWhereUniqueInput {
  id: ID!
}

type ForumThreadTagConnection {
  totalCount: Int!
  edges: [ForumThreadTagEdge!]!
  pageInfo: PageInfo!
}

type ForumThreadTagEdge {
  node: ForumThreadTag!
  cursor: String!
}

enum ForumThreadOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  author_ASC
  author_DESC
  category_ASC
  category_DESC
  title_ASC
  title_DESC
  initialPost_ASC
  initialPost_DESC
  visiblePostsCount_ASC
  visiblePostsCount_DESC
  isSticky_ASC
  isSticky_DESC
  isVisible_ASC
  isVisible_DESC
}

input ForumThreadWhereUniqueInput {
  id: ID!
}

type ForumThreadConnection {
  totalCount: Int!
  edges: [ForumThreadEdge!]!
  pageInfo: PageInfo!
}

type ForumThreadEdge {
  node: ForumThread!
  cursor: String!
}

input FundingRequestDestinationWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  amount_eq: BigInt
  amount_gt: BigInt
  amount_gte: BigInt
  amount_lt: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  account_eq: String
  account_contains: String
  account_startsWith: String
  account_endsWith: String
  account_in: [String!]
  list: FundingRequestDestinationsListWhereInput
  AND: [FundingRequestDestinationWhereInput!]
  OR: [FundingRequestDestinationWhereInput!]
  NOT: [FundingRequestDestinationWhereInput!]
}

input FundingRequestDestinationsListWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  phantom_eq: Int
  phantom_gt: Int
  phantom_gte: Int
  phantom_lt: Int
  phantom_lte: Int
  phantom_in: [Int!]
  destinations_none: FundingRequestDestinationWhereInput
  destinations_some: FundingRequestDestinationWhereInput
  destinations_every: FundingRequestDestinationWhereInput
  AND: [FundingRequestDestinationsListWhereInput!]
  OR: [FundingRequestDestinationsListWhereInput!]
  NOT: [FundingRequestDestinationsListWhereInput!]
}

enum FundingRequestDestinationOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  amount_ASC
  amount_DESC
  account_ASC
  account_DESC
  list_ASC
  list_DESC
}

input FundingRequestDestinationWhereUniqueInput {
  id: ID!
}

type FundingRequestDestinationConnection {
  totalCount: Int!
  edges: [FundingRequestDestinationEdge!]!
  pageInfo: PageInfo!
}

type FundingRequestDestinationEdge {
  node: FundingRequestDestination!
  cursor: String!
}

enum FundingRequestDestinationsListOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  phantom_ASC
  phantom_DESC
}

input FundingRequestDestinationsListWhereUniqueInput {
  id: ID!
}

type FundingRequestDestinationsListConnection {
  totalCount: Int!
  edges: [FundingRequestDestinationsListEdge!]!
  pageInfo: PageInfo!
}

type FundingRequestDestinationsListEdge {
  node: FundingRequestDestinationsList!
  cursor: String!
}

enum GeoCoordinatesOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  latitude_ASC
  latitude_DESC
  longitude_ASC
  longitude_DESC
}

input GeoCoordinatesWhereUniqueInput {
  id: ID!
}

type GeoCoordinatesConnection {
  totalCount: Int!
  edges: [GeoCoordinatesEdge!]!
  pageInfo: PageInfo!
}

type GeoCoordinatesEdge {
  node: GeoCoordinates!
  cursor: String!
}

input InitialInvitationBalanceUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newInitialBalance_eq: BigInt
  newInitialBalance_gt: BigInt
  newInitialBalance_gte: BigInt
  newInitialBalance_lt: BigInt
  newInitialBalance_lte: BigInt
  newInitialBalance_in: [BigInt!]
  AND: [InitialInvitationBalanceUpdatedEventWhereInput!]
  OR: [InitialInvitationBalanceUpdatedEventWhereInput!]
  NOT: [InitialInvitationBalanceUpdatedEventWhereInput!]
}

enum InitialInvitationBalanceUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  newInitialBalance_ASC
  newInitialBalance_DESC
}

type InitialInvitationBalanceUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # New initial invitation balance.
  newInitialBalance: BigInt!
}

input InitialInvitationBalanceUpdatedEventWhereUniqueInput {
  id: ID!
}

type InitialInvitationBalanceUpdatedEventConnection {
  totalCount: Int!
  edges: [InitialInvitationBalanceUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type InitialInvitationBalanceUpdatedEventEdge {
  node: InitialInvitationBalanceUpdatedEvent!
  cursor: String!
}

input InitialInvitationCountUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newInitialInvitationCount_eq: Int
  newInitialInvitationCount_gt: Int
  newInitialInvitationCount_gte: Int
  newInitialInvitationCount_lt: Int
  newInitialInvitationCount_lte: Int
  newInitialInvitationCount_in: [Int!]
  AND: [InitialInvitationCountUpdatedEventWhereInput!]
  OR: [InitialInvitationCountUpdatedEventWhereInput!]
  NOT: [InitialInvitationCountUpdatedEventWhereInput!]
}

enum InitialInvitationCountUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  newInitialInvitationCount_ASC
  newInitialInvitationCount_DESC
}

type InitialInvitationCountUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # New initial invitation count for members.
  newInitialInvitationCount: Int!
}

input InitialInvitationCountUpdatedEventWhereUniqueInput {
  id: ID!
}

type InitialInvitationCountUpdatedEventConnection {
  totalCount: Int!
  edges: [InitialInvitationCountUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type InitialInvitationCountUpdatedEventEdge {
  node: InitialInvitationCountUpdatedEvent!
  cursor: String!
}

enum InvitesTransferredEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  sourceMember_ASC
  sourceMember_DESC
  targetMember_ASC
  targetMember_DESC
  numberOfInvites_ASC
  numberOfInvites_DESC
}

input InvitesTransferredEventWhereUniqueInput {
  id: ID!
}

type InvitesTransferredEventConnection {
  totalCount: Int!
  edges: [InvitesTransferredEventEdge!]!
  pageInfo: PageInfo!
}

type InvitesTransferredEventEdge {
  node: InvitesTransferredEvent!
  cursor: String!
}

enum LanguageOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  iso_ASC
  iso_DESC
  createdInBlock_ASC
  createdInBlock_DESC
}

input LanguageWhereUniqueInput {
  id: ID!
}

type LanguageConnection {
  totalCount: Int!
  edges: [LanguageEdge!]!
  pageInfo: PageInfo!
}

type LanguageEdge {
  node: Language!
  cursor: String!
}

input LeaderInvitationQuotaUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newInvitationQuota_eq: Int
  newInvitationQuota_gt: Int
  newInvitationQuota_gte: Int
  newInvitationQuota_lt: Int
  newInvitationQuota_lte: Int
  newInvitationQuota_in: [Int!]
  AND: [LeaderInvitationQuotaUpdatedEventWhereInput!]
  OR: [LeaderInvitationQuotaUpdatedEventWhereInput!]
  NOT: [LeaderInvitationQuotaUpdatedEventWhereInput!]
}

enum LeaderInvitationQuotaUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  newInvitationQuota_ASC
  newInvitationQuota_DESC
}

type LeaderInvitationQuotaUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # New quota.
  newInvitationQuota: Int!
}

input LeaderInvitationQuotaUpdatedEventWhereUniqueInput {
  id: ID!
}

type LeaderInvitationQuotaUpdatedEventConnection {
  totalCount: Int!
  edges: [LeaderInvitationQuotaUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type LeaderInvitationQuotaUpdatedEventEdge {
  node: LeaderInvitationQuotaUpdatedEvent!
  cursor: String!
}

enum LeaderSetEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
}

input LeaderSetEventWhereUniqueInput {
  id: ID!
}

type LeaderSetEventConnection {
  totalCount: Int!
  edges: [LeaderSetEventEdge!]!
  pageInfo: PageInfo!
}

type LeaderSetEventEdge {
  node: LeaderSetEvent!
  cursor: String!
}

enum LeaderUnsetEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  leader_ASC
  leader_DESC
}

input LeaderUnsetEventWhereUniqueInput {
  id: ID!
}

type LeaderUnsetEventConnection {
  totalCount: Int!
  edges: [LeaderUnsetEventEdge!]!
  pageInfo: PageInfo!
}

type LeaderUnsetEventEdge {
  node: LeaderUnsetEvent!
  cursor: String!
}

enum LicenseOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  code_ASC
  code_DESC
  attribution_ASC
  attribution_DESC
  customText_ASC
  customText_DESC
}

input LicenseWhereUniqueInput {
  id: ID!
}

type LicenseConnection {
  totalCount: Int!
  edges: [LicenseEdge!]!
  pageInfo: PageInfo!
}

type LicenseEdge {
  node: License!
  cursor: String!
}

enum MemberAccountsUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  member_ASC
  member_DESC
  newRootAccount_ASC
  newRootAccount_DESC
  newControllerAccount_ASC
  newControllerAccount_DESC
}

input MemberAccountsUpdatedEventWhereUniqueInput {
  id: ID!
}

type MemberAccountsUpdatedEventConnection {
  totalCount: Int!
  edges: [MemberAccountsUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type MemberAccountsUpdatedEventEdge {
  node: MemberAccountsUpdatedEvent!
  cursor: String!
}

enum MemberBannedFromChannelEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  channel_ASC
  channel_DESC
  member_ASC
  member_DESC
  action_ASC
  action_DESC
}

input MemberBannedFromChannelEventWhereUniqueInput {
  id: ID!
}

type MemberBannedFromChannelEventConnection {
  totalCount: Int!
  edges: [MemberBannedFromChannelEventEdge!]!
  pageInfo: PageInfo!
}

type MemberBannedFromChannelEventEdge {
  node: MemberBannedFromChannelEvent!
  cursor: String!
}

enum MemberInvitedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  invitingMember_ASC
  invitingMember_DESC
  newMember_ASC
  newMember_DESC
  rootAccount_ASC
  rootAccount_DESC
  controllerAccount_ASC
  controllerAccount_DESC
  handle_ASC
  handle_DESC
  metadata_ASC
  metadata_DESC
}

input MemberInvitedEventWhereUniqueInput {
  id: ID!
}

type MemberInvitedEventConnection {
  totalCount: Int!
  edges: [MemberInvitedEventEdge!]!
  pageInfo: PageInfo!
}

type MemberInvitedEventEdge {
  node: MemberInvitedEvent!
  cursor: String!
}

enum MemberMetadataOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  name_ASC
  name_DESC
  about_ASC
  about_DESC
}

input MemberMetadataWhereUniqueInput {
  id: ID!
}

type MemberMetadataConnection {
  totalCount: Int!
  edges: [MemberMetadataEdge!]!
  pageInfo: PageInfo!
}

type MemberMetadataEdge {
  node: MemberMetadata!
  cursor: String!
}

enum MemberProfileUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  member_ASC
  member_DESC
  newHandle_ASC
  newHandle_DESC
  newMetadata_ASC
  newMetadata_DESC
}

input MemberProfileUpdatedEventWhereUniqueInput {
  id: ID!
}

type MemberProfileUpdatedEventConnection {
  totalCount: Int!
  edges: [MemberProfileUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type MemberProfileUpdatedEventEdge {
  node: MemberProfileUpdatedEvent!
  cursor: String!
}

enum MemberVerificationStatusUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  member_ASC
  member_DESC
  worker_ASC
  worker_DESC
  isVerified_ASC
  isVerified_DESC
}

input MemberVerificationStatusUpdatedEventWhereUniqueInput {
  id: ID!
}

type MemberVerificationStatusUpdatedEventConnection {
  totalCount: Int!
  edges: [MemberVerificationStatusUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type MemberVerificationStatusUpdatedEventEdge {
  node: MemberVerificationStatusUpdatedEvent!
  cursor: String!
}

enum MembershipBoughtEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  newMember_ASC
  newMember_DESC
  rootAccount_ASC
  rootAccount_DESC
  controllerAccount_ASC
  controllerAccount_DESC
  handle_ASC
  handle_DESC
  metadata_ASC
  metadata_DESC
  referrer_ASC
  referrer_DESC
}

input MembershipBoughtEventWhereUniqueInput {
  id: ID!
}

type MembershipBoughtEventConnection {
  totalCount: Int!
  edges: [MembershipBoughtEventEdge!]!
  pageInfo: PageInfo!
}

type MembershipBoughtEventEdge {
  node: MembershipBoughtEvent!
  cursor: String!
}

enum MembershipExternalResourceOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  type_ASC
  type_DESC
  value_ASC
  value_DESC
  memberMetadata_ASC
  memberMetadata_DESC
}

input MembershipExternalResourceWhereUniqueInput {
  id: ID!
}

type MembershipExternalResourceConnection {
  totalCount: Int!
  edges: [MembershipExternalResourceEdge!]!
  pageInfo: PageInfo!
}

type MembershipExternalResourceEdge {
  node: MembershipExternalResource!
  cursor: String!
}

input MembershipPriceUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newPrice_eq: BigInt
  newPrice_gt: BigInt
  newPrice_gte: BigInt
  newPrice_lt: BigInt
  newPrice_lte: BigInt
  newPrice_in: [BigInt!]
  AND: [MembershipPriceUpdatedEventWhereInput!]
  OR: [MembershipPriceUpdatedEventWhereInput!]
  NOT: [MembershipPriceUpdatedEventWhereInput!]
}

enum MembershipPriceUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  newPrice_ASC
  newPrice_DESC
}

type MembershipPriceUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # The new membership price.
  newPrice: BigInt!
}

input MembershipPriceUpdatedEventWhereUniqueInput {
  id: ID!
}

type MembershipPriceUpdatedEventConnection {
  totalCount: Int!
  edges: [MembershipPriceUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type MembershipPriceUpdatedEventEdge {
  node: MembershipPriceUpdatedEvent!
  cursor: String!
}

input MembershipSystemSnapshotWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  snapshotBlock_eq: Int
  snapshotBlock_gt: Int
  snapshotBlock_gte: Int
  snapshotBlock_lt: Int
  snapshotBlock_lte: Int
  snapshotBlock_in: [Int!]
  defaultInviteCount_eq: Int
  defaultInviteCount_gt: Int
  defaultInviteCount_gte: Int
  defaultInviteCount_lt: Int
  defaultInviteCount_lte: Int
  defaultInviteCount_in: [Int!]
  membershipPrice_eq: BigInt
  membershipPrice_gt: BigInt
  membershipPrice_gte: BigInt
  membershipPrice_lt: BigInt
  membershipPrice_lte: BigInt
  membershipPrice_in: [BigInt!]
  referralCut_eq: Int
  referralCut_gt: Int
  referralCut_gte: Int
  referralCut_lt: Int
  referralCut_lte: Int
  referralCut_in: [Int!]
  invitedInitialBalance_eq: BigInt
  invitedInitialBalance_gt: BigInt
  invitedInitialBalance_gte: BigInt
  invitedInitialBalance_lt: BigInt
  invitedInitialBalance_lte: BigInt
  invitedInitialBalance_in: [BigInt!]
  AND: [MembershipSystemSnapshotWhereInput!]
  OR: [MembershipSystemSnapshotWhereInput!]
  NOT: [MembershipSystemSnapshotWhereInput!]
}

enum MembershipSystemSnapshotOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  snapshotBlock_ASC
  snapshotBlock_DESC
  defaultInviteCount_ASC
  defaultInviteCount_DESC
  membershipPrice_ASC
  membershipPrice_DESC
  referralCut_ASC
  referralCut_DESC
  invitedInitialBalance_ASC
  invitedInitialBalance_DESC
}

type MembershipSystemSnapshot implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # The snapshot block number
  snapshotBlock: Int!

  # Initial invitation count of a new member.
  defaultInviteCount: Int!

  # Current price to buy a membership.
  membershipPrice: BigInt!

  # Percentage of tokens diverted to invitor.
  referralCut: Int!

  # The initial, locked, balance credited to controller account of invitee.
  invitedInitialBalance: BigInt!
}

input MembershipSystemSnapshotWhereUniqueInput {
  id: ID!
}

type MembershipSystemSnapshotConnection {
  totalCount: Int!
  edges: [MembershipSystemSnapshotEdge!]!
  pageInfo: PageInfo!
}

type MembershipSystemSnapshotEdge {
  node: MembershipSystemSnapshot!
  cursor: String!
}

enum MembershipOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  handle_ASC
  handle_DESC
  metadata_ASC
  metadata_DESC
  controllerAccount_ASC
  controllerAccount_DESC
  rootAccount_ASC
  rootAccount_DESC
  isVerified_ASC
  isVerified_DESC
  inviteCount_ASC
  inviteCount_DESC
  invitedBy_ASC
  invitedBy_DESC
  referredBy_ASC
  referredBy_DESC
  isFoundingMember_ASC
  isFoundingMember_DESC
  isCouncilMember_ASC
  isCouncilMember_DESC
}

input MembershipWhereUniqueInput {
  id: ID
  handle: String
}

type MembershipConnection {
  totalCount: Int!
  edges: [MembershipEdge!]!
  pageInfo: PageInfo!
}

type MembershipEdge {
  node: Membership!
  cursor: String!
}

input MetaprotocolTransactionStatusEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  status_json: JSONObject
  AND: [MetaprotocolTransactionStatusEventWhereInput!]
  OR: [MetaprotocolTransactionStatusEventWhereInput!]
  NOT: [MetaprotocolTransactionStatusEventWhereInput!]
}

enum MetaprotocolTransactionStatusEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
}

type MetaprotocolTransactionStatusEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # The status of metaprotocol action
  status: MetaprotocolTransactionStatus!
}

union MetaprotocolTransactionStatus =
    MetaprotocolTransactionPending
  | MetaprotocolTransactionSuccessful
  | MetaprotocolTransactionErrored

type MetaprotocolTransactionPending {
  # Type needs to have at least one non-relation entity. This value is not used.
  dummy: Int
}

type MetaprotocolTransactionSuccessful {
  # Type needs to have at least one non-relation entity. This value is not used.
  dummy: Int

  # ID of the created comment (if any)
  commentCreated: Comment

  # ID of the edited comment (if any)
  commentEdited: Comment

  # ID of the deleted comment (if any)
  commentDeleted: Comment

  # ID of the moderated comment (if any)
  commentModerated: Comment
}

type MetaprotocolTransactionErrored {
  message: String!
}

input MetaprotocolTransactionStatusEventWhereUniqueInput {
  id: ID!
}

type MetaprotocolTransactionStatusEventConnection {
  totalCount: Int!
  edges: [MetaprotocolTransactionStatusEventEdge!]!
  pageInfo: PageInfo!
}

type MetaprotocolTransactionStatusEventEdge {
  node: MetaprotocolTransactionStatusEvent!
  cursor: String!
}

enum NewCandidateEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  candidate_ASC
  candidate_DESC
  electionRound_ASC
  electionRound_DESC
  stakingAccount_ASC
  stakingAccount_DESC
  rewardAccount_ASC
  rewardAccount_DESC
  balance_ASC
  balance_DESC
}

input NewCandidateEventWhereUniqueInput {
  id: ID!
}

type NewCandidateEventConnection {
  totalCount: Int!
  edges: [NewCandidateEventEdge!]!
  pageInfo: PageInfo!
}

type NewCandidateEventEdge {
  node: NewCandidateEvent!
  cursor: String!
}

enum NewCouncilElectedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  electedCouncil_ASC
  electedCouncil_DESC
}

input NewCouncilElectedEventWhereUniqueInput {
  id: ID!
}

type NewCouncilElectedEventConnection {
  totalCount: Int!
  edges: [NewCouncilElectedEventEdge!]!
  pageInfo: PageInfo!
}

type NewCouncilElectedEventEdge {
  node: NewCouncilElectedEvent!
  cursor: String!
}

input NewCouncilNotElectedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  AND: [NewCouncilNotElectedEventWhereInput!]
  OR: [NewCouncilNotElectedEventWhereInput!]
  NOT: [NewCouncilNotElectedEventWhereInput!]
}

enum NewCouncilNotElectedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
}

type NewCouncilNotElectedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
}

input NewCouncilNotElectedEventWhereUniqueInput {
  id: ID!
}

type NewCouncilNotElectedEventConnection {
  totalCount: Int!
  edges: [NewCouncilNotElectedEventEdge!]!
  pageInfo: PageInfo!
}

type NewCouncilNotElectedEventEdge {
  node: NewCouncilNotElectedEvent!
  cursor: String!
}

enum NewMissedRewardLevelReachedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  newMissedRewardAmount_ASC
  newMissedRewardAmount_DESC
}

input NewMissedRewardLevelReachedEventWhereUniqueInput {
  id: ID!
}

type NewMissedRewardLevelReachedEventConnection {
  totalCount: Int!
  edges: [NewMissedRewardLevelReachedEventEdge!]!
  pageInfo: PageInfo!
}

type NewMissedRewardLevelReachedEventEdge {
  node: NewMissedRewardLevelReachedEvent!
  cursor: String!
}

enum NftBoughtEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  video_ASC
  video_DESC
  member_ASC
  member_DESC
  ownerMember_ASC
  ownerMember_DESC
  ownerCuratorGroup_ASC
  ownerCuratorGroup_DESC
  price_ASC
  price_DESC
}

input NftBoughtEventWhereUniqueInput {
  id: ID!
}

type NftBoughtEventConnection {
  totalCount: Int!
  edges: [NftBoughtEventEdge!]!
  pageInfo: PageInfo!
}

type NftBoughtEventEdge {
  node: NftBoughtEvent!
  cursor: String!
}

enum NftIssuedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  video_ASC
  video_DESC
  royalty_ASC
  royalty_DESC
  metadata_ASC
  metadata_DESC
  ownerMember_ASC
  ownerMember_DESC
  ownerCuratorGroup_ASC
  ownerCuratorGroup_DESC
}

input NftIssuedEventWhereUniqueInput {
  id: ID!
}

type NftIssuedEventConnection {
  totalCount: Int!
  edges: [NftIssuedEventEdge!]!
  pageInfo: PageInfo!
}

type NftIssuedEventEdge {
  node: NftIssuedEvent!
  cursor: String!
}

enum NftSellOrderMadeEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  video_ASC
  video_DESC
  ownerMember_ASC
  ownerMember_DESC
  ownerCuratorGroup_ASC
  ownerCuratorGroup_DESC
  price_ASC
  price_DESC
}

input NftSellOrderMadeEventWhereUniqueInput {
  id: ID!
}

type NftSellOrderMadeEventConnection {
  totalCount: Int!
  edges: [NftSellOrderMadeEventEdge!]!
  pageInfo: PageInfo!
}

type NftSellOrderMadeEventEdge {
  node: NftSellOrderMadeEvent!
  cursor: String!
}

enum NftSlingedBackToTheOriginalArtistEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  video_ASC
  video_DESC
  ownerMember_ASC
  ownerMember_DESC
  ownerCuratorGroup_ASC
  ownerCuratorGroup_DESC
}

input NftSlingedBackToTheOriginalArtistEventWhereUniqueInput {
  id: ID!
}

type NftSlingedBackToTheOriginalArtistEventConnection {
  totalCount: Int!
  edges: [NftSlingedBackToTheOriginalArtistEventEdge!]!
  pageInfo: PageInfo!
}

type NftSlingedBackToTheOriginalArtistEventEdge {
  node: NftSlingedBackToTheOriginalArtistEvent!
  cursor: String!
}

enum NodeLocationMetadataOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  countryCode_ASC
  countryCode_DESC
  city_ASC
  city_DESC
  coordinates_ASC
  coordinates_DESC
}

input NodeLocationMetadataWhereUniqueInput {
  id: ID!
}

type NodeLocationMetadataConnection {
  totalCount: Int!
  edges: [NodeLocationMetadataEdge!]!
  pageInfo: PageInfo!
}

type NodeLocationMetadataEdge {
  node: NodeLocationMetadata!
  cursor: String!
}

input NotEnoughCandidatesEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  AND: [NotEnoughCandidatesEventWhereInput!]
  OR: [NotEnoughCandidatesEventWhereInput!]
  NOT: [NotEnoughCandidatesEventWhereInput!]
}

enum NotEnoughCandidatesEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
}

type NotEnoughCandidatesEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
}

input NotEnoughCandidatesEventWhereUniqueInput {
  id: ID!
}

type NotEnoughCandidatesEventConnection {
  totalCount: Int!
  edges: [NotEnoughCandidatesEventEdge!]!
  pageInfo: PageInfo!
}

type NotEnoughCandidatesEventEdge {
  node: NotEnoughCandidatesEvent!
  cursor: String!
}

enum OfferAcceptedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  video_ASC
  video_DESC
  ownerMember_ASC
  ownerMember_DESC
  ownerCuratorGroup_ASC
  ownerCuratorGroup_DESC
  price_ASC
  price_DESC
}

input OfferAcceptedEventWhereUniqueInput {
  id: ID!
}

type OfferAcceptedEventConnection {
  totalCount: Int!
  edges: [OfferAcceptedEventEdge!]!
  pageInfo: PageInfo!
}

type OfferAcceptedEventEdge {
  node: OfferAcceptedEvent!
  cursor: String!
}

enum OfferCanceledEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  video_ASC
  video_DESC
  ownerMember_ASC
  ownerMember_DESC
  ownerCuratorGroup_ASC
  ownerCuratorGroup_DESC
}

input OfferCanceledEventWhereUniqueInput {
  id: ID!
}

type OfferCanceledEventConnection {
  totalCount: Int!
  edges: [OfferCanceledEventEdge!]!
  pageInfo: PageInfo!
}

type OfferCanceledEventEdge {
  node: OfferCanceledEvent!
  cursor: String!
}

enum OfferStartedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  video_ASC
  video_DESC
  member_ASC
  member_DESC
  price_ASC
  price_DESC
  ownerMember_ASC
  ownerMember_DESC
  ownerCuratorGroup_ASC
  ownerCuratorGroup_DESC
}

input OfferStartedEventWhereUniqueInput {
  id: ID!
}

type OfferStartedEventConnection {
  totalCount: Int!
  edges: [OfferStartedEventEdge!]!
  pageInfo: PageInfo!
}

type OfferStartedEventEdge {
  node: OfferStartedEvent!
  cursor: String!
}

enum OpenAuctionBidAcceptedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  video_ASC
  video_DESC
  ownerMember_ASC
  ownerMember_DESC
  ownerCuratorGroup_ASC
  ownerCuratorGroup_DESC
  winningBid_ASC
  winningBid_DESC
  winningBidder_ASC
  winningBidder_DESC
}

input OpenAuctionBidAcceptedEventWhereUniqueInput {
  id: ID!
}

type OpenAuctionBidAcceptedEventConnection {
  totalCount: Int!
  edges: [OpenAuctionBidAcceptedEventEdge!]!
  pageInfo: PageInfo!
}

type OpenAuctionBidAcceptedEventEdge {
  node: OpenAuctionBidAcceptedEvent!
  cursor: String!
}

enum OpenAuctionStartedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  video_ASC
  video_DESC
  auction_ASC
  auction_DESC
  ownerMember_ASC
  ownerMember_DESC
  ownerCuratorGroup_ASC
  ownerCuratorGroup_DESC
}

input OpenAuctionStartedEventWhereUniqueInput {
  id: ID!
}

type OpenAuctionStartedEventConnection {
  totalCount: Int!
  edges: [OpenAuctionStartedEventEdge!]!
  pageInfo: PageInfo!
}

type OpenAuctionStartedEventEdge {
  node: OpenAuctionStartedEvent!
  cursor: String!
}

enum OpeningAddedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  opening_ASC
  opening_DESC
}

input OpeningAddedEventWhereUniqueInput {
  id: ID!
}

type OpeningAddedEventConnection {
  totalCount: Int!
  edges: [OpeningAddedEventEdge!]!
  pageInfo: PageInfo!
}

type OpeningAddedEventEdge {
  node: OpeningAddedEvent!
  cursor: String!
}

enum OpeningCanceledEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  opening_ASC
  opening_DESC
}

input OpeningCanceledEventWhereUniqueInput {
  id: ID!
}

type OpeningCanceledEventConnection {
  totalCount: Int!
  edges: [OpeningCanceledEventEdge!]!
  pageInfo: PageInfo!
}

type OpeningCanceledEventEdge {
  node: OpeningCanceledEvent!
  cursor: String!
}

enum OpeningFilledEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  opening_ASC
  opening_DESC
}

input OpeningFilledEventWhereUniqueInput {
  id: ID!
}

type OpeningFilledEventConnection {
  totalCount: Int!
  edges: [OpeningFilledEventEdge!]!
  pageInfo: PageInfo!
}

type OpeningFilledEventEdge {
  node: OpeningFilledEvent!
  cursor: String!
}

enum OracleJudgmentSubmittedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  bounty_ASC
  bounty_DESC
  rationale_ASC
  rationale_DESC
}

input OracleJudgmentSubmittedEventWhereUniqueInput {
  id: ID!
}

type OracleJudgmentSubmittedEventConnection {
  totalCount: Int!
  edges: [OracleJudgmentSubmittedEventEdge!]!
  pageInfo: PageInfo!
}

type OracleJudgmentSubmittedEventEdge {
  node: OracleJudgmentSubmittedEvent!
  cursor: String!
}

enum OwnedNftOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  ownerMember_ASC
  ownerMember_DESC
  metadata_ASC
  metadata_DESC
  transactionalStatusAuction_ASC
  transactionalStatusAuction_DESC
  creatorRoyalty_ASC
  creatorRoyalty_DESC
  ownerCuratorGroup_ASC
  ownerCuratorGroup_DESC
  isOwnedByChannel_ASC
  isOwnedByChannel_DESC
  creatorChannel_ASC
  creatorChannel_DESC
  lastSalePrice_ASC
  lastSalePrice_DESC
  lastSaleDate_ASC
  lastSaleDate_DESC
}

input OwnedNftWhereUniqueInput {
  id: ID!
}

type OwnedNftConnection {
  totalCount: Int!
  edges: [OwnedNftEdge!]!
  pageInfo: PageInfo!
}

type OwnedNftEdge {
  node: OwnedNft!
  cursor: String!
}

enum PostAddedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  post_ASC
  post_DESC
  isEditable_ASC
  isEditable_DESC
  text_ASC
  text_DESC
}

input PostAddedEventWhereUniqueInput {
  id: ID!
}

type PostAddedEventConnection {
  totalCount: Int!
  edges: [PostAddedEventEdge!]!
  pageInfo: PageInfo!
}

type PostAddedEventEdge {
  node: PostAddedEvent!
  cursor: String!
}

enum PostDeletedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  actor_ASC
  actor_DESC
  rationale_ASC
  rationale_DESC
}

input PostDeletedEventWhereUniqueInput {
  id: ID!
}

type PostDeletedEventConnection {
  totalCount: Int!
  edges: [PostDeletedEventEdge!]!
  pageInfo: PageInfo!
}

type PostDeletedEventEdge {
  node: PostDeletedEvent!
  cursor: String!
}

enum PostModeratedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  post_ASC
  post_DESC
  rationale_ASC
  rationale_DESC
  actor_ASC
  actor_DESC
}

input PostModeratedEventWhereUniqueInput {
  id: ID!
}

type PostModeratedEventConnection {
  totalCount: Int!
  edges: [PostModeratedEventEdge!]!
  pageInfo: PageInfo!
}

type PostModeratedEventEdge {
  node: PostModeratedEvent!
  cursor: String!
}

enum PostReactedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  post_ASC
  post_DESC
  reactingMember_ASC
  reactingMember_DESC
}

input PostReactedEventWhereUniqueInput {
  id: ID!
}

type PostReactedEventConnection {
  totalCount: Int!
  edges: [PostReactedEventEdge!]!
  pageInfo: PageInfo!
}

type PostReactedEventEdge {
  node: PostReactedEvent!
  cursor: String!
}

enum PostTextUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  post_ASC
  post_DESC
  newText_ASC
  newText_DESC
}

input PostTextUpdatedEventWhereUniqueInput {
  id: ID!
}

type PostTextUpdatedEventConnection {
  totalCount: Int!
  edges: [PostTextUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type PostTextUpdatedEventEdge {
  node: PostTextUpdatedEvent!
  cursor: String!
}

enum ProposalCancelledEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  proposal_ASC
  proposal_DESC
}

input ProposalCancelledEventWhereUniqueInput {
  id: ID!
}

type ProposalCancelledEventConnection {
  totalCount: Int!
  edges: [ProposalCancelledEventEdge!]!
  pageInfo: PageInfo!
}

type ProposalCancelledEventEdge {
  node: ProposalCancelledEvent!
  cursor: String!
}

enum ProposalCreatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  proposal_ASC
  proposal_DESC
}

input ProposalCreatedEventWhereUniqueInput {
  id: ID!
}

type ProposalCreatedEventConnection {
  totalCount: Int!
  edges: [ProposalCreatedEventEdge!]!
  pageInfo: PageInfo!
}

type ProposalCreatedEventEdge {
  node: ProposalCreatedEvent!
  cursor: String!
}

enum ProposalDecisionMadeEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  proposal_ASC
  proposal_DESC
}

input ProposalDecisionMadeEventWhereUniqueInput {
  id: ID!
}

type ProposalDecisionMadeEventConnection {
  totalCount: Int!
  edges: [ProposalDecisionMadeEventEdge!]!
  pageInfo: PageInfo!
}

type ProposalDecisionMadeEventEdge {
  node: ProposalDecisionMadeEvent!
  cursor: String!
}

enum ProposalDiscussionPostCreatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  post_ASC
  post_DESC
  text_ASC
  text_DESC
}

input ProposalDiscussionPostCreatedEventWhereUniqueInput {
  id: ID!
}

type ProposalDiscussionPostCreatedEventConnection {
  totalCount: Int!
  edges: [ProposalDiscussionPostCreatedEventEdge!]!
  pageInfo: PageInfo!
}

type ProposalDiscussionPostCreatedEventEdge {
  node: ProposalDiscussionPostCreatedEvent!
  cursor: String!
}

enum ProposalDiscussionPostDeletedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  post_ASC
  post_DESC
  actor_ASC
  actor_DESC
}

input ProposalDiscussionPostDeletedEventWhereUniqueInput {
  id: ID!
}

type ProposalDiscussionPostDeletedEventConnection {
  totalCount: Int!
  edges: [ProposalDiscussionPostDeletedEventEdge!]!
  pageInfo: PageInfo!
}

type ProposalDiscussionPostDeletedEventEdge {
  node: ProposalDiscussionPostDeletedEvent!
  cursor: String!
}

enum ProposalDiscussionPostUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  post_ASC
  post_DESC
  text_ASC
  text_DESC
}

input ProposalDiscussionPostUpdatedEventWhereUniqueInput {
  id: ID!
}

type ProposalDiscussionPostUpdatedEventConnection {
  totalCount: Int!
  edges: [ProposalDiscussionPostUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type ProposalDiscussionPostUpdatedEventEdge {
  node: ProposalDiscussionPostUpdatedEvent!
  cursor: String!
}

enum ProposalDiscussionPostOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  discussionThread_ASC
  discussionThread_DESC
  author_ASC
  author_DESC
  isVisible_ASC
  isVisible_DESC
  text_ASC
  text_DESC
  repliesTo_ASC
  repliesTo_DESC
}

input ProposalDiscussionPostWhereUniqueInput {
  id: ID!
}

type ProposalDiscussionPostConnection {
  totalCount: Int!
  edges: [ProposalDiscussionPostEdge!]!
  pageInfo: PageInfo!
}

type ProposalDiscussionPostEdge {
  node: ProposalDiscussionPost!
  cursor: String!
}

enum ProposalDiscussionThreadModeChangedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  thread_ASC
  thread_DESC
  actor_ASC
  actor_DESC
}

input ProposalDiscussionThreadModeChangedEventWhereUniqueInput {
  id: ID!
}

type ProposalDiscussionThreadModeChangedEventConnection {
  totalCount: Int!
  edges: [ProposalDiscussionThreadModeChangedEventEdge!]!
  pageInfo: PageInfo!
}

type ProposalDiscussionThreadModeChangedEventEdge {
  node: ProposalDiscussionThreadModeChangedEvent!
  cursor: String!
}

enum ProposalDiscussionThreadOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  proposal_ASC
  proposal_DESC
}

input ProposalDiscussionThreadWhereUniqueInput {
  id: ID!
}

type ProposalDiscussionThreadConnection {
  totalCount: Int!
  edges: [ProposalDiscussionThreadEdge!]!
  pageInfo: PageInfo!
}

type ProposalDiscussionThreadEdge {
  node: ProposalDiscussionThread!
  cursor: String!
}

enum ProposalDiscussionWhitelistOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  phantom_ASC
  phantom_DESC
}

input ProposalDiscussionWhitelistWhereUniqueInput {
  id: ID!
}

type ProposalDiscussionWhitelistConnection {
  totalCount: Int!
  edges: [ProposalDiscussionWhitelistEdge!]!
  pageInfo: PageInfo!
}

type ProposalDiscussionWhitelistEdge {
  node: ProposalDiscussionWhitelist!
  cursor: String!
}

enum ProposalExecutedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  proposal_ASC
  proposal_DESC
}

input ProposalExecutedEventWhereUniqueInput {
  id: ID!
}

type ProposalExecutedEventConnection {
  totalCount: Int!
  edges: [ProposalExecutedEventEdge!]!
  pageInfo: PageInfo!
}

type ProposalExecutedEventEdge {
  node: ProposalExecutedEvent!
  cursor: String!
}

enum ProposalStatusUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  proposal_ASC
  proposal_DESC
}

input ProposalStatusUpdatedEventWhereUniqueInput {
  id: ID!
}

type ProposalStatusUpdatedEventConnection {
  totalCount: Int!
  edges: [ProposalStatusUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type ProposalStatusUpdatedEventEdge {
  node: ProposalStatusUpdatedEvent!
  cursor: String!
}

enum ProposalVotedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  voter_ASC
  voter_DESC
  voteKind_ASC
  voteKind_DESC
  proposal_ASC
  proposal_DESC
  rationale_ASC
  rationale_DESC
  votingRound_ASC
  votingRound_DESC
}

input ProposalVotedEventWhereUniqueInput {
  id: ID!
}

type ProposalVotedEventConnection {
  totalCount: Int!
  edges: [ProposalVotedEventEdge!]!
  pageInfo: PageInfo!
}

type ProposalVotedEventEdge {
  node: ProposalVotedEvent!
  cursor: String!
}

enum ProposalOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  stakingAccount_ASC
  stakingAccount_DESC
  creator_ASC
  creator_DESC
  exactExecutionBlock_ASC
  exactExecutionBlock_DESC
  councilApprovals_ASC
  councilApprovals_DESC
  isFinalized_ASC
  isFinalized_DESC
  statusSetAtBlock_ASC
  statusSetAtBlock_DESC
  statusSetAtTime_ASC
  statusSetAtTime_DESC
}

input ProposalWhereUniqueInput {
  id: ID!
}

type ProposalConnection {
  totalCount: Int!
  edges: [ProposalEdge!]!
  pageInfo: PageInfo!
}

type ProposalEdge {
  node: Proposal!
  cursor: String!
}

type ChannelCategoriesByNameFTSOutput {
  item: ChannelCategoriesByNameSearchResult!
  rank: Float!
  isTypeOf: String!
  highlight: String!
}

union ChannelCategoriesByNameSearchResult = ChannelCategory

type CommentTextFTSOutput {
  item: CommentTextSearchResult!
  rank: Float!
  isTypeOf: String!
  highlight: String!
}

union CommentTextSearchResult = Comment

type MembersByHandleFTSOutput {
  item: MembersByHandleSearchResult!
  rank: Float!
  isTypeOf: String!
  highlight: String!
}

union MembersByHandleSearchResult = Membership

type PostsByTextFTSOutput {
  item: PostsByTextSearchResult!
  rank: Float!
  isTypeOf: String!
  highlight: String!
}

union PostsByTextSearchResult = ForumPost

type ProposalsByTitleFTSOutput {
  item: ProposalsByTitleSearchResult!
  rank: Float!
  isTypeOf: String!
  highlight: String!
}

union ProposalsByTitleSearchResult = Proposal

type SearchFTSOutput {
  item: SearchSearchResult!
  rank: Float!
  isTypeOf: String!
  highlight: String!
}

union SearchSearchResult = Channel | Video

type ThreadsByTitleFTSOutput {
  item: ThreadsByTitleSearchResult!
  rank: Float!
  isTypeOf: String!
  highlight: String!
}

union ThreadsByTitleSearchResult = ForumThread

type VideoCategoriesByNameFTSOutput {
  item: VideoCategoriesByNameSearchResult!
  rank: Float!
  isTypeOf: String!
  highlight: String!
}

union VideoCategoriesByNameSearchResult = VideoCategory

input ReferendumFinishedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  AND: [ReferendumFinishedEventWhereInput!]
  OR: [ReferendumFinishedEventWhereInput!]
  NOT: [ReferendumFinishedEventWhereInput!]
}

enum ReferendumFinishedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
}

type ReferendumFinishedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
}

input ReferendumFinishedEventWhereUniqueInput {
  id: ID!
}

type ReferendumFinishedEventConnection {
  totalCount: Int!
  edges: [ReferendumFinishedEventEdge!]!
  pageInfo: PageInfo!
}

type ReferendumFinishedEventEdge {
  node: ReferendumFinishedEvent!
  cursor: String!
}

enum ReferendumStageRevealingOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  startedAtBlock_ASC
  startedAtBlock_DESC
  winningTargetCount_ASC
  winningTargetCount_DESC
  electionRound_ASC
  electionRound_DESC
}

input ReferendumStageRevealingWhereUniqueInput {
  id: ID!
}

type ReferendumStageRevealingConnection {
  totalCount: Int!
  edges: [ReferendumStageRevealingEdge!]!
  pageInfo: PageInfo!
}

type ReferendumStageRevealingEdge {
  node: ReferendumStageRevealing!
  cursor: String!
}

enum ReferendumStageVotingOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  startedAtBlock_ASC
  startedAtBlock_DESC
  winningTargetCount_ASC
  winningTargetCount_DESC
  electionRound_ASC
  electionRound_DESC
}

input ReferendumStageVotingWhereUniqueInput {
  id: ID!
}

type ReferendumStageVotingConnection {
  totalCount: Int!
  edges: [ReferendumStageVotingEdge!]!
  pageInfo: PageInfo!
}

type ReferendumStageVotingEdge {
  node: ReferendumStageVoting!
  cursor: String!
}

input ReferendumStartedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  winningTargetCount_eq: BigInt
  winningTargetCount_gt: BigInt
  winningTargetCount_gte: BigInt
  winningTargetCount_lt: BigInt
  winningTargetCount_lte: BigInt
  winningTargetCount_in: [BigInt!]
  AND: [ReferendumStartedEventWhereInput!]
  OR: [ReferendumStartedEventWhereInput!]
  NOT: [ReferendumStartedEventWhereInput!]
}

enum ReferendumStartedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  winningTargetCount_ASC
  winningTargetCount_DESC
}

type ReferendumStartedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Amount of winning referendum options.
  winningTargetCount: BigInt!
}

input ReferendumStartedEventWhereUniqueInput {
  id: ID!
}

type ReferendumStartedEventConnection {
  totalCount: Int!
  edges: [ReferendumStartedEventEdge!]!
  pageInfo: PageInfo!
}

type ReferendumStartedEventEdge {
  node: ReferendumStartedEvent!
  cursor: String!
}

input ReferendumStartedForcefullyEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  winningTargetCount_eq: BigInt
  winningTargetCount_gt: BigInt
  winningTargetCount_gte: BigInt
  winningTargetCount_lt: BigInt
  winningTargetCount_lte: BigInt
  winningTargetCount_in: [BigInt!]
  AND: [ReferendumStartedForcefullyEventWhereInput!]
  OR: [ReferendumStartedForcefullyEventWhereInput!]
  NOT: [ReferendumStartedForcefullyEventWhereInput!]
}

enum ReferendumStartedForcefullyEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  winningTargetCount_ASC
  winningTargetCount_DESC
}

type ReferendumStartedForcefullyEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Amount of winning referendum options.
  winningTargetCount: BigInt!
}

input ReferendumStartedForcefullyEventWhereUniqueInput {
  id: ID!
}

type ReferendumStartedForcefullyEventConnection {
  totalCount: Int!
  edges: [ReferendumStartedForcefullyEventEdge!]!
  pageInfo: PageInfo!
}

type ReferendumStartedForcefullyEventEdge {
  node: ReferendumStartedForcefullyEvent!
  cursor: String!
}

input ReferralCutUpdatedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  newValue_eq: Int
  newValue_gt: Int
  newValue_gte: Int
  newValue_lt: Int
  newValue_lte: Int
  newValue_in: [Int!]
  AND: [ReferralCutUpdatedEventWhereInput!]
  OR: [ReferralCutUpdatedEventWhereInput!]
  NOT: [ReferralCutUpdatedEventWhereInput!]
}

enum ReferralCutUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  newValue_ASC
  newValue_DESC
}

type ReferralCutUpdatedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # New cut value.
  newValue: Int!
}

input ReferralCutUpdatedEventWhereUniqueInput {
  id: ID!
}

type ReferralCutUpdatedEventConnection {
  totalCount: Int!
  edges: [ReferralCutUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type ReferralCutUpdatedEventEdge {
  node: ReferralCutUpdatedEvent!
  cursor: String!
}

input RequestFundedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  account_eq: String
  account_contains: String
  account_startsWith: String
  account_endsWith: String
  account_in: [String!]
  amount_eq: BigInt
  amount_gt: BigInt
  amount_gte: BigInt
  amount_lt: BigInt
  amount_lte: BigInt
  amount_in: [BigInt!]
  AND: [RequestFundedEventWhereInput!]
  OR: [RequestFundedEventWhereInput!]
  NOT: [RequestFundedEventWhereInput!]
}

enum RequestFundedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  account_ASC
  account_DESC
  amount_ASC
  amount_DESC
}

type RequestFundedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Target account.
  account: String!

  # Funding amount.
  amount: BigInt!
}

input RequestFundedEventWhereUniqueInput {
  id: ID!
}

type RequestFundedEventConnection {
  totalCount: Int!
  edges: [RequestFundedEventEdge!]!
  pageInfo: PageInfo!
}

type RequestFundedEventEdge {
  node: RequestFundedEvent!
  cursor: String!
}

input RevealingStageStartedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  AND: [RevealingStageStartedEventWhereInput!]
  OR: [RevealingStageStartedEventWhereInput!]
  NOT: [RevealingStageStartedEventWhereInput!]
}

enum RevealingStageStartedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
}

type RevealingStageStartedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
}

input RevealingStageStartedEventWhereUniqueInput {
  id: ID!
}

type RevealingStageStartedEventConnection {
  totalCount: Int!
  edges: [RevealingStageStartedEventEdge!]!
  pageInfo: PageInfo!
}

type RevealingStageStartedEventEdge {
  node: RevealingStageStartedEvent!
  cursor: String!
}

enum RewardPaidEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  rewardAccount_ASC
  rewardAccount_DESC
  amount_ASC
  amount_DESC
  paymentType_ASC
  paymentType_DESC
}

input RewardPaidEventWhereUniqueInput {
  id: ID!
}

type RewardPaidEventConnection {
  totalCount: Int!
  edges: [RewardPaidEventEdge!]!
  pageInfo: PageInfo!
}

type RewardPaidEventEdge {
  node: RewardPaidEvent!
  cursor: String!
}

enum RewardPaymentEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  councilMember_ASC
  councilMember_DESC
  rewardAccount_ASC
  rewardAccount_DESC
  paidBalance_ASC
  paidBalance_DESC
  missingBalance_ASC
  missingBalance_DESC
}

input RewardPaymentEventWhereUniqueInput {
  id: ID!
}

type RewardPaymentEventConnection {
  totalCount: Int!
  edges: [RewardPaymentEventEdge!]!
  pageInfo: PageInfo!
}

type RewardPaymentEventEdge {
  node: RewardPaymentEvent!
  cursor: String!
}

input RuntimeWasmBytecodeWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  bytecode_eq: Bytes
  bytecode_in: [Bytes!]
  AND: [RuntimeWasmBytecodeWhereInput!]
  OR: [RuntimeWasmBytecodeWhereInput!]
  NOT: [RuntimeWasmBytecodeWhereInput!]
}

enum RuntimeWasmBytecodeOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  bytecode_ASC
  bytecode_DESC
}

input RuntimeWasmBytecodeWhereUniqueInput {
  id: ID!
}

type RuntimeWasmBytecodeConnection {
  totalCount: Int!
  edges: [RuntimeWasmBytecodeEdge!]!
  pageInfo: PageInfo!
}

type RuntimeWasmBytecodeEdge {
  node: RuntimeWasmBytecode!
  cursor: String!
}

enum StakeDecreasedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  amount_ASC
  amount_DESC
}

input StakeDecreasedEventWhereUniqueInput {
  id: ID!
}

type StakeDecreasedEventConnection {
  totalCount: Int!
  edges: [StakeDecreasedEventEdge!]!
  pageInfo: PageInfo!
}

type StakeDecreasedEventEdge {
  node: StakeDecreasedEvent!
  cursor: String!
}

enum StakeIncreasedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  amount_ASC
  amount_DESC
}

input StakeIncreasedEventWhereUniqueInput {
  id: ID!
}

type StakeIncreasedEventConnection {
  totalCount: Int!
  edges: [StakeIncreasedEventEdge!]!
  pageInfo: PageInfo!
}

type StakeIncreasedEventEdge {
  node: StakeIncreasedEvent!
  cursor: String!
}

input StakeReleasedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  stakingAccount_eq: String
  stakingAccount_contains: String
  stakingAccount_startsWith: String
  stakingAccount_endsWith: String
  stakingAccount_in: [String!]
  AND: [StakeReleasedEventWhereInput!]
  OR: [StakeReleasedEventWhereInput!]
  NOT: [StakeReleasedEventWhereInput!]
}

enum StakeReleasedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  stakingAccount_ASC
  stakingAccount_DESC
}

type StakeReleasedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Account used to stake the value.
  stakingAccount: String!
}

input StakeReleasedEventWhereUniqueInput {
  id: ID!
}

type StakeReleasedEventConnection {
  totalCount: Int!
  edges: [StakeReleasedEventEdge!]!
  pageInfo: PageInfo!
}

type StakeReleasedEventEdge {
  node: StakeReleasedEvent!
  cursor: String!
}

enum StakeSlashedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  requestedAmount_ASC
  requestedAmount_DESC
  slashedAmount_ASC
  slashedAmount_DESC
  rationale_ASC
  rationale_DESC
}

input StakeSlashedEventWhereUniqueInput {
  id: ID!
}

type StakeSlashedEventConnection {
  totalCount: Int!
  edges: [StakeSlashedEventEdge!]!
  pageInfo: PageInfo!
}

type StakeSlashedEventEdge {
  node: StakeSlashedEvent!
  cursor: String!
}

enum StakingAccountAddedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  member_ASC
  member_DESC
  account_ASC
  account_DESC
}

input StakingAccountAddedEventWhereUniqueInput {
  id: ID!
}

type StakingAccountAddedEventConnection {
  totalCount: Int!
  edges: [StakingAccountAddedEventEdge!]!
  pageInfo: PageInfo!
}

type StakingAccountAddedEventEdge {
  node: StakingAccountAddedEvent!
  cursor: String!
}

enum StakingAccountConfirmedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  member_ASC
  member_DESC
  account_ASC
  account_DESC
}

input StakingAccountConfirmedEventWhereUniqueInput {
  id: ID!
}

type StakingAccountConfirmedEventConnection {
  totalCount: Int!
  edges: [StakingAccountConfirmedEventEdge!]!
  pageInfo: PageInfo!
}

type StakingAccountConfirmedEventEdge {
  node: StakingAccountConfirmedEvent!
  cursor: String!
}

enum StakingAccountRemovedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  member_ASC
  member_DESC
  account_ASC
  account_DESC
}

input StakingAccountRemovedEventWhereUniqueInput {
  id: ID!
}

type StakingAccountRemovedEventConnection {
  totalCount: Int!
  edges: [StakingAccountRemovedEventEdge!]!
  pageInfo: PageInfo!
}

type StakingAccountRemovedEventEdge {
  node: StakingAccountRemovedEvent!
  cursor: String!
}

enum StatusTextChangedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  metadata_ASC
  metadata_DESC
}

input StatusTextChangedEventWhereUniqueInput {
  id: ID!
}

type StatusTextChangedEventConnection {
  totalCount: Int!
  edges: [StatusTextChangedEventEdge!]!
  pageInfo: PageInfo!
}

type StatusTextChangedEventEdge {
  node: StatusTextChangedEvent!
  cursor: String!
}

enum StorageBagOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
}

input StorageBagWhereUniqueInput {
  id: ID!
}

type StorageBagConnection {
  totalCount: Int!
  edges: [StorageBagEdge!]!
  pageInfo: PageInfo!
}

type StorageBagEdge {
  node: StorageBag!
  cursor: String!
}

enum StorageBucketOperatorMetadataOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  nodeEndpoint_ASC
  nodeEndpoint_DESC
  nodeLocation_ASC
  nodeLocation_DESC
  extra_ASC
  extra_DESC
}

input StorageBucketOperatorMetadataWhereUniqueInput {
  id: ID!
}

type StorageBucketOperatorMetadataConnection {
  totalCount: Int!
  edges: [StorageBucketOperatorMetadataEdge!]!
  pageInfo: PageInfo!
}

type StorageBucketOperatorMetadataEdge {
  node: StorageBucketOperatorMetadata!
  cursor: String!
}

enum StorageBucketOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  operatorMetadata_ASC
  operatorMetadata_DESC
  acceptingNewBags_ASC
  acceptingNewBags_DESC
  dataObjectsSizeLimit_ASC
  dataObjectsSizeLimit_DESC
  dataObjectCountLimit_ASC
  dataObjectCountLimit_DESC
  dataObjectsCount_ASC
  dataObjectsCount_DESC
  dataObjectsSize_ASC
  dataObjectsSize_DESC
}

input StorageBucketWhereUniqueInput {
  id: ID!
}

type StorageBucketConnection {
  totalCount: Int!
  edges: [StorageBucketEdge!]!
  pageInfo: PageInfo!
}

type StorageBucketEdge {
  node: StorageBucket!
  cursor: String!
}

enum StorageDataObjectOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  isAccepted_ASC
  isAccepted_DESC
  size_ASC
  size_DESC
  storageBag_ASC
  storageBag_DESC
  ipfsHash_ASC
  ipfsHash_DESC
  deletionPrize_ASC
  deletionPrize_DESC
  unsetAt_ASC
  unsetAt_DESC
}

input StorageDataObjectWhereUniqueInput {
  id: ID!
}

type StorageDataObjectConnection {
  totalCount: Int!
  edges: [StorageDataObjectEdge!]!
  pageInfo: PageInfo!
}

type StorageDataObjectEdge {
  node: StorageDataObject!
  cursor: String!
}

input StorageSystemParametersWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  blacklist_containsAll: [String!]
  blacklist_containsNone: [String!]
  blacklist_containsAny: [String!]
  storageBucketsPerBagLimit_eq: Int
  storageBucketsPerBagLimit_gt: Int
  storageBucketsPerBagLimit_gte: Int
  storageBucketsPerBagLimit_lt: Int
  storageBucketsPerBagLimit_lte: Int
  storageBucketsPerBagLimit_in: [Int!]
  distributionBucketsPerBagLimit_eq: Int
  distributionBucketsPerBagLimit_gt: Int
  distributionBucketsPerBagLimit_gte: Int
  distributionBucketsPerBagLimit_lt: Int
  distributionBucketsPerBagLimit_lte: Int
  distributionBucketsPerBagLimit_in: [Int!]
  uploadingBlocked_eq: Boolean
  uploadingBlocked_in: [Boolean!]
  dataObjectFeePerMb_eq: BigInt
  dataObjectFeePerMb_gt: BigInt
  dataObjectFeePerMb_gte: BigInt
  dataObjectFeePerMb_lt: BigInt
  dataObjectFeePerMb_lte: BigInt
  dataObjectFeePerMb_in: [BigInt!]
  storageBucketMaxObjectsCountLimit_eq: BigInt
  storageBucketMaxObjectsCountLimit_gt: BigInt
  storageBucketMaxObjectsCountLimit_gte: BigInt
  storageBucketMaxObjectsCountLimit_lt: BigInt
  storageBucketMaxObjectsCountLimit_lte: BigInt
  storageBucketMaxObjectsCountLimit_in: [BigInt!]
  storageBucketMaxObjectsSizeLimit_eq: BigInt
  storageBucketMaxObjectsSizeLimit_gt: BigInt
  storageBucketMaxObjectsSizeLimit_gte: BigInt
  storageBucketMaxObjectsSizeLimit_lt: BigInt
  storageBucketMaxObjectsSizeLimit_lte: BigInt
  storageBucketMaxObjectsSizeLimit_in: [BigInt!]
  nextDataObjectId_eq: BigInt
  nextDataObjectId_gt: BigInt
  nextDataObjectId_gte: BigInt
  nextDataObjectId_lt: BigInt
  nextDataObjectId_lte: BigInt
  nextDataObjectId_in: [BigInt!]
  AND: [StorageSystemParametersWhereInput!]
  OR: [StorageSystemParametersWhereInput!]
  NOT: [StorageSystemParametersWhereInput!]
}

enum StorageSystemParametersOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  storageBucketsPerBagLimit_ASC
  storageBucketsPerBagLimit_DESC
  distributionBucketsPerBagLimit_ASC
  distributionBucketsPerBagLimit_DESC
  uploadingBlocked_ASC
  uploadingBlocked_DESC
  dataObjectFeePerMb_ASC
  dataObjectFeePerMb_DESC
  storageBucketMaxObjectsCountLimit_ASC
  storageBucketMaxObjectsCountLimit_DESC
  storageBucketMaxObjectsSizeLimit_ASC
  storageBucketMaxObjectsSizeLimit_DESC
  nextDataObjectId_ASC
  nextDataObjectId_DESC
}

# Global storage system parameters
type StorageSystemParameters implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Blacklisted content hashes
  blacklist: [String!]!

  # How many buckets can be assigned to store a bag
  storageBucketsPerBagLimit: Int!

  # How many buckets can be assigned to distribute a bag
  distributionBucketsPerBagLimit: Int!

  # Whether the uploading is globally blocked
  uploadingBlocked: Boolean!

  # Additional fee for storing 1 MB of data
  dataObjectFeePerMb: BigInt!

  # Global max. number of objects a storage bucket can store (can also be further limitted the provider)
  storageBucketMaxObjectsCountLimit: BigInt!

  # Global max. size of objects a storage bucket can store (can also be further limitted the provider)
  storageBucketMaxObjectsSizeLimit: BigInt!

  # ID of the next data object when created
  nextDataObjectId: BigInt!
}

input StorageSystemParametersWhereUniqueInput {
  id: ID!
}

type StorageSystemParametersConnection {
  totalCount: Int!
  edges: [StorageSystemParametersEdge!]!
  pageInfo: PageInfo!
}

type StorageSystemParametersEdge {
  node: StorageSystemParameters!
  cursor: String!
}

enum TerminatedLeaderEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  penalty_ASC
  penalty_DESC
  rationale_ASC
  rationale_DESC
}

input TerminatedLeaderEventWhereUniqueInput {
  id: ID!
}

type TerminatedLeaderEventConnection {
  totalCount: Int!
  edges: [TerminatedLeaderEventEdge!]!
  pageInfo: PageInfo!
}

type TerminatedLeaderEventEdge {
  node: TerminatedLeaderEvent!
  cursor: String!
}

enum TerminatedWorkerEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  penalty_ASC
  penalty_DESC
  rationale_ASC
  rationale_DESC
}

input TerminatedWorkerEventWhereUniqueInput {
  id: ID!
}

type TerminatedWorkerEventConnection {
  totalCount: Int!
  edges: [TerminatedWorkerEventEdge!]!
  pageInfo: PageInfo!
}

type TerminatedWorkerEventEdge {
  node: TerminatedWorkerEvent!
  cursor: String!
}

enum ThreadCreatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  thread_ASC
  thread_DESC
  title_ASC
  title_DESC
  text_ASC
  text_DESC
}

input ThreadCreatedEventWhereUniqueInput {
  id: ID!
}

type ThreadCreatedEventConnection {
  totalCount: Int!
  edges: [ThreadCreatedEventEdge!]!
  pageInfo: PageInfo!
}

type ThreadCreatedEventEdge {
  node: ThreadCreatedEvent!
  cursor: String!
}

enum ThreadDeletedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  thread_ASC
  thread_DESC
}

input ThreadDeletedEventWhereUniqueInput {
  id: ID!
}

type ThreadDeletedEventConnection {
  totalCount: Int!
  edges: [ThreadDeletedEventEdge!]!
  pageInfo: PageInfo!
}

type ThreadDeletedEventEdge {
  node: ThreadDeletedEvent!
  cursor: String!
}

enum ThreadMetadataUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  thread_ASC
  thread_DESC
  newTitle_ASC
  newTitle_DESC
}

input ThreadMetadataUpdatedEventWhereUniqueInput {
  id: ID!
}

type ThreadMetadataUpdatedEventConnection {
  totalCount: Int!
  edges: [ThreadMetadataUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type ThreadMetadataUpdatedEventEdge {
  node: ThreadMetadataUpdatedEvent!
  cursor: String!
}

enum ThreadModeratedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  thread_ASC
  thread_DESC
  rationale_ASC
  rationale_DESC
  actor_ASC
  actor_DESC
}

input ThreadModeratedEventWhereUniqueInput {
  id: ID!
}

type ThreadModeratedEventConnection {
  totalCount: Int!
  edges: [ThreadModeratedEventEdge!]!
  pageInfo: PageInfo!
}

type ThreadModeratedEventEdge {
  node: ThreadModeratedEvent!
  cursor: String!
}

enum ThreadMovedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  thread_ASC
  thread_DESC
  oldCategory_ASC
  oldCategory_DESC
  newCategory_ASC
  newCategory_DESC
  actor_ASC
  actor_DESC
}

input ThreadMovedEventWhereUniqueInput {
  id: ID!
}

type ThreadMovedEventConnection {
  totalCount: Int!
  edges: [ThreadMovedEventEdge!]!
  pageInfo: PageInfo!
}

type ThreadMovedEventEdge {
  node: ThreadMovedEvent!
  cursor: String!
}

enum TransactionalStatusUpdateOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  nft_ASC
  nft_DESC
  transactionalStatusAuction_ASC
  transactionalStatusAuction_DESC
  changedAt_ASC
  changedAt_DESC
}

input TransactionalStatusUpdateWhereUniqueInput {
  id: ID!
}

type TransactionalStatusUpdateConnection {
  totalCount: Int!
  edges: [TransactionalStatusUpdateEdge!]!
  pageInfo: PageInfo!
}

type TransactionalStatusUpdateEdge {
  node: TransactionalStatusUpdate!
  cursor: String!
}

enum UpcomingWorkingGroupOpeningOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  createdInEvent_ASC
  createdInEvent_DESC
  group_ASC
  group_DESC
  expectedStart_ASC
  expectedStart_DESC
  stakeAmount_ASC
  stakeAmount_DESC
  rewardPerBlock_ASC
  rewardPerBlock_DESC
  metadata_ASC
  metadata_DESC
}

input UpcomingWorkingGroupOpeningWhereUniqueInput {
  id: ID!
}

type UpcomingWorkingGroupOpeningConnection {
  totalCount: Int!
  edges: [UpcomingWorkingGroupOpeningEdge!]!
  pageInfo: PageInfo!
}

type UpcomingWorkingGroupOpeningEdge {
  node: UpcomingWorkingGroupOpening!
  cursor: String!
}

enum VideoCategoryOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  name_ASC
  name_DESC
  activeVideosCounter_ASC
  activeVideosCounter_DESC
  createdInBlock_ASC
  createdInBlock_DESC
}

input VideoCategoryWhereUniqueInput {
  id: ID!
}

type VideoCategoryConnection {
  totalCount: Int!
  edges: [VideoCategoryEdge!]!
  pageInfo: PageInfo!
}

type VideoCategoryEdge {
  node: VideoCategory!
  cursor: String!
}

enum VideoMediaEncodingOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  codecName_ASC
  codecName_DESC
  container_ASC
  container_DESC
  mimeMediaType_ASC
  mimeMediaType_DESC
}

input VideoMediaEncodingWhereUniqueInput {
  id: ID!
}

type VideoMediaEncodingConnection {
  totalCount: Int!
  edges: [VideoMediaEncodingEdge!]!
  pageInfo: PageInfo!
}

type VideoMediaEncodingEdge {
  node: VideoMediaEncoding!
  cursor: String!
}

enum VideoMediaMetadataOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  encoding_ASC
  encoding_DESC
  pixelWidth_ASC
  pixelWidth_DESC
  pixelHeight_ASC
  pixelHeight_DESC
  size_ASC
  size_DESC
  createdInBlock_ASC
  createdInBlock_DESC
}

input VideoMediaMetadataWhereUniqueInput {
  id: ID!
}

type VideoMediaMetadataConnection {
  totalCount: Int!
  edges: [VideoMediaMetadataEdge!]!
  pageInfo: PageInfo!
}

type VideoMediaMetadataEdge {
  node: VideoMediaMetadata!
  cursor: String!
}

enum VideoReactedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  video_ASC
  video_DESC
  videoChannel_ASC
  videoChannel_DESC
  reactionResult_ASC
  reactionResult_DESC
  reactingMember_ASC
  reactingMember_DESC
}

input VideoReactedEventWhereUniqueInput {
  id: ID!
}

type VideoReactedEventConnection {
  totalCount: Int!
  edges: [VideoReactedEventEdge!]!
  pageInfo: PageInfo!
}

type VideoReactedEventEdge {
  node: VideoReactedEvent!
  cursor: String!
}

enum VideoReactionOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  reaction_ASC
  reaction_DESC
  member_ASC
  member_DESC
  memberId_ASC
  memberId_DESC
  video_ASC
  video_DESC
}

input VideoReactionWhereUniqueInput {
  id: ID!
}

type VideoReactionConnection {
  totalCount: Int!
  edges: [VideoReactionEdge!]!
  pageInfo: PageInfo!
}

type VideoReactionEdge {
  node: VideoReaction!
  cursor: String!
}

enum VideoReactionsCountByReactionTypeOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  reaction_ASC
  reaction_DESC
  count_ASC
  count_DESC
  video_ASC
  video_DESC
}

input VideoReactionsCountByReactionTypeWhereUniqueInput {
  id: ID!
}

type VideoReactionsCountByReactionTypeConnection {
  totalCount: Int!
  edges: [VideoReactionsCountByReactionTypeEdge!]!
  pageInfo: PageInfo!
}

type VideoReactionsCountByReactionTypeEdge {
  node: VideoReactionsCountByReactionType!
  cursor: String!
}

enum VideoReactionsPreferenceEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  video_ASC
  video_DESC
  reactionsStatus_ASC
  reactionsStatus_DESC
}

input VideoReactionsPreferenceEventWhereUniqueInput {
  id: ID!
}

type VideoReactionsPreferenceEventConnection {
  totalCount: Int!
  edges: [VideoReactionsPreferenceEventEdge!]!
  pageInfo: PageInfo!
}

type VideoReactionsPreferenceEventEdge {
  node: VideoReactionsPreferenceEvent!
  cursor: String!
}

enum VideoOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  channel_ASC
  channel_DESC
  category_ASC
  category_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  duration_ASC
  duration_DESC
  thumbnailPhoto_ASC
  thumbnailPhoto_DESC
  language_ASC
  language_DESC
  hasMarketing_ASC
  hasMarketing_DESC
  publishedBeforeJoystream_ASC
  publishedBeforeJoystream_DESC
  isPublic_ASC
  isPublic_DESC
  isCensored_ASC
  isCensored_DESC
  nft_ASC
  nft_DESC
  isExplicit_ASC
  isExplicit_DESC
  license_ASC
  license_DESC
  media_ASC
  media_DESC
  mediaMetadata_ASC
  mediaMetadata_DESC
  createdInBlock_ASC
  createdInBlock_DESC
  isFeatured_ASC
  isFeatured_DESC
  isCommentSectionEnabled_ASC
  isCommentSectionEnabled_DESC
  commentsCount_ASC
  commentsCount_DESC
  isReactionFeatureEnabled_ASC
  isReactionFeatureEnabled_DESC
  reactionsCount_ASC
  reactionsCount_DESC
}

input VideoWhereUniqueInput {
  id: ID!
}

type VideoConnection {
  totalCount: Int!
  edges: [VideoEdge!]!
  pageInfo: PageInfo!
}

type VideoEdge {
  node: Video!
  cursor: String!
}

enum VoteCastEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  castVote_ASC
  castVote_DESC
}

input VoteCastEventWhereUniqueInput {
  id: ID!
}

type VoteCastEventConnection {
  totalCount: Int!
  edges: [VoteCastEventEdge!]!
  pageInfo: PageInfo!
}

type VoteCastEventEdge {
  node: VoteCastEvent!
  cursor: String!
}

enum VoteOnPollEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  pollAlternative_ASC
  pollAlternative_DESC
  votingMember_ASC
  votingMember_DESC
}

input VoteOnPollEventWhereUniqueInput {
  id: ID!
}

type VoteOnPollEventConnection {
  totalCount: Int!
  edges: [VoteOnPollEventEdge!]!
  pageInfo: PageInfo!
}

type VoteOnPollEventEdge {
  node: VoteOnPollEvent!
  cursor: String!
}

enum VoteRevealedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  castVote_ASC
  castVote_DESC
}

input VoteRevealedEventWhereUniqueInput {
  id: ID!
}

type VoteRevealedEventConnection {
  totalCount: Int!
  edges: [VoteRevealedEventEdge!]!
  pageInfo: PageInfo!
}

type VoteRevealedEventEdge {
  node: VoteRevealedEvent!
  cursor: String!
}

input VotingPeriodStartedEventWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  inExtrinsic_eq: String
  inExtrinsic_contains: String
  inExtrinsic_startsWith: String
  inExtrinsic_endsWith: String
  inExtrinsic_in: [String!]
  inBlock_eq: Int
  inBlock_gt: Int
  inBlock_gte: Int
  inBlock_lt: Int
  inBlock_lte: Int
  inBlock_in: [Int!]
  network_eq: Network
  network_in: [Network!]
  indexInBlock_eq: Int
  indexInBlock_gt: Int
  indexInBlock_gte: Int
  indexInBlock_lt: Int
  indexInBlock_lte: Int
  indexInBlock_in: [Int!]
  numOfCandidates_eq: BigInt
  numOfCandidates_gt: BigInt
  numOfCandidates_gte: BigInt
  numOfCandidates_lt: BigInt
  numOfCandidates_lte: BigInt
  numOfCandidates_in: [BigInt!]
  AND: [VotingPeriodStartedEventWhereInput!]
  OR: [VotingPeriodStartedEventWhereInput!]
  NOT: [VotingPeriodStartedEventWhereInput!]
}

enum VotingPeriodStartedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  numOfCandidates_ASC
  numOfCandidates_DESC
}

type VotingPeriodStartedEvent implements Event & BaseGraphQLObject {
  # Hash of the extrinsic which caused the event to be emitted
  inExtrinsic: String

  # Blocknumber of the block in which the event was emitted.
  inBlock: Int!

  # Network the block was produced in
  network: Network!

  # Index of event in block from which it was emitted.
  indexInBlock: Int!

  # Filtering options for interface implementers
  type: EventTypeOptions
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!

  # Number of candidates in the election.
  numOfCandidates: BigInt!
}

input VotingPeriodStartedEventWhereUniqueInput {
  id: ID!
}

type VotingPeriodStartedEventConnection {
  totalCount: Int!
  edges: [VotingPeriodStartedEventEdge!]!
  pageInfo: PageInfo!
}

type VotingPeriodStartedEventEdge {
  node: VotingPeriodStartedEvent!
  cursor: String!
}

enum WorkEntrantFundsWithdrawnEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  entry_ASC
  entry_DESC
}

input WorkEntrantFundsWithdrawnEventWhereUniqueInput {
  id: ID!
}

type WorkEntrantFundsWithdrawnEventConnection {
  totalCount: Int!
  edges: [WorkEntrantFundsWithdrawnEventEdge!]!
  pageInfo: PageInfo!
}

type WorkEntrantFundsWithdrawnEventEdge {
  node: WorkEntrantFundsWithdrawnEvent!
  cursor: String!
}

enum WorkEntryAnnouncedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  entry_ASC
  entry_DESC
}

input WorkEntryAnnouncedEventWhereUniqueInput {
  id: ID!
}

type WorkEntryAnnouncedEventConnection {
  totalCount: Int!
  edges: [WorkEntryAnnouncedEventEdge!]!
  pageInfo: PageInfo!
}

type WorkEntryAnnouncedEventEdge {
  node: WorkEntryAnnouncedEvent!
  cursor: String!
}

enum WorkEntrySlashedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  entry_ASC
  entry_DESC
}

input WorkEntrySlashedEventWhereUniqueInput {
  id: ID!
}

type WorkEntrySlashedEventConnection {
  totalCount: Int!
  edges: [WorkEntrySlashedEventEdge!]!
  pageInfo: PageInfo!
}

type WorkEntrySlashedEventEdge {
  node: WorkEntrySlashedEvent!
  cursor: String!
}

enum WorkEntryWithdrawnEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  entry_ASC
  entry_DESC
}

input WorkEntryWithdrawnEventWhereUniqueInput {
  id: ID!
}

type WorkEntryWithdrawnEventConnection {
  totalCount: Int!
  edges: [WorkEntryWithdrawnEventEdge!]!
  pageInfo: PageInfo!
}

type WorkEntryWithdrawnEventEdge {
  node: WorkEntryWithdrawnEvent!
  cursor: String!
}

enum WorkSubmittedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  bounty_ASC
  bounty_DESC
  entry_ASC
  entry_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
}

input WorkSubmittedEventWhereUniqueInput {
  id: ID!
}

type WorkSubmittedEventConnection {
  totalCount: Int!
  edges: [WorkSubmittedEventEdge!]!
  pageInfo: PageInfo!
}

type WorkSubmittedEventEdge {
  node: WorkSubmittedEvent!
  cursor: String!
}

enum WorkerExitedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
}

input WorkerExitedEventWhereUniqueInput {
  id: ID!
}

type WorkerExitedEventConnection {
  totalCount: Int!
  edges: [WorkerExitedEventEdge!]!
  pageInfo: PageInfo!
}

type WorkerExitedEventEdge {
  node: WorkerExitedEvent!
  cursor: String!
}

enum WorkerRewardAccountUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  newRewardAccount_ASC
  newRewardAccount_DESC
}

input WorkerRewardAccountUpdatedEventWhereUniqueInput {
  id: ID!
}

type WorkerRewardAccountUpdatedEventConnection {
  totalCount: Int!
  edges: [WorkerRewardAccountUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type WorkerRewardAccountUpdatedEventEdge {
  node: WorkerRewardAccountUpdatedEvent!
  cursor: String!
}

enum WorkerRewardAmountUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  newRewardPerBlock_ASC
  newRewardPerBlock_DESC
}

input WorkerRewardAmountUpdatedEventWhereUniqueInput {
  id: ID!
}

type WorkerRewardAmountUpdatedEventConnection {
  totalCount: Int!
  edges: [WorkerRewardAmountUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type WorkerRewardAmountUpdatedEventEdge {
  node: WorkerRewardAmountUpdatedEvent!
  cursor: String!
}

enum WorkerRoleAccountUpdatedEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  newRoleAccount_ASC
  newRoleAccount_DESC
}

input WorkerRoleAccountUpdatedEventWhereUniqueInput {
  id: ID!
}

type WorkerRoleAccountUpdatedEventConnection {
  totalCount: Int!
  edges: [WorkerRoleAccountUpdatedEventEdge!]!
  pageInfo: PageInfo!
}

type WorkerRoleAccountUpdatedEventEdge {
  node: WorkerRoleAccountUpdatedEvent!
  cursor: String!
}

enum WorkerStartedLeavingEventOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  inExtrinsic_ASC
  inExtrinsic_DESC
  inBlock_ASC
  inBlock_DESC
  network_ASC
  network_DESC
  indexInBlock_ASC
  indexInBlock_DESC
  group_ASC
  group_DESC
  worker_ASC
  worker_DESC
  rationale_ASC
  rationale_DESC
}

input WorkerStartedLeavingEventWhereUniqueInput {
  id: ID!
}

type WorkerStartedLeavingEventConnection {
  totalCount: Int!
  edges: [WorkerStartedLeavingEventEdge!]!
  pageInfo: PageInfo!
}

type WorkerStartedLeavingEventEdge {
  node: WorkerStartedLeavingEvent!
  cursor: String!
}

enum WorkerOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  runtimeId_ASC
  runtimeId_DESC
  group_ASC
  group_DESC
  groupId_ASC
  groupId_DESC
  membership_ASC
  membership_DESC
  roleAccount_ASC
  roleAccount_DESC
  rewardAccount_ASC
  rewardAccount_DESC
  stakeAccount_ASC
  stakeAccount_DESC
  isLead_ASC
  isLead_DESC
  isActive_ASC
  isActive_DESC
  stake_ASC
  stake_DESC
  rewardPerBlock_ASC
  rewardPerBlock_DESC
  missingRewardAmount_ASC
  missingRewardAmount_DESC
  entry_ASC
  entry_DESC
  application_ASC
  application_DESC
  storage_ASC
  storage_DESC
}

input WorkerWhereUniqueInput {
  id: ID!
}

type WorkerConnection {
  totalCount: Int!
  edges: [WorkerEdge!]!
  pageInfo: PageInfo!
}

type WorkerEdge {
  node: Worker!
  cursor: String!
}

enum WorkingGroupApplicationOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  runtimeId_ASC
  runtimeId_DESC
  opening_ASC
  opening_DESC
  applicant_ASC
  applicant_DESC
  stake_ASC
  stake_DESC
  roleAccount_ASC
  roleAccount_DESC
  rewardAccount_ASC
  rewardAccount_DESC
  stakingAccount_ASC
  stakingAccount_DESC
}

input WorkingGroupApplicationWhereUniqueInput {
  id: ID!
}

type WorkingGroupApplicationConnection {
  totalCount: Int!
  edges: [WorkingGroupApplicationEdge!]!
  pageInfo: PageInfo!
}

type WorkingGroupApplicationEdge {
  node: WorkingGroupApplication!
  cursor: String!
}

enum WorkingGroupMetadataOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  status_ASC
  status_DESC
  statusMessage_ASC
  statusMessage_DESC
  about_ASC
  about_DESC
  description_ASC
  description_DESC
  setInEvent_ASC
  setInEvent_DESC
  group_ASC
  group_DESC
}

input WorkingGroupMetadataWhereUniqueInput {
  id: ID!
}

type WorkingGroupMetadataConnection {
  totalCount: Int!
  edges: [WorkingGroupMetadataEdge!]!
  pageInfo: PageInfo!
}

type WorkingGroupMetadataEdge {
  node: WorkingGroupMetadata!
  cursor: String!
}

enum WorkingGroupOpeningMetadataOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  originallyValid_ASC
  originallyValid_DESC
  title_ASC
  title_DESC
  shortDescription_ASC
  shortDescription_DESC
  description_ASC
  description_DESC
  hiringLimit_ASC
  hiringLimit_DESC
  expectedEnding_ASC
  expectedEnding_DESC
  applicationDetails_ASC
  applicationDetails_DESC
}

input WorkingGroupOpeningMetadataWhereUniqueInput {
  id: ID!
}

type WorkingGroupOpeningMetadataConnection {
  totalCount: Int!
  edges: [WorkingGroupOpeningMetadataEdge!]!
  pageInfo: PageInfo!
}

type WorkingGroupOpeningMetadataEdge {
  node: WorkingGroupOpeningMetadata!
  cursor: String!
}

enum WorkingGroupOpeningOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  runtimeId_ASC
  runtimeId_DESC
  group_ASC
  group_DESC
  type_ASC
  type_DESC
  metadata_ASC
  metadata_DESC
  stakeAmount_ASC
  stakeAmount_DESC
  unstakingPeriod_ASC
  unstakingPeriod_DESC
  rewardPerBlock_ASC
  rewardPerBlock_DESC
}

input WorkingGroupOpeningWhereUniqueInput {
  id: ID!
}

type WorkingGroupOpeningConnection {
  totalCount: Int!
  edges: [WorkingGroupOpeningEdge!]!
  pageInfo: PageInfo!
}

type WorkingGroupOpeningEdge {
  node: WorkingGroupOpening!
  cursor: String!
}

enum WorkingGroupOrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  name_ASC
  name_DESC
  metadata_ASC
  metadata_DESC
  leader_ASC
  leader_DESC
  budget_ASC
  budget_DESC
}

input WorkingGroupWhereUniqueInput {
  id: ID
  name: String
}

type WorkingGroupConnection {
  totalCount: Int!
  edges: [WorkingGroupEdge!]!
  pageInfo: PageInfo!
}

type WorkingGroupEdge {
  node: WorkingGroup!
  cursor: String!
}

type Subscription {
  stateSubscription: ProcessorState!
}

type ProcessorState {
  lastCompleteBlock: Float!
  lastProcessedEvent: String!
  indexerHead: Float!
  chainHead: Float!
}

type StandardDeleteResponse {
  id: ID!
}

type BaseModel implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
}

type BaseModelUUID implements BaseGraphQLObject {
  id: ID!
  createdAt: DateTime!
  createdById: ID!
  updatedAt: DateTime
  updatedById: ID
  deletedAt: DateTime
  deletedById: ID
  version: Int!
}

interface DeleteResponse {
  id: ID!
}

input BaseWhereInput {
  id_eq: String
  id_in: [String!]
  createdAt_eq: String
  createdAt_lt: String
  createdAt_lte: String
  createdAt_gt: String
  createdAt_gte: String
  createdById_eq: String
  updatedAt_eq: String
  updatedAt_lt: String
  updatedAt_lte: String
  updatedAt_gt: String
  updatedAt_gte: String
  updatedById_eq: String
  deletedAt_all: Boolean
  deletedAt_eq: String
  deletedAt_lt: String
  deletedAt_lte: String
  deletedAt_gt: String
  deletedAt_gte: String
  deletedById_eq: String
}

input EventWhereUniqueInput {
  id: ID!
}

input EventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  type: EventTypeOptions
}

input EventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  type: EventTypeOptions
}

input AnnouncingPeriodStartedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
}

input AnnouncingPeriodStartedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
}

input ApplicationFormQuestionCreateInput {
  openingMetadata: ID!
  question: String
  type: ApplicationFormQuestionType!
  index: Float!
}

input ApplicationFormQuestionUpdateInput {
  openingMetadata: ID
  question: String
  type: ApplicationFormQuestionType
  index: Float
}

input OpeningAddedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  opening: ID!
}

input OpeningAddedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  opening: ID
}

input AppliedOnOpeningEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  opening: ID!
  application: ID!
}

input AppliedOnOpeningEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  opening: ID
  application: ID
}

input OpeningCanceledEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  opening: ID!
}

input OpeningCanceledEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  opening: ID
}

input WorkingGroupOpeningCreateInput {
  createdAt: DateTime!
  runtimeId: Float!
  group: ID!
  type: WorkingGroupOpeningType!
  status: JSONObject!
  metadata: ID!
  stakeAmount: String!
  unstakingPeriod: Float!
  rewardPerBlock: String!
}

input WorkingGroupOpeningUpdateInput {
  createdAt: DateTime
  runtimeId: Float
  group: ID
  type: WorkingGroupOpeningType
  status: JSONObject
  metadata: ID
  stakeAmount: String
  unstakingPeriod: Float
  rewardPerBlock: String
}

input WorkingGroupOpeningMetadataCreateInput {
  originallyValid: Boolean!
  title: String
  shortDescription: String
  description: String
  hiringLimit: Float
  expectedEnding: DateTime
  applicationDetails: String
}

input WorkingGroupOpeningMetadataUpdateInput {
  originallyValid: Boolean
  title: String
  shortDescription: String
  description: String
  hiringLimit: Float
  expectedEnding: DateTime
  applicationDetails: String
}

input UpcomingWorkingGroupOpeningCreateInput {
  createdInEvent: ID!
  group: ID!
  expectedStart: DateTime
  stakeAmount: String
  rewardPerBlock: String
  metadata: ID!
}

input UpcomingWorkingGroupOpeningUpdateInput {
  createdInEvent: ID
  group: ID
  expectedStart: DateTime
  stakeAmount: String
  rewardPerBlock: String
  metadata: ID
}

input StatusTextChangedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  metadata: String
  result: JSONObject!
}

input StatusTextChangedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  metadata: String
  result: JSONObject
}

input WorkingGroupMetadataCreateInput {
  status: String
  statusMessage: String
  about: String
  description: String
  setInEvent: ID!
  group: ID!
}

input WorkingGroupMetadataUpdateInput {
  status: String
  statusMessage: String
  about: String
  description: String
  setInEvent: ID
  group: ID
}

input MembershipExternalResourceCreateInput {
  type: MembershipExternalResourceType!
  value: String!
  memberMetadata: ID!
}

input MembershipExternalResourceUpdateInput {
  type: MembershipExternalResourceType
  value: String
  memberMetadata: ID
}

input MemberInvitedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  invitingMember: ID!
  newMember: ID!
  rootAccount: String!
  controllerAccount: String!
  handle: String!
  metadata: ID!
}

input MemberInvitedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  invitingMember: ID
  newMember: ID
  rootAccount: String
  controllerAccount: String
  handle: String
  metadata: ID
}

input MemberProfileUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  member: ID!
  newHandle: String
  newMetadata: ID!
}

input MemberProfileUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  member: ID
  newHandle: String
  newMetadata: ID
}

input MembershipBoughtEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  newMember: ID!
  rootAccount: String!
  controllerAccount: String!
  handle: String!
  metadata: ID!
  referrer: ID
}

input MembershipBoughtEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  newMember: ID
  rootAccount: String
  controllerAccount: String
  handle: String
  metadata: ID
  referrer: ID
}

input MemberMetadataCreateInput {
  name: String
  avatar: JSONObject!
  about: String
}

input MemberMetadataUpdateInput {
  name: String
  avatar: JSONObject
  about: String
}

input ProposalDiscussionWhitelistCreateInput {
  phantom: Float
}

input ProposalDiscussionWhitelistUpdateInput {
  phantom: Float
}

input CategoryCreatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  category: ID!
}

input CategoryCreatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  category: ID
}

input CategoryArchivalStatusUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  category: ID!
  newArchivalStatus: Boolean!
  actor: ID!
}

input CategoryArchivalStatusUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  category: ID
  newArchivalStatus: Boolean
  actor: ID
}

input CategoryDeletedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  category: ID!
  actor: ID!
}

input CategoryDeletedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  category: ID
  actor: ID
}

input CategoryMembershipOfModeratorUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  moderator: ID!
  category: ID!
  newCanModerateValue: Boolean!
}

input CategoryMembershipOfModeratorUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  moderator: ID
  category: ID
  newCanModerateValue: Boolean
}

input CategoryStickyThreadUpdateEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  category: ID!
  actor: ID!
}

input CategoryStickyThreadUpdateEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  category: ID
  actor: ID
}

input ThreadMovedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  thread: ID!
  oldCategory: ID!
  newCategory: ID!
  actor: ID!
}

input ThreadMovedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  thread: ID
  oldCategory: ID
  newCategory: ID
  actor: ID
}

input ForumCategoryCreateInput {
  parent: ID
  title: String!
  description: String!
  status: JSONObject!
}

input ForumCategoryUpdateInput {
  parent: ID
  title: String
  description: String
  status: JSONObject
}

input PostTextUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  post: ID!
  newText: String!
}

input PostTextUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  post: ID
  newText: String
}

input ForumPostReactionCreateInput {
  member: ID!
  post: ID!
  reaction: PostReaction!
}

input ForumPostReactionUpdateInput {
  member: ID
  post: ID
  reaction: PostReaction
}

input PostDeletedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  actor: ID!
  rationale: String!
}

input PostDeletedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  actor: ID
  rationale: String
}

input PostAddedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  post: ID!
  isEditable: Boolean
  text: String!
}

input PostAddedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  post: ID
  isEditable: Boolean
  text: String
}

input PostModeratedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  post: ID!
  rationale: String!
  actor: ID!
}

input PostModeratedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  post: ID
  rationale: String
  actor: ID
}

input PostReactedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  post: ID!
  reactionResult: JSONObject!
  reactingMember: ID!
}

input PostReactedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  post: ID
  reactionResult: JSONObject
  reactingMember: ID
}

input ForumPostCreateInput {
  author: ID!
  thread: ID!
  text: String!
  repliesTo: ID
  status: JSONObject!
  isVisible: Boolean!
  origin: JSONObject!
  deletedInEvent: ID
}

input ForumPostUpdateInput {
  author: ID
  thread: ID
  text: String
  repliesTo: ID
  status: JSONObject
  isVisible: Boolean
  origin: JSONObject
  deletedInEvent: ID
}

input VoteOnPollEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  pollAlternative: ID!
  votingMember: ID!
}

input VoteOnPollEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  pollAlternative: ID
  votingMember: ID
}

input ForumPollAlternativeCreateInput {
  index: Float!
  poll: ID!
  text: String!
}

input ForumPollAlternativeUpdateInput {
  index: Float
  poll: ID
  text: String
}

input ForumPollCreateInput {
  thread: ID!
  description: String!
  endTime: DateTime!
}

input ForumPollUpdateInput {
  thread: ID
  description: String
  endTime: DateTime
}

input ThreadCreatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  thread: ID!
  title: String!
  text: String!
}

input ThreadCreatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  thread: ID
  title: String
  text: String
}

input ThreadMetadataUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  thread: ID!
  newTitle: String
}

input ThreadMetadataUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  thread: ID
  newTitle: String
}

input ForumThreadTagCreateInput {
  visibleThreadsCount: Float!
}

input ForumThreadTagUpdateInput {
  visibleThreadsCount: Float
}

input ThreadDeletedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  thread: ID!
}

input ThreadDeletedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  thread: ID
}

input ThreadModeratedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  thread: ID!
  rationale: String!
  actor: ID!
}

input ThreadModeratedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  thread: ID
  rationale: String
  actor: ID
}

input ForumThreadCreateInput {
  author: ID!
  category: ID!
  title: String!
  initialPost: ID
  visiblePostsCount: Float!
  isSticky: Boolean!
  status: JSONObject!
  isVisible: Boolean!
}

input ForumThreadUpdateInput {
  author: ID
  category: ID
  title: String
  initialPost: ID
  visiblePostsCount: Float
  isSticky: Boolean
  status: JSONObject
  isVisible: Boolean
}

input BountyFundedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  contribution: ID!
}

input BountyFundedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  contribution: ID
}

input BountyFundingWithdrawalEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  contribution: ID!
}

input BountyFundingWithdrawalEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  contribution: ID
}

input BountyContributionCreateInput {
  bounty: ID!
  contributor: ID
  contributorId: String
  amount: String!
}

input BountyContributionUpdateInput {
  bounty: ID
  contributor: ID
  contributorId: String
  amount: String
}

input WorkEntryAnnouncedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  entry: ID!
}

input WorkEntryAnnouncedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  entry: ID
}

input WorkEntryWithdrawnEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  entry: ID!
}

input WorkEntryWithdrawnEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  entry: ID
}

input WorkEntrySlashedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  entry: ID!
}

input WorkEntrySlashedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  entry: ID
}

input WorkSubmittedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  bounty: ID!
  entry: ID!
  title: String
  description: String
}

input WorkSubmittedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  bounty: ID
  entry: ID
  title: String
  description: String
}

input WorkEntrantFundsWithdrawnEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  entry: ID!
}

input WorkEntrantFundsWithdrawnEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  entry: ID
}

input BountyEntryCreateInput {
  bounty: ID!
  worker: ID!
  stakingAccount: String
  workSubmitted: Boolean!
  status: JSONObject!
}

input BountyEntryUpdateInput {
  bounty: ID
  worker: ID
  stakingAccount: String
  workSubmitted: Boolean
  status: JSONObject
}

input BountyCreatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  bounty: ID!
}

input BountyCreatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  bounty: ID
}

input BountyCanceledEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  bounty: ID!
}

input BountyCanceledEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  bounty: ID
}

input BountyVetoedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  bounty: ID!
}

input BountyVetoedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  bounty: ID
}

input BountyMaxFundingReachedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  bounty: ID!
}

input BountyMaxFundingReachedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  bounty: ID
}

input BountyRemovedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  bounty: ID!
}

input BountyRemovedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  bounty: ID
}

input OracleJudgmentSubmittedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  bounty: ID!
  rationale: String
}

input OracleJudgmentSubmittedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  bounty: ID
  rationale: String
}

input BountyCreatorCherryWithdrawalEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  bounty: ID!
}

input BountyCreatorCherryWithdrawalEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  bounty: ID
}

input BountyCreateInput {
  title: String
  description: String
  bannerImageUri: String
  cherry: String!
  entrantStake: String!
  creator: ID
  oracle: ID
  fundingType: JSONObject!
  entrantWhitelist: ID
  workPeriod: Float!
  judgingPeriod: Float!
  stage: BountyStage!
  totalFunding: String!
  discussionThread: ID
  isTerminated: Boolean!
}

input BountyUpdateInput {
  title: String
  description: String
  bannerImageUri: String
  cherry: String
  entrantStake: String
  creator: ID
  oracle: ID
  fundingType: JSONObject
  entrantWhitelist: ID
  workPeriod: Float
  judgingPeriod: Float
  stage: BountyStage
  totalFunding: String
  discussionThread: ID
  isTerminated: Boolean
}

input BountyEntrantWhitelistCreateInput {
  phantom: Float
}

input BountyEntrantWhitelistUpdateInput {
  phantom: Float
}

input CuratorCreateInput {
  dummy: Float
}

input CuratorUpdateInput {
  dummy: Float
}

input ChannelNftCollectorsCreateInput {
  channel: ID!
  member: ID
  curatorGroup: ID
  amount: Float!
  lastIncreaseAt: DateTime!
}

input ChannelNftCollectorsUpdateInput {
  channel: ID
  member: ID
  curatorGroup: ID
  amount: Float
  lastIncreaseAt: DateTime
}

input VideoCategoryCreateInput {
  name: String
  activeVideosCounter: Float!
  createdInBlock: Float!
}

input VideoCategoryUpdateInput {
  name: String
  activeVideosCounter: Float
  createdInBlock: Float
}

input GeoCoordinatesCreateInput {
  latitude: Float!
  longitude: Float!
}

input GeoCoordinatesUpdateInput {
  latitude: Float
  longitude: Float
}

input DistributionBucketFamilyGeographicAreaCreateInput {
  area: JSONObject!
  distributionBucketFamilyMetadata: ID!
}

input DistributionBucketFamilyGeographicAreaUpdateInput {
  area: JSONObject
  distributionBucketFamilyMetadata: ID
}

input DistributionBucketFamilyMetadataCreateInput {
  region: String
  description: String
  latencyTestTargets: [String!]
}

input DistributionBucketFamilyMetadataUpdateInput {
  region: String
  description: String
  latencyTestTargets: [String!]
}

input DistributionBucketFamilyCreateInput {
  metadata: ID
}

input DistributionBucketFamilyUpdateInput {
  metadata: ID
}

input DistributionBucketCreateInput {
  family: ID!
  bucketIndex: Float!
  acceptingNewBags: Boolean!
  distributing: Boolean!
}

input DistributionBucketUpdateInput {
  family: ID
  bucketIndex: Float
  acceptingNewBags: Boolean
  distributing: Boolean
}

input DistributionBucketOperatorCreateInput {
  distributionBucket: ID!
  workerId: Float!
  status: DistributionBucketOperatorStatus!
  metadata: ID
}

input DistributionBucketOperatorUpdateInput {
  distributionBucket: ID
  workerId: Float
  status: DistributionBucketOperatorStatus
  metadata: ID
}

input DistributionBucketOperatorMetadataCreateInput {
  nodeEndpoint: String
  nodeLocation: ID
  extra: String
}

input DistributionBucketOperatorMetadataUpdateInput {
  nodeEndpoint: String
  nodeLocation: ID
  extra: String
}

input NodeLocationMetadataCreateInput {
  countryCode: String
  city: String
  coordinates: ID
}

input NodeLocationMetadataUpdateInput {
  countryCode: String
  city: String
  coordinates: ID
}

input StorageBucketOperatorMetadataCreateInput {
  nodeEndpoint: String
  nodeLocation: ID
  extra: String
}

input StorageBucketOperatorMetadataUpdateInput {
  nodeEndpoint: String
  nodeLocation: ID
  extra: String
}

input StorageBucketCreateInput {
  operatorStatus: JSONObject!
  operatorMetadata: ID
  acceptingNewBags: Boolean!
  dataObjectsSizeLimit: String!
  dataObjectCountLimit: String!
  dataObjectsCount: String!
  dataObjectsSize: String!
}

input StorageBucketUpdateInput {
  operatorStatus: JSONObject
  operatorMetadata: ID
  acceptingNewBags: Boolean
  dataObjectsSizeLimit: String
  dataObjectCountLimit: String
  dataObjectsCount: String
  dataObjectsSize: String
}

input StorageBagCreateInput {
  owner: JSONObject!
}

input StorageBagUpdateInput {
  owner: JSONObject
}

input StorageDataObjectCreateInput {
  isAccepted: Boolean!
  size: String!
  storageBag: ID!
  ipfsHash: String!
  type: JSONObject!
  deletionPrize: String!
  unsetAt: DateTime
}

input StorageDataObjectUpdateInput {
  isAccepted: Boolean
  size: String
  storageBag: ID
  ipfsHash: String
  type: JSONObject
  deletionPrize: String
  unsetAt: DateTime
}

input LanguageCreateInput {
  iso: String!
  createdInBlock: Float!
}

input LanguageUpdateInput {
  iso: String
  createdInBlock: Float
}

input AuctionBidMadeEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  member: ID!
  video: ID!
  bidAmount: String!
  ownerMember: ID
  ownerCuratorGroup: ID
  previousTopBid: ID
  previousTopBidder: ID
}

input AuctionBidMadeEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  member: ID
  video: ID
  bidAmount: String
  ownerMember: ID
  ownerCuratorGroup: ID
  previousTopBid: ID
  previousTopBidder: ID
}

input BidMadeCompletingAuctionEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  member: ID!
  video: ID!
  ownerMember: ID
  ownerCuratorGroup: ID
  price: String!
  winningBid: ID!
  previousTopBid: ID
  previousTopBidder: ID
}

input BidMadeCompletingAuctionEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  member: ID
  video: ID
  ownerMember: ID
  ownerCuratorGroup: ID
  price: String
  winningBid: ID
  previousTopBid: ID
  previousTopBidder: ID
}

input EnglishAuctionSettledEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  winner: ID!
  winningBid: ID!
  video: ID!
  ownerMember: ID
  ownerCuratorGroup: ID
}

input EnglishAuctionSettledEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  winner: ID
  winningBid: ID
  video: ID
  ownerMember: ID
  ownerCuratorGroup: ID
}

input OpenAuctionBidAcceptedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  contentActor: JSONObject!
  video: ID!
  ownerMember: ID
  ownerCuratorGroup: ID
  winningBid: ID
  winningBidder: ID
}

input OpenAuctionBidAcceptedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  contentActor: JSONObject
  video: ID
  ownerMember: ID
  ownerCuratorGroup: ID
  winningBid: ID
  winningBidder: ID
}

input BidCreateInput {
  auction: ID!
  nft: ID!
  bidder: ID!
  amount: String!
  isCanceled: Boolean!
  createdInBlock: Float!
  indexInBlock: Float!
}

input BidUpdateInput {
  auction: ID
  nft: ID
  bidder: ID
  amount: String
  isCanceled: Boolean
  createdInBlock: Float
  indexInBlock: Float
}

input EnglishAuctionStartedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  actor: JSONObject!
  video: ID!
  auction: ID!
  ownerMember: ID
  ownerCuratorGroup: ID
}

input EnglishAuctionStartedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  actor: JSONObject
  video: ID
  auction: ID
  ownerMember: ID
  ownerCuratorGroup: ID
}

input OpenAuctionStartedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  actor: JSONObject!
  video: ID!
  auction: ID!
  ownerMember: ID
  ownerCuratorGroup: ID
}

input OpenAuctionStartedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  actor: JSONObject
  video: ID
  auction: ID
  ownerMember: ID
  ownerCuratorGroup: ID
}

input TransactionalStatusUpdateCreateInput {
  nft: ID!
  transactionalStatus: JSONObject!
  transactionalStatusAuction: ID
  changedAt: Float!
}

input TransactionalStatusUpdateUpdateInput {
  nft: ID
  transactionalStatus: JSONObject
  transactionalStatusAuction: ID
  changedAt: Float
}

input AuctionCreateInput {
  nft: ID!
  initialOwner: ID
  winningMember: ID
  startingPrice: String!
  buyNowPrice: String
  auctionType: JSONObject!
  topBid: ID
  startsAtBlock: Float!
  endedAtBlock: Float
  isCanceled: Boolean!
  isCompleted: Boolean!
}

input AuctionUpdateInput {
  nft: ID
  initialOwner: ID
  winningMember: ID
  startingPrice: String
  buyNowPrice: String
  auctionType: JSONObject
  topBid: ID
  startsAtBlock: Float
  endedAtBlock: Float
  isCanceled: Boolean
  isCompleted: Boolean
}

input OwnedNftCreateInput {
  ownerMember: ID
  metadata: String!
  transactionalStatus: JSONObject!
  transactionalStatusAuction: ID
  creatorRoyalty: Float
  ownerCuratorGroup: ID
  isOwnedByChannel: Boolean!
  creatorChannel: ID!
  lastSalePrice: String
  lastSaleDate: DateTime
}

input OwnedNftUpdateInput {
  ownerMember: ID
  metadata: String
  transactionalStatus: JSONObject
  transactionalStatusAuction: ID
  creatorRoyalty: Float
  ownerCuratorGroup: ID
  isOwnedByChannel: Boolean
  creatorChannel: ID
  lastSalePrice: String
  lastSaleDate: DateTime
}

input LicenseCreateInput {
  code: Float
  attribution: String
  customText: String
}

input LicenseUpdateInput {
  code: Float
  attribution: String
  customText: String
}

input VideoMediaEncodingCreateInput {
  codecName: String
  container: String
  mimeMediaType: String
}

input VideoMediaEncodingUpdateInput {
  codecName: String
  container: String
  mimeMediaType: String
}

input VideoMediaMetadataCreateInput {
  encoding: ID
  pixelWidth: Float
  pixelHeight: Float
  size: String
  createdInBlock: Float!
}

input VideoMediaMetadataUpdateInput {
  encoding: ID
  pixelWidth: Float
  pixelHeight: Float
  size: String
  createdInBlock: Float
}

input CommentReactionCreateInput {
  reactionId: Float!
  member: ID!
  memberId: String!
  comment: ID!
  video: ID!
}

input CommentReactionUpdateInput {
  reactionId: Float
  member: ID
  memberId: String
  comment: ID
  video: ID
}

input CommentReactionsCountByReactionIdCreateInput {
  reactionId: Float!
  count: Float!
  comment: ID!
  video: ID!
}

input CommentReactionsCountByReactionIdUpdateInput {
  reactionId: Float
  count: Float
  comment: ID
  video: ID
}

input CommentTextUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  comment: ID!
  video: ID!
  videoChannel: ID!
  newText: String!
}

input CommentTextUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  comment: ID
  video: ID
  videoChannel: ID
  newText: String
}

input CommentDeletedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  comment: ID!
  video: ID!
  videoChannel: ID!
}

input CommentDeletedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  comment: ID
  video: ID
  videoChannel: ID
}

input CommentModeratedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  comment: ID!
  video: ID!
  videoChannel: ID!
  actor: JSONObject!
  rationale: String!
}

input CommentModeratedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  comment: ID
  video: ID
  videoChannel: ID
  actor: JSONObject
  rationale: String
}

input CommentCreatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  comment: ID!
  parentCommentAuthor: ID
  video: ID!
  videoChannel: ID!
  text: String!
}

input CommentCreatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  comment: ID
  parentCommentAuthor: ID
  video: ID
  videoChannel: ID
  text: String
}

input CommentPinnedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  comment: ID!
  video: ID!
  videoChannel: ID!
  action: Boolean!
}

input CommentPinnedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  comment: ID
  video: ID
  videoChannel: ID
  action: Boolean
}

input CommentReactedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  comment: ID!
  video: ID!
  videoChannel: ID!
  reactionResult: Float!
  reactingMember: ID!
}

input CommentReactedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  comment: ID
  video: ID
  videoChannel: ID
  reactionResult: Float
  reactingMember: ID
}

input CommentCreateInput {
  author: ID!
  text: String!
  video: ID!
  status: CommentStatus!
  parentComment: ID
  repliesCount: Float!
  reactionsCount: Float!
  reactionsAndRepliesCount: Float!
  isEdited: Boolean!
}

input CommentUpdateInput {
  author: ID
  text: String
  video: ID
  status: CommentStatus
  parentComment: ID
  repliesCount: Float
  reactionsCount: Float
  reactionsAndRepliesCount: Float
  isEdited: Boolean
}

input VideoReactionCreateInput {
  reaction: VideoReactionOptions!
  member: ID!
  memberId: String!
  video: ID!
}

input VideoReactionUpdateInput {
  reaction: VideoReactionOptions
  member: ID
  memberId: String
  video: ID
}

input VideoReactionsCountByReactionTypeCreateInput {
  reaction: VideoReactionOptions!
  count: Float!
  video: ID!
}

input VideoReactionsCountByReactionTypeUpdateInput {
  reaction: VideoReactionOptions
  count: Float
  video: ID
}

input AuctionCanceledEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  contentActor: JSONObject!
  video: ID!
  ownerMember: ID
  ownerCuratorGroup: ID
}

input AuctionCanceledEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  contentActor: JSONObject
  video: ID
  ownerMember: ID
  ownerCuratorGroup: ID
}

input BuyNowCanceledEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  video: ID!
  contentActor: JSONObject!
  ownerMember: ID
  ownerCuratorGroup: ID
}

input BuyNowCanceledEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  video: ID
  contentActor: JSONObject
  ownerMember: ID
  ownerCuratorGroup: ID
}

input BuyNowPriceUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  video: ID!
  contentActor: JSONObject!
  newPrice: String!
  ownerMember: ID
  ownerCuratorGroup: ID
}

input BuyNowPriceUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  video: ID
  contentActor: JSONObject
  newPrice: String
  ownerMember: ID
  ownerCuratorGroup: ID
}

input NftBoughtEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  video: ID!
  member: ID!
  ownerMember: ID
  ownerCuratorGroup: ID
  price: String!
}

input NftBoughtEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  video: ID
  member: ID
  ownerMember: ID
  ownerCuratorGroup: ID
  price: String
}

input NftIssuedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  contentActor: JSONObject!
  video: ID!
  royalty: Float
  metadata: String!
  ownerMember: ID
  ownerCuratorGroup: ID
}

input NftIssuedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  contentActor: JSONObject
  video: ID
  royalty: Float
  metadata: String
  ownerMember: ID
  ownerCuratorGroup: ID
}

input NftSellOrderMadeEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  video: ID!
  contentActor: JSONObject!
  ownerMember: ID
  ownerCuratorGroup: ID
  price: String!
}

input NftSellOrderMadeEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  video: ID
  contentActor: JSONObject
  ownerMember: ID
  ownerCuratorGroup: ID
  price: String
}

input NftSlingedBackToTheOriginalArtistEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  video: ID!
  contentActor: JSONObject!
  ownerMember: ID
  ownerCuratorGroup: ID
}

input NftSlingedBackToTheOriginalArtistEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  video: ID
  contentActor: JSONObject
  ownerMember: ID
  ownerCuratorGroup: ID
}

input OfferAcceptedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  video: ID!
  ownerMember: ID
  ownerCuratorGroup: ID
  price: String
}

input OfferAcceptedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  video: ID
  ownerMember: ID
  ownerCuratorGroup: ID
  price: String
}

input OfferCanceledEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  video: ID!
  contentActor: JSONObject!
  ownerMember: ID
  ownerCuratorGroup: ID
}

input OfferCanceledEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  video: ID
  contentActor: JSONObject
  ownerMember: ID
  ownerCuratorGroup: ID
}

input OfferStartedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  video: ID!
  contentActor: JSONObject!
  member: ID!
  price: String
  ownerMember: ID
  ownerCuratorGroup: ID
}

input OfferStartedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  video: ID
  contentActor: JSONObject
  member: ID
  price: String
  ownerMember: ID
  ownerCuratorGroup: ID
}

input VideoReactedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  video: ID!
  videoChannel: ID!
  reactionResult: VideoReactionOptions!
  reactingMember: ID!
}

input VideoReactedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  video: ID
  videoChannel: ID
  reactionResult: VideoReactionOptions
  reactingMember: ID
}

input VideoReactionsPreferenceEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  video: ID!
  reactionsStatus: Boolean!
}

input VideoReactionsPreferenceEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  video: ID
  reactionsStatus: Boolean
}

input VideoCreateInput {
  channel: ID!
  category: ID
  title: String
  description: String
  duration: Float
  thumbnailPhoto: ID
  language: ID
  hasMarketing: Boolean
  publishedBeforeJoystream: DateTime
  isPublic: Boolean
  isCensored: Boolean!
  nft: ID
  isExplicit: Boolean
  license: ID
  media: ID
  mediaMetadata: ID
  createdInBlock: Float!
  isFeatured: Boolean!
  isCommentSectionEnabled: Boolean!
  commentsCount: Float!
  isReactionFeatureEnabled: Boolean!
  reactionsCount: Float!
}

input VideoUpdateInput {
  channel: ID
  category: ID
  title: String
  description: String
  duration: Float
  thumbnailPhoto: ID
  language: ID
  hasMarketing: Boolean
  publishedBeforeJoystream: DateTime
  isPublic: Boolean
  isCensored: Boolean
  nft: ID
  isExplicit: Boolean
  license: ID
  media: ID
  mediaMetadata: ID
  createdInBlock: Float
  isFeatured: Boolean
  isCommentSectionEnabled: Boolean
  commentsCount: Float
  isReactionFeatureEnabled: Boolean
  reactionsCount: Float
}

input AuctionBidCanceledEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  member: ID!
  video: ID!
  ownerMember: ID
  ownerCuratorGroup: ID
}

input AuctionBidCanceledEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  member: ID
  video: ID
  ownerMember: ID
  ownerCuratorGroup: ID
}

input CuratorGroupCreateInput {
  isActive: Boolean!
}

input CuratorGroupUpdateInput {
  isActive: Boolean
}

input ChannelCategoryCreateInput {
  name: String
  activeVideosCounter: Float!
  createdInBlock: Float!
}

input ChannelCategoryUpdateInput {
  name: String
  activeVideosCounter: Float
  createdInBlock: Float
}

input MemberBannedFromChannelEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  channel: ID!
  member: ID!
  action: Boolean!
}

input MemberBannedFromChannelEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  channel: ID
  member: ID
  action: Boolean
}

input ChannelCreateInput {
  ownerMember: ID
  ownerCuratorGroup: ID
  category: ID
  rewardAccount: String
  title: String
  description: String
  activeVideosCounter: Float!
  coverPhoto: ID
  avatarPhoto: ID
  isPublic: Boolean
  isCensored: Boolean!
  language: ID
  createdInBlock: Float!
}

input ChannelUpdateInput {
  ownerMember: ID
  ownerCuratorGroup: ID
  category: ID
  rewardAccount: String
  title: String
  description: String
  activeVideosCounter: Float
  coverPhoto: ID
  avatarPhoto: ID
  isPublic: Boolean
  isCensored: Boolean
  language: ID
  createdInBlock: Float
}

input VoteCastEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  castVote: ID!
}

input VoteCastEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  castVote: ID
}

input VoteRevealedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  castVote: ID!
}

input VoteRevealedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  castVote: ID
}

input CastVoteCreateInput {
  commitment: String!
  electionRound: ID!
  stake: String!
  stakeLocked: Boolean!
  castBy: String!
  voteFor: ID
  votePower: String!
}

input CastVoteUpdateInput {
  commitment: String
  electionRound: ID
  stake: String
  stakeLocked: Boolean
  castBy: String
  voteFor: ID
  votePower: String
}

input ReferendumStageVotingCreateInput {
  startedAtBlock: String!
  winningTargetCount: String!
  electionRound: ID!
}

input ReferendumStageVotingUpdateInput {
  startedAtBlock: String
  winningTargetCount: String
  electionRound: ID
}

input ReferendumStageRevealingCreateInput {
  startedAtBlock: String!
  winningTargetCount: String!
  electionRound: ID!
}

input ReferendumStageRevealingUpdateInput {
  startedAtBlock: String
  winningTargetCount: String
  electionRound: ID
}

input RewardPaymentEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  councilMember: ID!
  rewardAccount: String!
  paidBalance: String!
  missingBalance: String!
}

input RewardPaymentEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  councilMember: ID
  rewardAccount: String
  paidBalance: String
  missingBalance: String
}

input CouncilMemberCreateInput {
  stakingAccountId: String!
  rewardAccountId: String!
  member: ID!
  stake: String!
  lastPaymentBlock: String!
  unpaidReward: String!
  accumulatedReward: String!
  electedInCouncil: ID!
}

input CouncilMemberUpdateInput {
  stakingAccountId: String
  rewardAccountId: String
  member: ID
  stake: String
  lastPaymentBlock: String
  unpaidReward: String
  accumulatedReward: String
  electedInCouncil: ID
}

input CouncilStageUpdateCreateInput {
  stage: JSONObject!
  changedAt: String!
  electedCouncil: ID
  electionProblem: ElectionProblem
}

input CouncilStageUpdateUpdateInput {
  stage: JSONObject
  changedAt: String
  electedCouncil: ID
  electionProblem: ElectionProblem
}

input NewCouncilElectedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  electedCouncil: ID!
}

input NewCouncilElectedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  electedCouncil: ID
}

input ElectedCouncilCreateInput {
  electedAtBlock: Float!
  endedAtBlock: Float
  electedAtTime: DateTime!
  endedAtTime: DateTime
  electedAtNetwork: Network!
  endedAtNetwork: Network
  isResigned: Boolean!
}

input ElectedCouncilUpdateInput {
  electedAtBlock: Float
  endedAtBlock: Float
  electedAtTime: DateTime
  endedAtTime: DateTime
  electedAtNetwork: Network
  endedAtNetwork: Network
  isResigned: Boolean
}

input NewCandidateEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  candidate: ID!
  electionRound: ID!
  stakingAccount: String!
  rewardAccount: String!
  balance: String!
}

input NewCandidateEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  candidate: ID
  electionRound: ID
  stakingAccount: String
  rewardAccount: String
  balance: String
}

input ElectionRoundCreateInput {
  cycleId: Float!
  isFinished: Boolean!
  endedAtBlock: Float
  endedAtTime: DateTime
  endedAtNetwork: Network
  electedCouncil: ID!
  nextElectedCouncil: ID
}

input ElectionRoundUpdateInput {
  cycleId: Float
  isFinished: Boolean
  endedAtBlock: Float
  endedAtTime: DateTime
  endedAtNetwork: Network
  electedCouncil: ID
  nextElectedCouncil: ID
}

input CandidacyNoteSetEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  candidate: ID!
  noteMetadata: ID!
}

input CandidacyNoteSetEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  candidate: ID
  noteMetadata: ID
}

input CandidacyNoteMetadataCreateInput {
  header: String
  bulletPoints: [String!]!
  bannerImageUri: String
  description: String
}

input CandidacyNoteMetadataUpdateInput {
  header: String
  bulletPoints: [String!]
  bannerImageUri: String
  description: String
}

input CandidacyStakeReleaseEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  candidate: ID!
}

input CandidacyStakeReleaseEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  candidate: ID
}

input CandidacyWithdrawEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  candidate: ID!
}

input CandidacyWithdrawEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  candidate: ID
}

input CandidateCreateInput {
  stakingAccountId: String!
  rewardAccountId: String!
  member: ID!
  electionRound: ID!
  stake: String!
  stakeLocked: Boolean!
  status: CandidacyStatus!
  votePower: String!
  lastVoteReceivedAtBlock: String
  lastVoteReceivedAtEventNumber: Float
  noteMetadata: ID!
}

input CandidateUpdateInput {
  stakingAccountId: String
  rewardAccountId: String
  member: ID
  electionRound: ID
  stake: String
  stakeLocked: Boolean
  status: CandidacyStatus
  votePower: String
  lastVoteReceivedAtBlock: String
  lastVoteReceivedAtEventNumber: Float
  noteMetadata: ID
}

input InvitesTransferredEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  sourceMember: ID!
  targetMember: ID!
  numberOfInvites: Float!
}

input InvitesTransferredEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  sourceMember: ID
  targetMember: ID
  numberOfInvites: Float
}

input MemberAccountsUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  member: ID!
  newRootAccount: String
  newControllerAccount: String
}

input MemberAccountsUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  member: ID
  newRootAccount: String
  newControllerAccount: String
}

input MemberVerificationStatusUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  member: ID!
  worker: ID!
  isVerified: Boolean!
}

input MemberVerificationStatusUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  member: ID
  worker: ID
  isVerified: Boolean
}

input ProposalCreatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  proposal: ID!
}

input ProposalCreatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  proposal: ID
}

input ProposalDiscussionPostUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  post: ID!
  text: String!
}

input ProposalDiscussionPostUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  post: ID
  text: String
}

input ProposalDiscussionPostCreatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  post: ID!
  text: String!
}

input ProposalDiscussionPostCreatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  post: ID
  text: String
}

input ProposalDiscussionPostDeletedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  post: ID!
  actor: ID!
}

input ProposalDiscussionPostDeletedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  post: ID
  actor: ID
}

input ProposalDiscussionPostCreateInput {
  discussionThread: ID!
  author: ID!
  status: JSONObject!
  isVisible: Boolean!
  text: String!
  repliesTo: ID
}

input ProposalDiscussionPostUpdateInput {
  discussionThread: ID
  author: ID
  status: JSONObject
  isVisible: Boolean
  text: String
  repliesTo: ID
}

input ProposalDiscussionThreadModeChangedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  thread: ID!
  newMode: JSONObject!
  actor: ID!
}

input ProposalDiscussionThreadModeChangedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  thread: ID
  newMode: JSONObject
  actor: ID
}

input ProposalDiscussionThreadCreateInput {
  proposal: ID!
  mode: JSONObject!
}

input ProposalDiscussionThreadUpdateInput {
  proposal: ID
  mode: JSONObject
}

input ProposalStatusUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  proposal: ID!
  newStatus: JSONObject!
}

input ProposalStatusUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  proposal: ID
  newStatus: JSONObject
}

input ProposalVotedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  voter: ID!
  voteKind: ProposalVoteKind!
  proposal: ID!
  rationale: String!
  votingRound: Float!
}

input ProposalVotedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  voter: ID
  voteKind: ProposalVoteKind
  proposal: ID
  rationale: String
  votingRound: Float
}

input ProposalCancelledEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  proposal: ID!
}

input ProposalCancelledEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  proposal: ID
}

input ProposalDecisionMadeEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  proposal: ID!
  decisionStatus: JSONObject!
}

input ProposalDecisionMadeEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  proposal: ID
  decisionStatus: JSONObject
}

input ProposalExecutedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  proposal: ID!
  executionStatus: JSONObject!
}

input ProposalExecutedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  proposal: ID
  executionStatus: JSONObject
}

input ProposalCreateInput {
  title: String!
  description: String!
  details: JSONObject!
  stakingAccount: String
  creator: ID!
  exactExecutionBlock: Float
  councilApprovals: Float!
  status: JSONObject!
  isFinalized: Boolean
  statusSetAtBlock: Float!
  statusSetAtTime: DateTime!
}

input ProposalUpdateInput {
  title: String
  description: String
  details: JSONObject
  stakingAccount: String
  creator: ID
  exactExecutionBlock: Float
  councilApprovals: Float
  status: JSONObject
  isFinalized: Boolean
  statusSetAtBlock: Float
  statusSetAtTime: DateTime
}

input StakingAccountAddedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  member: ID!
  account: String!
}

input StakingAccountAddedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  member: ID
  account: String
}

input StakingAccountConfirmedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  member: ID!
  account: String!
}

input StakingAccountConfirmedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  member: ID
  account: String
}

input StakingAccountRemovedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  member: ID!
  account: String!
}

input StakingAccountRemovedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  member: ID
  account: String
}

input MembershipCreateInput {
  handle: String!
  metadata: ID!
  controllerAccount: String!
  rootAccount: String!
  entry: JSONObject!
  isVerified: Boolean!
  boundAccounts: [String!]!
  inviteCount: Float!
  invitedBy: ID
  referredBy: ID
  isFoundingMember: Boolean!
  isCouncilMember: Boolean!
}

input MembershipUpdateInput {
  handle: String
  metadata: ID
  controllerAccount: String
  rootAccount: String
  entry: JSONObject
  isVerified: Boolean
  boundAccounts: [String!]
  inviteCount: Float
  invitedBy: ID
  referredBy: ID
  isFoundingMember: Boolean
  isCouncilMember: Boolean
}

input RewardPaidEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  rewardAccount: String!
  amount: String!
  paymentType: RewardPaymentType!
}

input RewardPaidEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  rewardAccount: String
  amount: String
  paymentType: RewardPaymentType
}

input StakeSlashedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  requestedAmount: String!
  slashedAmount: String!
  rationale: String
}

input StakeSlashedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  requestedAmount: String
  slashedAmount: String
  rationale: String
}

input LeaderSetEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID
}

input LeaderSetEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
}

input LeaderUnsetEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  leader: ID!
}

input LeaderUnsetEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  leader: ID
}

input NewMissedRewardLevelReachedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  newMissedRewardAmount: String!
}

input NewMissedRewardLevelReachedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  newMissedRewardAmount: String
}

input StakeDecreasedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  amount: String!
}

input StakeDecreasedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  amount: String
}

input StakeIncreasedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  amount: String!
}

input StakeIncreasedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  amount: String
}

input TerminatedLeaderEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  penalty: String
  rationale: String
}

input TerminatedLeaderEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  penalty: String
  rationale: String
}

input TerminatedWorkerEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  penalty: String
  rationale: String
}

input TerminatedWorkerEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  penalty: String
  rationale: String
}

input WorkerExitedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
}

input WorkerExitedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
}

input WorkerRewardAccountUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  newRewardAccount: String!
}

input WorkerRewardAccountUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  newRewardAccount: String
}

input WorkerRewardAmountUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  newRewardPerBlock: String!
}

input WorkerRewardAmountUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  newRewardPerBlock: String
}

input WorkerRoleAccountUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  newRoleAccount: String!
}

input WorkerRoleAccountUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  newRoleAccount: String
}

input WorkerStartedLeavingEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  worker: ID!
  rationale: String
}

input WorkerStartedLeavingEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  worker: ID
  rationale: String
}

input WorkerCreateInput {
  runtimeId: Float!
  group: ID!
  groupId: String!
  membership: ID!
  roleAccount: String!
  rewardAccount: String!
  stakeAccount: String!
  status: JSONObject!
  isLead: Boolean!
  isActive: Boolean!
  stake: String!
  rewardPerBlock: String!
  missingRewardAmount: String
  entry: ID!
  application: ID!
  storage: String
}

input WorkerUpdateInput {
  runtimeId: Float
  group: ID
  groupId: String
  membership: ID
  roleAccount: String
  rewardAccount: String
  stakeAccount: String
  status: JSONObject
  isLead: Boolean
  isActive: Boolean
  stake: String
  rewardPerBlock: String
  missingRewardAmount: String
  entry: ID
  application: ID
  storage: String
}

input ApplicationWithdrawnEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  application: ID!
}

input ApplicationWithdrawnEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  application: ID
}

input BudgetSetEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  newBudget: String!
}

input BudgetSetEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  newBudget: String
}

input BudgetSpendingEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  reciever: String!
  amount: String!
  rationale: String
}

input BudgetSpendingEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  reciever: String
  amount: String
  rationale: String
}

input BudgetUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  budgetChangeAmount: String!
}

input BudgetUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  budgetChangeAmount: String
}

input WorkingGroupCreateInput {
  name: String!
  metadata: ID
  leader: ID
  budget: String!
}

input WorkingGroupUpdateInput {
  name: String
  metadata: ID
  leader: ID
  budget: String
}

input OpeningFilledEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  group: ID!
  opening: ID!
}

input OpeningFilledEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  group: ID
  opening: ID
}

input FundingRequestDestinationCreateInput {
  amount: String!
  account: String!
  list: ID!
}

input FundingRequestDestinationUpdateInput {
  amount: String
  account: String
  list: ID
}

input FundingRequestDestinationsListCreateInput {
  phantom: Float
}

input FundingRequestDestinationsListUpdateInput {
  phantom: Float
}

input RuntimeWasmBytecodeCreateInput {
  bytecode: String!
}

input RuntimeWasmBytecodeUpdateInput {
  bytecode: String
}

input GeographicalAreaContinentWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  code_eq: Continent
  code_in: [Continent!]
  AND: [GeographicalAreaContinentWhereInput!]
  OR: [GeographicalAreaContinentWhereInput!]
  NOT: [GeographicalAreaContinentWhereInput!]
}

input GeographicalAreaContinentWhereUniqueInput {
  id: ID!
}

input GeographicalAreaContinentCreateInput {
  code: Continent
}

input GeographicalAreaContinentUpdateInput {
  code: Continent
}

input PostReactionResultValidWhereInput {
  id_eq: ID
  id_in: [ID!]
  createdAt_eq: DateTime
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdById_eq: ID
  createdById_in: [ID!]
  updatedAt_eq: DateTime
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedById_eq: ID
  updatedById_in: [ID!]
  deletedAt_all: Boolean
  deletedAt_eq: DateTime
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedById_eq: ID
  deletedById_in: [ID!]
  reaction_eq: PostReaction
  reaction_in: [PostReaction!]
  AND: [PostReactionResultValidWhereInput!]
  OR: [PostReactionResultValidWhereInput!]
  NOT: [PostReactionResultValidWhereInput!]
}

input PostReactionResultValidWhereUniqueInput {
  id: ID!
}

input PostReactionResultValidCreateInput {
  reaction: PostReaction!
}

input PostReactionResultValidUpdateInput {
  reaction: PostReaction
}

input WorkingGroupApplicationCreateInput {
  runtimeId: Float!
  opening: ID!
  applicant: ID!
  stake: String!
  roleAccount: String!
  rewardAccount: String!
  stakingAccount: String!
  status: JSONObject!
}

input WorkingGroupApplicationUpdateInput {
  runtimeId: Float
  opening: ID
  applicant: ID
  stake: String
  roleAccount: String
  rewardAccount: String
  stakingAccount: String
  status: JSONObject
}

input ApplicationFormQuestionAnswerCreateInput {
  application: ID!
  question: ID!
  answer: String!
}

input ApplicationFormQuestionAnswerUpdateInput {
  application: ID
  question: ID
  answer: String
}

input BudgetBalanceSetEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  balance: String!
}

input BudgetBalanceSetEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  balance: String
}

input BudgetIncrementUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  amount: String!
}

input BudgetIncrementUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  amount: String
}

input BudgetRefillEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  balance: String!
}

input BudgetRefillEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  balance: String
}

input BudgetRefillPlannedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  nextRefillInBlock: Float!
}

input BudgetRefillPlannedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  nextRefillInBlock: Float
}

input CouncilorRewardUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  rewardAmount: String!
}

input CouncilorRewardUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  rewardAmount: String
}

input InitialInvitationBalanceUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  newInitialBalance: String!
}

input InitialInvitationBalanceUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  newInitialBalance: String
}

input InitialInvitationCountUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  newInitialInvitationCount: Float!
}

input InitialInvitationCountUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  newInitialInvitationCount: Float
}

input LeaderInvitationQuotaUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  newInvitationQuota: Float!
}

input LeaderInvitationQuotaUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  newInvitationQuota: Float
}

input MembershipPriceUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  newPrice: String!
}

input MembershipPriceUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  newPrice: String
}

input MembershipSystemSnapshotCreateInput {
  snapshotBlock: Float!
  defaultInviteCount: Float!
  membershipPrice: String!
  referralCut: Float!
  invitedInitialBalance: String!
}

input MembershipSystemSnapshotUpdateInput {
  snapshotBlock: Float
  defaultInviteCount: Float
  membershipPrice: String
  referralCut: Float
  invitedInitialBalance: String
}

input MetaprotocolTransactionStatusEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  status: JSONObject!
}

input MetaprotocolTransactionStatusEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  status: JSONObject
}

input NewCouncilNotElectedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
}

input NewCouncilNotElectedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
}

input NotEnoughCandidatesEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
}

input NotEnoughCandidatesEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
}

input ReferendumFinishedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
}

input ReferendumFinishedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
}

input ReferendumStartedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  winningTargetCount: String!
}

input ReferendumStartedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  winningTargetCount: String
}

input ReferendumStartedForcefullyEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  winningTargetCount: String!
}

input ReferendumStartedForcefullyEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  winningTargetCount: String
}

input ReferralCutUpdatedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  newValue: Float!
}

input ReferralCutUpdatedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  newValue: Float
}

input RequestFundedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  account: String!
  amount: String!
}

input RequestFundedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  account: String
  amount: String
}

input RevealingStageStartedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
}

input RevealingStageStartedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
}

input StakeReleasedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  stakingAccount: String!
}

input StakeReleasedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  stakingAccount: String
}

input StorageSystemParametersCreateInput {
  blacklist: [String!]!
  storageBucketsPerBagLimit: Float!
  distributionBucketsPerBagLimit: Float!
  uploadingBlocked: Boolean!
  dataObjectFeePerMb: String!
  storageBucketMaxObjectsCountLimit: String!
  storageBucketMaxObjectsSizeLimit: String!
  nextDataObjectId: String!
}

input StorageSystemParametersUpdateInput {
  blacklist: [String!]
  storageBucketsPerBagLimit: Float
  distributionBucketsPerBagLimit: Float
  uploadingBlocked: Boolean
  dataObjectFeePerMb: String
  storageBucketMaxObjectsCountLimit: String
  storageBucketMaxObjectsSizeLimit: String
  nextDataObjectId: String
}

input VotingPeriodStartedEventCreateInput {
  inExtrinsic: String
  inBlock: Float!
  network: Network!
  indexInBlock: Float!
  numOfCandidates: String!
}

input VotingPeriodStartedEventUpdateInput {
  inExtrinsic: String
  inBlock: Float
  network: Network
  indexInBlock: Float
  numOfCandidates: String
}
