---
# Configure chain spec and start joystream-node service on the servers

- set_fact:
    chain_path: "chain"

- name: Create chain directory
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ chain_path }}"

- name: Copying raw chain spec file
  copy:
    src: '{{ data_path }}/chain/chainspec-raw.json'
    dest: '{{ chain_path }}/chainspec-raw.json'

# Assume hostname is a DNS name
- name: Set MultiAddress to listen on (dns)
  set_fact:
    listen_multi_addr: '/dns4/{{ inventory_hostname }}/tcp/30333'
  run_once: true

# If inventory hostname is infact an ip address
- name: Set MultiAddress to listen on (ip)
  set_fact:
    listen_multi_addr: '/ip4/{{ inventory_hostname }}/tcp/30333'
  run_once: true
  when: inventory_hostname | ansible.utils.ipaddr

- name: Create a service file
  template:
    src: joystream-node.service.j2
    dest: /etc/systemd/system/joystream-node.service
  vars:
    template_chain_spec_path: "{{ chain_path }}/chainspec-raw.json"
    template_user: "{{ ansible_user }}"
    template_working_dir: "{{ ansible_env.HOME }}"
  become: true

- name: Start service joystream-node, if not started
  systemd:
    name: joystream-node
    state: started
    enabled: yes
    daemon_reload: yes
  become: true
